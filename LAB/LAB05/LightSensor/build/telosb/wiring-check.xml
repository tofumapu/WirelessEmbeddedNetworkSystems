<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="15:LightSensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7a619f412cb0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7a619f4178c0"/></to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7a619f4178c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7a619f21a590"/></to>
    </wire>
    <wire loc="16:LightSensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7a619f4040d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7a619f3e65a0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7a619f3e65a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7a619f209020"/></to>
    </wire>
    <wire loc="17:LightSensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f40e1e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619edf7370"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619edf7370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef98610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:LightSensorAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7a619f3f2620"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7a619edef750"/></to>
    </wire>
    <wire loc="47:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7a619edef750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7a619ded0570"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619e447b20"/></to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619dc9dca0"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619e8cfbc0"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619e46e470"/></to>
    </wire>
    <wire loc="37:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619eaaa150"/></to>
    </wire>
    <wire loc="96:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619de9bca0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619ed3a680"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619ef8f400"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7a619f21ac00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7a619f9053a0"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7a619f9053a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7a619f4b0140"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7a619f2196c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619f3e4ca0"/></to>
    </wire>
    <wire loc="48:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619f3e4ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619f3de020"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f219dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7a619f3de730"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7a619f3df3a0"/></to>
    </wire>
    <wire loc="46:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7a619f3df3a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619f3bd2a0"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7a619f3dee10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619f3d71a0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7a619f3dd520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619f1e2c40"/></to>
    </wire>
    <wire loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619f3bd2a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619f3a6020"/></to>
    </wire>
    <wire loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7a619f3b6850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7a619f3a66d0"/></to>
    </wire>
    <wire loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7a619f5884c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7a619f3a59a0"/></to>
    </wire>
    <wire loc="113:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7a619f362a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f29f6d0"/></to>
    </wire>
    <wire loc="126:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7a619f34f410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f297b30"/></to>
    </wire>
    <wire loc="108:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7a619f359d10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f2a4160"/></to>
    </wire>
    <wire loc="149:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7a619f33b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f27ecb0"/></to>
    </wire>
    <wire loc="107:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7a619f35e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f2a5480"/></to>
    </wire>
    <wire loc="148:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7a619f342570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f27e020"/></to>
    </wire>
    <wire loc="170:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7a619f338020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f266cb0"/></to>
    </wire>
    <wire loc="154:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7a619f34aa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f277220"/></to>
    </wire>
    <wire loc="99:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7a619f3690c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f2f49d0"/></to>
    </wire>
    <wire loc="135:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7a619f33d020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f28c2f0"/></to>
    </wire>
    <wire loc="134:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7a619f344890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f28d610"/></to>
    </wire>
    <wire loc="133:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7a619f34e8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f28f220"/></to>
    </wire>
    <wire loc="115:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7a619f358c70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f29c7a0"/></to>
    </wire>
    <wire loc="156:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7a619f33a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f2752f0"/></to>
    </wire>
    <wire loc="140:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7a619f34c020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f2876d0"/></to>
    </wire>
    <wire loc="114:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7a619f35eda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f29dac0"/></to>
    </wire>
    <wire loc="93:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7a619f36a7b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f302540"/></to>
    </wire>
    <wire loc="155:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7a619f3413e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f276610"/></to>
    </wire>
    <wire loc="106:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7a619f3685a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f2a6020"/></to>
    </wire>
    <wire loc="161:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7a619f348020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f2706d0"/></to>
    </wire>
    <wire loc="101:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7a619f352dc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f2aca90"/></to>
    </wire>
    <wire loc="142:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7a619f33c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f2857a0"/></to>
    </wire>
    <wire loc="100:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7a619f35f140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f2adde0"/></to>
    </wire>
    <wire loc="141:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7a619f343700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f286ac0"/></to>
    </wire>
    <wire loc="163:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7a619f339020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f26d7a0"/></to>
    </wire>
    <wire loc="147:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7a619f34b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f280b30"/></to>
    </wire>
    <wire loc="120:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="162:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7a619f3401f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f26fac0"/></to>
    </wire>
    <wire loc="128:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7a619f33e020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7a619f295cb0"/></to>
    </wire>
    <wire loc="169:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7a619f33f020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f266020"/></to>
    </wire>
    <wire loc="127:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7a619f346a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7a619f295020"/></to>
    </wire>
    <wire loc="168:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7a619f3475a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7a619f268b30"/></to>
    </wire>
    <wire loc="94:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7a619f300450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f301d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7a619f300aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7a619f261aa0"/></to>
    </wire>
    <wire loc="96:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7a619f2ff120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7a619f25e260"/></to>
    </wire>
    <wire loc="102:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f2ab930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f302540"/></to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f2a9020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f301d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f2a3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f302540"/></to>
    </wire>
    <wire loc="110:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f2a27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f301d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f29b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f302540"/></to>
    </wire>
    <wire loc="117:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f29ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f301d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7a619f2f82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7a619f2f8940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7a619f25e9f0"/></to>
    </wire>
    <wire loc="123:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7a619f2f7020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7a619f25d240"/></to>
    </wire>
    <wire loc="129:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f294b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="130:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f2922f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f28b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="137:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f28a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f284610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="144:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f283c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f27cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="151:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f27a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f274160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="158:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f2737a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f26c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="165:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f26bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619f265b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></to>
    </wire>
    <wire loc="172:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7a619f2632f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f4ae040"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7a619f4aa490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7a619f89c3b0"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619f1e2c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619f20d8e0"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7a619f2017b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7a619f1e5360"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7a619f1e5360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7a619efd3020"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7a619f207980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7a619f1e46a0"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7a619f1e46a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7a619efb6b90"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7a619f206ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7a619f1e39c0"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7a619f1e39c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7a619efb0710"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7a619efb92f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7a619f18a200"/></to>
    </wire>
    <wire loc="486:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7a619f18a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f066740"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7a619efb5de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7a619f188200"/></to>
    </wire>
    <wire loc="487:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7a619f188200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f061100"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7a619efaf930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7a619f186200"/></to>
    </wire>
    <wire loc="488:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7a619f186200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f05dd10"/></to>
    </wire>
    <wire loc="442:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7a619f1cb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f100100"/></to>
    </wire>
    <wire loc="455:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7a619f1b7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0d0d10"/></to>
    </wire>
    <wire loc="531:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7a619f16d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0c2d10"/></to>
    </wire>
    <wire loc="551:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7a619f149570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f036100"/></to>
    </wire>
    <wire loc="532:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7a619f16b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0bd740"/></to>
    </wire>
    <wire loc="460:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7a619f1b3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0c6100"/></to>
    </wire>
    <wire loc="473:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7a619f19e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f097e00"/></to>
    </wire>
    <wire loc="497:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7a619f17a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f040d10"/></to>
    </wire>
    <wire loc="535:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7a619f165580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0b4d10"/></to>
    </wire>
    <wire loc="545:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7a619f155570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f053100"/></to>
    </wire>
    <wire loc="557:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7a619f140580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f032d10"/></to>
    </wire>
    <wire loc="445:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7a619f1c5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0f1100"/></to>
    </wire>
    <wire loc="536:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7a619f163580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0ae740"/></to>
    </wire>
    <wire loc="450:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7a619f1c1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0e8740"/></to>
    </wire>
    <wire loc="463:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7a619f1ad020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0b8100"/></to>
    </wire>
    <wire loc="476:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7a619f198200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f088d10"/></to>
    </wire>
    <wire loc="489:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7a619f184200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f058740"/></to>
    </wire>
    <wire loc="500:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7a619f173200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f032d10"/></to>
    </wire>
    <wire loc="440:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7a619f1cf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f10ad10"/></to>
    </wire>
    <wire loc="453:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7a619f1bb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0da860"/></to>
    </wire>
    <wire loc="466:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7a619f1a7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0a9100"/></to>
    </wire>
    <wire loc="530:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7a619f16f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0c2d10"/></to>
    </wire>
    <wire loc="548:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7a619f14f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f045100"/></to>
    </wire>
    <wire loc="555:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7a619f142570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f032d10"/></to>
    </wire>
    <wire loc="541:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7a619f15b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f06cd10"/></to>
    </wire>
    <wire loc="471:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7a619f1a2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0a0a60"/></to>
    </wire>
    <wire loc="484:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7a619f18e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f070100"/></to>
    </wire>
    <wire loc="495:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7a619f17e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f04a740"/></to>
    </wire>
    <wire loc="549:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7a619f14d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f040d10"/></to>
    </wire>
    <wire loc="538:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7a619f161570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f07ad10"/></to>
    </wire>
    <wire loc="443:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7a619f1c9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0fcd10"/></to>
    </wire>
    <wire loc="456:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7a619f1b5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0cb740"/></to>
    </wire>
    <wire loc="493:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7a619f182200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f053100"/></to>
    </wire>
    <wire loc="461:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7a619f1b1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0c2d10"/></to>
    </wire>
    <wire loc="474:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7a619f19c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f092740"/></to>
    </wire>
    <wire loc="498:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7a619f178200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f03b740"/></to>
    </wire>
    <wire loc="540:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7a619f15d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f070100"/></to>
    </wire>
    <wire loc="438:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7a619f1dc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f1136d0"/></to>
    </wire>
    <wire loc="451:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7a619f1bf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0e3100"/></to>
    </wire>
    <wire loc="464:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7a619f1ab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0b4d10"/></to>
    </wire>
    <wire loc="477:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7a619f196200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f083740"/></to>
    </wire>
    <wire loc="542:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7a619f159580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0a9100"/></to>
    </wire>
    <wire loc="546:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7a619f153570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f04fd10"/></to>
    </wire>
    <wire loc="552:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7a619f147570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f032d10"/></to>
    </wire>
    <wire loc="482:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7a619f192200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f07ad10"/></to>
    </wire>
    <wire loc="543:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7a619f157580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0a5d10"/></to>
    </wire>
    <wire loc="441:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7a619f1cd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f105740"/></to>
    </wire>
    <wire loc="454:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7a619f1b9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0d4270"/></to>
    </wire>
    <wire loc="467:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7a619f1a4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0a5d10"/></to>
    </wire>
    <wire loc="539:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7a619f15f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f075740"/></to>
    </wire>
    <wire loc="550:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7a619f14b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f03b740"/></to>
    </wire>
    <wire loc="472:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7a619f1a0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f09b460"/></to>
    </wire>
    <wire loc="485:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7a619f18c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f06cd10"/></to>
    </wire>
    <wire loc="496:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7a619f17c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f045100"/></to>
    </wire>
    <wire loc="444:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7a619f1c7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0f6740"/></to>
    </wire>
    <wire loc="494:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7a619f180200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f04fd10"/></to>
    </wire>
    <wire loc="449:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7a619f1c3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0edd10"/></to>
    </wire>
    <wire loc="462:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7a619f1af020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0bd740"/></to>
    </wire>
    <wire loc="475:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7a619f19a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f08d100"/></to>
    </wire>
    <wire loc="499:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7a619f175200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f036100"/></to>
    </wire>
    <wire loc="439:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7a619f1d1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f10e100"/></to>
    </wire>
    <wire loc="452:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7a619f1bd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0dfd10"/></to>
    </wire>
    <wire loc="465:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7a619f1a9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0ae740"/></to>
    </wire>
    <wire loc="478:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7a619f194200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f07e100"/></to>
    </wire>
    <wire loc="534:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7a619f167560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0b8100"/></to>
    </wire>
    <wire loc="547:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7a619f151570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f04a740"/></to>
    </wire>
    <wire loc="533:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7a619f169580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0b8100"/></to>
    </wire>
    <wire loc="483:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7a619f190200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f075740"/></to>
    </wire>
    <wire loc="554:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7a619f144570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f036100"/></to>
    </wire>
    <wire loc="558:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7a619f13e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f058740"/></to>
    </wire>
    <wire loc="529:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7a619f1711f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7a619f0c6100"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef98610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef8e1d0"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef8e1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619ee17150"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619ef8f400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619ee93020"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7a619ef86a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7a619ee09790"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619ee93020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619df6d380"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7a619ee11640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619ee672f0"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7a619ee61850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619ee93870"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7a619ee93870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619df66020"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7a619ee08a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7a619ef0b900"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7a619ef0b900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7a619eeefcf0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619df6d380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619df51a30"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7a619df60780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619df6dbd0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7a619df6dbd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619df50340"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7a619df633d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7a619ef0b900"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619df4d4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7a619df577b0"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619df577b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619df4ca90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619df56da0"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619df56da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619df4ada0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7a619df540c0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619df540c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7a619f34f410"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7a619f346a20"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7a619f34c020"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7a619f343700"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7a619f34b5a0"/></to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7a619f342570"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7a619f34aa50"/></to>
    </wire>
    <wire loc="76:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7a619f3413e0"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></to>
    </wire>
    <wire loc="79:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7a619f348020"/></to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7a619f3401f0"/></to>
    </wire>
    <wire loc="82:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></to>
    </wire>
    <wire loc="83:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7a619f3475a0"/></to>
    </wire>
    <wire loc="84:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7a619f33f020"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7a619eed10f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7a619ef0a990"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7a619ef0a990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7a619ef03b80"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619eef4c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7a619ee5e9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7a619ee0ca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7a619ded0570"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7a619edbcb10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7a619e9e2020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7a619decb140"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7a619decb140"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7a619eab61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7a619edef020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7a619e9ee8b0"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7a619deced90"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619e9eb300"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7a619dec8df0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619e9eb300"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7a619edac8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619deced90"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed9ab10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619dec1270"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619dec1270"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed431d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7a619edb3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619dec2550"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619dec2550"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7a619eba1d30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7a619debf5e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619deced90"/></to>
    </wire>
    <wire loc="136:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7a619ed7e5c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7a619dec0270"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7a619ed42960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7a619dec0b60"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7a619ed41920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7a619eb9c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619ed47cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7a619deae020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619debf5e0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7a619eb9b740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7a619deb1c60"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7a619ed42960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7a619ed38af0"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7a619ed3e1d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7a619ed35910"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7a619ed41920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7a619ed36ab0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed431d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed393f0"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619ed47cd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619ebba520"/></to>
    </wire>
    <wire loc="98:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619ebba520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619de84270"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7a619ed31b30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619ebb9b20"/></to>
    </wire>
    <wire loc="100:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619ebb9b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619de837a0"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7a619ed24b80"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7a619ec510c0"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7a619ed1e860"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7a619f182200"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7a619ed1c7d0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7a619f180200"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7a619ed1a640"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7a619f17e200"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7a619ed18540"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7a619f17c200"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7a619ed16540"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7a619f17a200"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7a619ed14540"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7a619f178200"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7a619ed12540"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7a619f175200"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7a619ed10540"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7a619f173200"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7a619ed2faa0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7a619f36a7b0"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7a619ed22220"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7a619f3690c0"/></to>
    </wire>
    <wire loc="76:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7a619ed216f0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7a619f3685a0"/></to>
    </wire>
    <wire loc="77:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7a619ed20b70"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7a619f35f140"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7a619ed1f9e0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7a619f35e020"/></to>
    </wire>
    <wire loc="99:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7a619ebb93a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7a619de83020"/></to>
    </wire>
    <wire loc="101:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619de820d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619ebb8570"/></to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7a619de82890"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7a619de86330"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7a619de80480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7a619eba1d30"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7a619eb33cb0"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7a619eb2f030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7a619eb9c1d0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7a619eb2b020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7a619eb9b740"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7a619eb2fd80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7a619eb8c490"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7a619eb2d9c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7a619eb960e0"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7a619eb8bc20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619eafa4e0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619eafa4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef98610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7a619eb850f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619eaf3020"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619eaf3020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef98610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7a619eb806c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7a619eaedb40"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7a619eaedb40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef98610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7a619eb96c40"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7a619ec510c0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7a619eb297f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7a619de45060"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619dec8df0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7a619eab25e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619dec8df0"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619eaae280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619de48200"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619de48200"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7a619eba1d30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619eab1c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619de48e10"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619de48e10"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed431d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7a619eab61d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7a619ea34cb0"/></to>
    </wire>
    <wire loc="32:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7a619eaa4b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619eab25e0"/></to>
    </wire>
    <wire loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619ea048f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619eaae280"/></to>
    </wire>
    <wire loc="35:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7a619ea09bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7a619eaaae70"/></to>
    </wire>
    <wire loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7a619eaa51d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619eab1c90"/></to>
    </wire>
    <wire loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7a619eaa1020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619ea3c970"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7a619ea3c970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619de32a90"/></to>
    </wire>
    <wire loc="156:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7a619ea78380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7a619ea86aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7a619ea80100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619ea3c120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619de38020"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619de38020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619de1d660"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7a619de2b210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619de38870"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7a619de38870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7a619de1b020"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7a619de2fe10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7a619ef0b900"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619de18190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7a619de22450"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7a619de22450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619de17770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619de21a80"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619de21a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619de16a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7a619de20da0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7a619de20da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7a619de47d70"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7a619ed42960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7a619de466f0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7a619ed41920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7a619eb9c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619ed47cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7a619ddd3cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7a619de45060"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7a619eb9b740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7a619ddd4a60"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7a619e46d5a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7a619e498720"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7a619e467020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7a619e4a0020"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7a619e4a0020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7a619ddc3020"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7a619e467c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7a619e4a0c30"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7a619e4a0c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7a619e934630"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7a619e44a7e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7a619e46bc90"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7a619e934630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7a619e8d4400"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7a619e49f8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7a619e9332d0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7a619e9332d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7a619e8d6cb0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7a619e49d020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7a619e931990"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7a619e931990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7a619e8d3060"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7a619ddc3c90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7a619e98da00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7a619ddc1930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7a619e9332d0"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7a619e98da00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7a619e941580"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7a619e940400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7a619e9361d0"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7a619e9361d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7a619e92a7d0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7a619e93f060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7a619e9332d0"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7a619e93e720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7a619e934630"/></to>
    </wire>
    <wire loc="169:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7a619e93d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7a619e93dc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7a619e937140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7a619e8cc2f0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7a619e8cc2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7a619e8bc450"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7a619e934020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7a619e8d66c0"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7a619e8cfbc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7a619e8bdd60"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7a619e8c9940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7a619e92e490"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7a619e8d39f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7a619e8cbe10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7a619e8d1760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7a619e8cb320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7a619e8c9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7a619e4b78d0"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7a619e8cbe10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7a619e789830"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7a619e8cb320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7a619e789110"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7a619e788760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7a619e8c9020"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7a619e8b4dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7a619e8c9940"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7a619e786590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7a619e8c9940"/></to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7a619e77ecc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7a619e8c9940"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7a619e7870e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7a619e8b2ad0"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7a619e7879d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7a619e8b54a0"/></to>
    </wire>
    <wire loc="77:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7a619e8abe30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7a619e782b70"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7a619e8a6e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7a619e757080"/></to>
    </wire>
    <wire loc="17:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7a619e757080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7a619e4ca0c0"/></to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7a619e774d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7a619e757890"/></to>
    </wire>
    <wire loc="13:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7a619e757890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7a619e4d0440"/></to>
    </wire>
    <wire loc="332:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7a619e854e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7a619e88bd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7a619e856400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7a619e84f0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7a619e785c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7a619e784480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7a619e755020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7a619e4cf440"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7a619e4cf440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7a619e6f3d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7a619e4d0440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7a619e6f4670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e4ce020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e4ca920"/></to>
    </wire>
    <wire loc="19:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619e4c9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619e4d1020"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619e4d1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619e6f74d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e4d1c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7a619dd08a90"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7a619dd08a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e594510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e6ef1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e4ce020"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619dd01be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e6f68a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7a619e6f2e50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619dd09e00"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619dd09e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619e595280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7a619e6eb710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7a619dd01440"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7a619dd01440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7a619e596510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e6f68a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e65de70"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7a619e6f3d00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7a619e65b890"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7a619e6f4670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7a619e65c790"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619e6f74d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619e65d0d0"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e6593e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e6ef1d0"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7a619e65a5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7a619e6f2e50"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7a619e6535b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7a619e6eb710"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7a619e659a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7a619e6464d0"/></to>
    </wire>
    <wire loc="88:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7a619e6464d0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7a619e63ecc0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7a619e652020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7a619e5b1110"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7a619e5b1110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7a619ef0a990"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7a619e650120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7a619f3e65a0"/></to>
    </wire>
    <wire loc="89:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7a619e641080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7a619e639910"/></to>
    </wire>
    <wire loc="87:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e64ab80"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e63e410"/></to>
    </wire>
    <wire loc="91:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7a619e638210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7a619f15f580"/></to>
    </wire>
    <wire loc="92:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7a619e6351f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7a619f15d580"/></to>
    </wire>
    <wire loc="93:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7a619e6331f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7a619f15b580"/></to>
    </wire>
    <wire loc="94:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7a619e6311f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7a619f157580"/></to>
    </wire>
    <wire loc="95:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7a619e62f1f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7a619f159580"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7a619dd06a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7a619e6464d0"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619dd062b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e594d20"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e594d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e505400"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e593af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619dd01be0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e594510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e506020"/></to>
    </wire>
    <wire loc="106:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e506020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7a619dc993a0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7a619e596510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7a619e590b60"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619e595280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619e507210"/></to>
    </wire>
    <wire loc="105:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7a619e507210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7a619dc9a540"/></to>
    </wire>
    <wire loc="108:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e505400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619dc988b0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7a619e58fc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7a619e641080"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e505cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e593af0"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e57da90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e505400"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619e4ea9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619e5067a0"/></to>
    </wire>
    <wire loc="107:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619e5067a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619dc99b20"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e500b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e64ab80"/></to>
    </wire>
    <wire loc="109:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619dc97210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e505cd0"/></to>
    </wire>
    <wire loc="111:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7a619dc979d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7a619dc9c330"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7a619dc94c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619dc643a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e500b20"/></to>
    </wire>
    <wire loc="82:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7a619dc64b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7a619e4ea400"/></to>
    </wire>
    <wire loc="84:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619dc630f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619e4ea9d0"/></to>
    </wire>
    <wire loc="85:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619dc63d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e4e9720"/></to>
    </wire>
    <wire loc="114:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7a619e460020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7a619e444300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7a619e44a7e0"/></to>
    </wire>
    <wire loc="44:/home/tofu/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7a619e43a0f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7a619f4178c0"/></to>
    </wire>
    <wire loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7a619e43a810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7a619e937140"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="LightSensor" loc="3:LightSensor.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/tofu/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/tofu/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/tofu/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/tofu/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/tofu/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="LightSensorAppC.Timer" loc="44(LightSensorAppC.Timer):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LightSensorAppC.LightSource" loc="40(LightSensorAppC.LightSource):/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LightSensorAppC.LightSource.AdcReadClientC" loc="47(LightSensorAppC.LightSource.AdcReadClientC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient" loc="43(LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="LightSensorAppC.LightSource.AdcReadStreamClientC" loc="47(LightSensorAppC.LightSource.AdcReadStreamClientC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient" loc="43(LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/tofu/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7a619f334890" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7a619f334c30" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7a619f333020" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7a619f3333a0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7a619f333720" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7a619f333a90" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7a619f333e20" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7a619f332200" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7a619f3325d0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7a619f2f6e80" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7a619f2f3270" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7a619f139a10" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7a619f139dc0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7a619f1381a0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7a619f138550" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7a619f1388c0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7a619ef44cc0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7a619ef44cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7a619ef04a40" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7a619ef04a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7a619eeee570" loc="55:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7a619eeee570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7a619eeeed40" loc="56:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7a619eeeed40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7a619eeed160" loc="57:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7a619eeed160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7a619eeed940" loc="58:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7a619eeed940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7a619eeedd10" loc="59:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7a619eeeb540" loc="60:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7a619eeeb540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7a619ef116e0" loc="52:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7a619ef116e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7a619eeca020" loc="53:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7a619eeca020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7a619eeca410" loc="54:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7a619eeca410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7a619eecabf0" loc="55:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7a619eecabf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7a619eec9020" loc="56:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7a619ee8ecd0" loc="46:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7a619ee8ecd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7a619ee58230" loc="46:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7a619ee58230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7a619ee58560" loc="46:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7a619ee0ade0" loc="46:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7a619ee0ade0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7a619ec1a850" loc="83:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7a619ec12b40" loc="42:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7a619ea36670" loc="23:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7a619ea369c0" loc="23:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619ea369c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7a619e9dbe80" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7a619e9b19a0" loc="43:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7a619e989e10" loc="45:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7a619e5775b0" loc="89:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7a619e56b140" loc="42:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/tofu/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7a619e555bd0" loc="52:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/tofu/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7a619e49a4a0" loc="42:/home/tofu/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7a619e49a4a0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7a619e49a820" loc="42:/home/tofu/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7a619f412cb0" loc="6:LightSensor.nc">
      <component-ref qname="LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7a619f412cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7a619f4110a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7a619f3f2620" loc="9:LightSensor.nc">
      <component-ref qname="LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7a619f3f2620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7a619f3f5390"/>
        <function-ref name="readDone" scoped="" ref="0x7a619f3f5810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619f4040d0" loc="7:LightSensor.nc">
      <component-ref qname="LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619f4040d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619f404450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619f4045e0"/>
        <function-ref name="led1On" scoped="" ref="0x7a619f404770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619f404900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619f404a90"/>
        <function-ref name="get" scoped="" ref="0x7a619f404c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619f404db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619f4104d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f410020"/>
        <function-ref name="led0On" scoped="" ref="0x7a619f4101b0"/>
        <function-ref name="led2On" scoped="" ref="0x7a619f410340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f40e1e0" loc="8:LightSensor.nc">
      <component-ref qname="LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f40e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619f3f7630"/>
        <function-ref name="fired" scoped="" ref="0x7a619f403c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619f3f99d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619f3f9550"/>
        <function-ref name="getdt" scoped="" ref="0x7a619f3f6020"/>
        <function-ref name="gett0" scoped="" ref="0x7a619f3f7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619f3f90d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619f40edd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619f3f7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619f4032e0"/>
        <function-ref name="stop" scoped="" ref="0x7a619f4037b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7a619f3e5d80" loc="58:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f3e5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3e4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7a619f4178c0" loc="57:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7a619f4178c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7a619f417c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619f3e4ca0" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619f3e4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3e10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7a619f3dee10" loc="6:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7a619f3dee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3dd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619f3de020" loc="4:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619f3de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7a619f3de730" loc="5:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7a619f3de730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3deab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7a619f3dd520" loc="7:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7a619f3dd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3dd8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619f3d71a0" loc="2:/home/tofu/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619f3d71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3d7520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7a619f3df3a0" loc="39:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7a619f3df3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3df720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7a619f3b6850" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7a619f3b6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7a619f3bc7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7a619f3b6d60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7a619f3bc020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7a619f3bc1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7a619f3b6bd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7a619f3bc340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7a619f3bc4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7a619f3bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619f3bd2a0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619f3bd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3bd620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7a619f3a66d0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7a619f3a66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7a619f3a5660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7a619f3a6be0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7a619f3a6d70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7a619f3a5020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7a619f3a6a50"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7a619f3a51b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7a619f3a5340"/>
        <function-ref name="initClocks" scoped="" ref="0x7a619f3a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7a619f3a59a0" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7a619f3a59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7a619f3a5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619f3a6020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619f3a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f3a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7a619f362a50" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7a619f362a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f362dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f361020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f3611b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f361340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f3614d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f361660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f3617f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f361980"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f361b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7a619f34f410" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7a619f34f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f34f790"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f34f920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f34fab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f34fc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f34fdd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f34e020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f34e1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f34e340"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f34e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7a619f359d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7a619f359d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f3580e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f358270"/>
        <function-ref name="captured" scoped="" ref="0x7a619f358400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f358590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f358720"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f3588b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7a619f33b020" loc="68:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7a619f33b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f33b3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f33b530"/>
        <function-ref name="captured" scoped="" ref="0x7a619f33b6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f33b850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f33b9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f33bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7a619f35e020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7a619f35e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f35e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f35e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f35e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f35e850"/>
        <function-ref name="fired" scoped="" ref="0x7a619f35e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7a619f342570" loc="61:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7a619f342570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f3428f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f342a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f342c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f342da0"/>
        <function-ref name="fired" scoped="" ref="0x7a619f341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7a619f338020" loc="71:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7a619f338020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f3383a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f338530"/>
        <function-ref name="captured" scoped="" ref="0x7a619f3386c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f338850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f3389e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f338b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7a619f34aa50" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7a619f34aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f34add0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f349020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f3491b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f349340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f3494d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f349660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f3497f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f349980"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f349b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7a619f3690c0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7a619f3690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f369440"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f3695d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f369760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f3698f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f369a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f369c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f369da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f368020"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f3681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7a619f33d020" loc="66:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7a619f33d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f33d3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f33d530"/>
        <function-ref name="captured" scoped="" ref="0x7a619f33d6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f33d850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f33d9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f33db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7a619f344890" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7a619f344890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f344c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f344da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f343020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f3431b0"/>
        <function-ref name="fired" scoped="" ref="0x7a619f343340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7a619f34e8c0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7a619f34e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f34ed40"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f34d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f34d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f34d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f34d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f34d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f34d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f34d980"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f34db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7a619f358c70" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7a619f358c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f351020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f3511b0"/>
        <function-ref name="captured" scoped="" ref="0x7a619f351340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f3514d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f351660"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f3517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7a619f33a020" loc="69:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7a619f33a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f33a3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f33a530"/>
        <function-ref name="captured" scoped="" ref="0x7a619f33a6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f33a850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f33a9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f33ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7a619f34c020" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7a619f34c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f34c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f34c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f34c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f34c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f34c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f34cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f34cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f34b020"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f34b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7a619f35eda0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7a619f35eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f35a180"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f35a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f35a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f35a630"/>
        <function-ref name="fired" scoped="" ref="0x7a619f35a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7a619f36a7b0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7a619f36a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f36ab30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f36acc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f36ae50"/>
        <function-ref name="get" scoped="" ref="0x7a619f373020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f3731b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f373340"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f3734d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f373660"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f3737f0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f373980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f373b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7a619f3413e0" loc="62:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7a619f3413e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f341760"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f3418f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f341a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f341c10"/>
        <function-ref name="fired" scoped="" ref="0x7a619f341da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7a619f3685a0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7a619f3685a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f368920"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f368ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f368c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f368dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f362020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f3621b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f362340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f3624d0"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f362660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7a619f348020" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7a619f348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f3483a0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f348530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f3486c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f348850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f3489e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f348b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f348d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f347020"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f3471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7a619f352dc0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7a619f352dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f359180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f359310"/>
        <function-ref name="captured" scoped="" ref="0x7a619f3594a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f359630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f3597c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f359950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7a619f33c020" loc="67:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7a619f33c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f33c3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f33c530"/>
        <function-ref name="captured" scoped="" ref="0x7a619f33c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f33c850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f33c9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f33cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7a619f35f140" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7a619f35f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f35f4c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f35f650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f35f7e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f35f970"/>
        <function-ref name="fired" scoped="" ref="0x7a619f35fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7a619f343700" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7a619f343700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f343a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f343c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f343da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f342020"/>
        <function-ref name="fired" scoped="" ref="0x7a619f3421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7a619f339020" loc="70:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7a619f339020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f3393a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f339530"/>
        <function-ref name="captured" scoped="" ref="0x7a619f3396c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f339850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f3399e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f339b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7a619f34b5a0" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7a619f34b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f34b920"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f34bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f34bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f34bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f34a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f34a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f34a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f34a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f34a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7a619f351b70" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7a619f351b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f350020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f3501b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f350340"/>
        <function-ref name="get" scoped="" ref="0x7a619f3504d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f350660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f3507f0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f350980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f350b10"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f350ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f350e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f34f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7a619f3401f0" loc="63:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7a619f3401f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f340570"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f340700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f340890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f340a20"/>
        <function-ref name="fired" scoped="" ref="0x7a619f340bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7a619f33e020" loc="65:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7a619f33e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f33e3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f33e530"/>
        <function-ref name="captured" scoped="" ref="0x7a619f33e6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f33e850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f33e9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f33eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7a619f33f020" loc="64:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7a619f33f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f33f5a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f33f730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f33f8c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f33fa50"/>
        <function-ref name="fired" scoped="" ref="0x7a619f33fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7a619f346a20" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7a619f346a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f346da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f344020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f3441b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f344340"/>
        <function-ref name="fired" scoped="" ref="0x7a619f3444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7a619f3475a0" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7a619f3475a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f347920"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f347ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f347c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f347dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f346020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f3461b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f346340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f3464d0"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f346660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7a619f300aa0" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7a619f300aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f300e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7a619f300450" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7a619f300450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f3007d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7a619f2ff120" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7a619f2ff120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f2ff4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7a619f301d80" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f301d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f300180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619f302540" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f302540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f3028c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f302a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f302be0"/>
        <function-ref name="get" scoped="" ref="0x7a619f302d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f301020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f3011b0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f301340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f3014d0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f301660"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f3017f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f301980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7a619f2f8940" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7a619f2f8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f2f8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7a619f2f82f0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7a619f2f82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f2f8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7a619f2f7020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7a619f2f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f2f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7a619f2f9bf0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f2f9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f2f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619f2fb3e0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f2fb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f2fb760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f2fb8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f2fba80"/>
        <function-ref name="get" scoped="" ref="0x7a619f2fbc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f2fbda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2f9020"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f2f91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2f9340"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f2f94d0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f2f9660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f2f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f2aca90" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f2aca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2ace10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f2ab020"/>
        <function-ref name="captured" scoped="" ref="0x7a619f2ab1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2ab340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2ab4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f2ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f2f49d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f2f49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f2f4d50"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f2ad020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f2ad1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f2ad340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f2ad4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f2ad660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f2ad7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f2ad980"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f2adb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f2a9020" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f2a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f2a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f2adde0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f2adde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2ac180"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f2ac310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f2ac4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f2ac630"/>
        <function-ref name="fired" scoped="" ref="0x7a619f2ac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f2ab930" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f2ab930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f2abcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f2abe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f2aa020"/>
        <function-ref name="get" scoped="" ref="0x7a619f2aa1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f2aa340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2aa4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f2aa660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2aa7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f2aa980"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f2aab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f2aaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f2a4160" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f2a4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2a44e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f2a4670"/>
        <function-ref name="captured" scoped="" ref="0x7a619f2a4800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2a4990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2a4b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f2a4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f2a6020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f2a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f2a63a0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f2a6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f2a66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f2a6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f2a69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f2a6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f2a6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f2a5020"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f2a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f2a27a0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f2a27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f2a2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f2a5480" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f2a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2a5800"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f2a5990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f2a5b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f2a5cb0"/>
        <function-ref name="fired" scoped="" ref="0x7a619f2a5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f2a3020" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f2a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f2a33a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f2a3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f2a36c0"/>
        <function-ref name="get" scoped="" ref="0x7a619f2a3850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f2a39e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2a3b70"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f2a3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2a2020"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f2a21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f2a2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f2a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f29c7a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f29c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f29cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f29ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7a619f29ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f29b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f29b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f29b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f29f6d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f29f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f29fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f29fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f29fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f29d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f29d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f29d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f29d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f29d660"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f29d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f29ac50" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f29ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f299020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f29dac0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f29dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f29de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f29c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f29c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f29c340"/>
        <function-ref name="fired" scoped="" ref="0x7a619f29c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f29b610" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f29b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f29b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f29bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f29bcb0"/>
        <function-ref name="get" scoped="" ref="0x7a619f29be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f29a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f29a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f29a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f29a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f29a660"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f29a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f29a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f295cb0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f295cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2940a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f294230"/>
        <function-ref name="captured" scoped="" ref="0x7a619f2943c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f294550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2946e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f294870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f297b30" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f297b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f296020"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f2961b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f296340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f2964d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f296660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f2967f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f296980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f296b10"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f296ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f2922f0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f2922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f292670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f295020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2953a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f295530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f2956c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f295850"/>
        <function-ref name="fired" scoped="" ref="0x7a619f2959e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f294b40" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f294b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f293020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f2931b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f293340"/>
        <function-ref name="get" scoped="" ref="0x7a619f2934d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f293660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2937f0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f293980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f293b10"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f293ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f293e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f292020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f28c2f0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f28c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f28c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f28c800"/>
        <function-ref name="captured" scoped="" ref="0x7a619f28c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f28cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f28ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f28ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f28f220" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f28f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f28f5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f28f730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f28f8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f28fa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f28fbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f28fd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f28d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f28d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f28d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f28a7a0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f28a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f28ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f28d610" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f28d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f28d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f28db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f28dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f28de40"/>
        <function-ref name="fired" scoped="" ref="0x7a619f28c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f28b160" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f28b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f28b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f28b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f28b800"/>
        <function-ref name="get" scoped="" ref="0x7a619f28b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f28bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f28bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f28be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f28a020"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f28a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f28a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f28a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f2857a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f2857a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f285b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f285cb0"/>
        <function-ref name="captured" scoped="" ref="0x7a619f285e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f284020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2841b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f284340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f2876d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f2876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f287a50"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f287be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f287d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f286020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f2861b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f286340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f2864d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f286660"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f2867f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f283c50" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f283c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f282020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f286ac0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f286ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f286e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f285020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f2851b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f285340"/>
        <function-ref name="fired" scoped="" ref="0x7a619f2854d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f284610" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f284610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f284990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f284b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f284cb0"/>
        <function-ref name="get" scoped="" ref="0x7a619f284e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f283020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2831b0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f283340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2834d0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f283660"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f2837f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f283980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f27ecb0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f27ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f27c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f27c230"/>
        <function-ref name="captured" scoped="" ref="0x7a619f27c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f27c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f27c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f27c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f280b30" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f280b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f27f020"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f27f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f27f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f27f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f27f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f27f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f27f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f27fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f27fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f27a2f0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f27a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f27a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f27e020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f27e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f27e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f27e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f27e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f27e850"/>
        <function-ref name="fired" scoped="" ref="0x7a619f27e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f27cb40" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f27cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f27b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f27b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f27b340"/>
        <function-ref name="get" scoped="" ref="0x7a619f27b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f27b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f27b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f27b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f27bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f27bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f27be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f27a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f2752f0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f2752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f275670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f275800"/>
        <function-ref name="captured" scoped="" ref="0x7a619f275990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f275b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f275cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f275e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f277220" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f277220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f2775a0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f277730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f2778c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f277a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f277be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f277d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f276020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f2761b0"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f276340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f2737a0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f2737a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f273b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f276610" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f276610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f276990"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f276b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f276cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f276e40"/>
        <function-ref name="fired" scoped="" ref="0x7a619f275020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f274160" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f274160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f2744e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f274670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f274800"/>
        <function-ref name="get" scoped="" ref="0x7a619f274990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f274b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f274cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f274e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f273020"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f2731b0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f273340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f2734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f26d7a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f26d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f26db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f26dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7a619f26de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f26c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f26c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f26c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f2706d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f2706d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f270a50"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f270be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f270d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f26f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f26f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f26f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f26f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f26f660"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f26f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f26bc50" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f26bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f26a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f26fac0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f26fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f26fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f26d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f26d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f26d340"/>
        <function-ref name="fired" scoped="" ref="0x7a619f26d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f26c610" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f26c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f26c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f26cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f26ccb0"/>
        <function-ref name="get" scoped="" ref="0x7a619f26ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f26b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f26b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f26b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f26b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f26b660"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f26b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f26b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7a619f266cb0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7a619f266cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2650a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7a619f265230"/>
        <function-ref name="captured" scoped="" ref="0x7a619f2653c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f265550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f2656e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7a619f265870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7a619f268b30" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7a619f268b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619f267020"/>
        <function-ref name="getControl" scoped="" ref="0x7a619f2671b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f267340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619f2674d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619f267660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f2677f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619f267980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619f267b10"/>
        <function-ref name="setControl" scoped="" ref="0x7a619f267ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7a619f2632f0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7a619f2632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f263670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7a619f266020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7a619f266020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619f2663a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619f266530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619f2666c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619f266850"/>
        <function-ref name="fired" scoped="" ref="0x7a619f2669e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7a619f265b40" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619f265b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619f264020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619f2641b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619f264340"/>
        <function-ref name="get" scoped="" ref="0x7a619f2644d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619f264660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619f2647f0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619f264980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619f264b10"/>
        <function-ref name="overflow" scoped="" ref="0x7a619f264ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619f264e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619f263020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7a619f25d240" loc="7:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7a619f25d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f25d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7a619f261aa0" loc="4:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7a619f261aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f261e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7a619f25e260" loc="5:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7a619f25e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f25e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7a619f25e9f0" loc="6:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7a619f25e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619f25ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7a619f5884c0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7a619f5884c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7a619f588840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7a619f89c3b0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7a619f89c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7a619f89c730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7a619f89c8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7a619f89ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7a619f6c4be0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7a619f6c4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7a619f800020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7a619f3beb50" loc="39:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7a619f3beb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7a619f225b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7a619f2251b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7a619f225340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7a619f2254d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7a619f225020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7a619f225660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7a619f2257f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7a619f225980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7a619f219dc0" loc="60:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7a619f219dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f218180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7a619f21a590" loc="57:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7a619f21a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7a619f21a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7a619f2196c0" loc="59:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7a619f2196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f219a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7a619f21ac00" loc="58:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7a619f21ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f219020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7a619f2191b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7a619f219340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7a619f9744f0" loc="48:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7a619f9744f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619f974870"/>
        <function-ref name="runTask" scoped="" ref="0x7a619f974a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7a619f9053a0" loc="47:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7a619f9053a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f905720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7a619f9058b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7a619f905a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7a619f4ae040" loc="56:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7a619f4ae040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619f4ae3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7a619f4ae550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7a619f4aa490" loc="57:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7a619f4aa490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7a619f4aa810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7a619f4aa9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7a619f4aab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7a619f4b0140" loc="55:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7a619f4b0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f4b04c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7a619f4b0650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7a619f4b07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7a619f3e65a0" loc="46:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619f3e65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619f3e6920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619f3e6ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7a619f3e6c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619f3e6dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619f20e020"/>
        <function-ref name="get" scoped="" ref="0x7a619f20e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619f20e340"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619f20e980"/>
        <function-ref name="set" scoped="" ref="0x7a619f20e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7a619f20e660"/>
        <function-ref name="led2On" scoped="" ref="0x7a619f20e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7a619f2017b0" loc="50:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7a619f2017b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f201b30"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f201cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f201e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f207020"/>
        <function-ref name="get" scoped="" ref="0x7a619f2071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f207340"/>
        <function-ref name="set" scoped="" ref="0x7a619f2074d0"/>
        <function-ref name="clr" scoped="" ref="0x7a619f207660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619f20d8e0" loc="46:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619f20d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f20dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7a619f207980" loc="51:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7a619f207980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f207d00"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f206020"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f2061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f206340"/>
        <function-ref name="get" scoped="" ref="0x7a619f2064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f206660"/>
        <function-ref name="set" scoped="" ref="0x7a619f2067f0"/>
        <function-ref name="clr" scoped="" ref="0x7a619f206980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7a619f209020" loc="47:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619f209020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619f2093a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619f209530"/>
        <function-ref name="led1On" scoped="" ref="0x7a619f2096c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619f209850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619f2099e0"/>
        <function-ref name="get" scoped="" ref="0x7a619f209b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619f209d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619f2084d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f208020"/>
        <function-ref name="led0On" scoped="" ref="0x7a619f2081b0"/>
        <function-ref name="led2On" scoped="" ref="0x7a619f208340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7a619f206ca0" loc="52:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7a619f206ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f2000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f200230"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f2003c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f200550"/>
        <function-ref name="get" scoped="" ref="0x7a619f2006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f200870"/>
        <function-ref name="set" scoped="" ref="0x7a619f200a00"/>
        <function-ref name="clr" scoped="" ref="0x7a619f200b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7a619f1e5360" loc="41:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7a619f1e5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1e56e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1e5870"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1e5a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1e5b90"/>
        <function-ref name="get" scoped="" ref="0x7a619f1e5d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1e4020"/>
        <function-ref name="set" scoped="" ref="0x7a619f1e41b0"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7a619f1e46a0" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7a619f1e46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1e4a20"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1e4bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1e4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1e3020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1e3340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1e34d0"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1e3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7a619f1e2c40" loc="44:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619f1e2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619f1e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7a619f1e39c0" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7a619f1e39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1e3d40"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1e2340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1e2660"/>
        <function-ref name="set" scoped="" ref="0x7a619f1e27f0"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7a619f1cb020" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7a619f1cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1cb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1cb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1cb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1cb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1cb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1cbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1cbd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1ca340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1caa80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7a619f1b7020" loc="66:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7a619f1b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1b73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1b7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1b76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1b7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1b79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1b7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1b7d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1b6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1b61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1b6340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1b64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1b6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1b67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1b6a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1b6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7a619f16d560" loc="145:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7a619f16d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f16d8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f16da70"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f16dc00"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f16dd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f16c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f16c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f16c340"/>
        <function-ref name="get" scoped="" ref="0x7a619f16c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f16c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f16c7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f16c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f16cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f16cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f16b020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f16b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7a619f149570" loc="165:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7a619f149570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1498f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f149a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f149c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f149da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f148020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1481b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f148340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1484d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f148660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1487f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f148980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f148b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f148ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f147020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7a619f16b580" loc="146:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7a619f16b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f16b900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f16ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f16bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f16bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f16a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f16a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f16a340"/>
        <function-ref name="get" scoped="" ref="0x7a619f16a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f16a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f16a7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f16a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f16ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f16aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f169020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7a619f1b3020" loc="71:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7a619f1b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1b33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1b3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1b36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1b3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1b39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1b3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1b3d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1b2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1b21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1b2340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1b24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1b2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1b27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1b2a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1b2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7a619f19e200" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7a619f19e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f19e580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f19e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f19e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f19ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f19ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f19ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f19d020"/>
        <function-ref name="get" scoped="" ref="0x7a619f19d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f19d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f19d4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f19d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f19d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f19d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f19dc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f19dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7a619f18a200" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7a619f18a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f18a580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f18a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f18a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f18aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f18abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f18ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f189020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1891b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f189340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1894d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f189660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1897f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f189980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f189c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f189da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7a619f17a200" loc="108:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7a619f17a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f17a580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f17a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f17a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f17aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f17abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f17ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f179020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1791b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f179340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1794d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f179660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1797f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f179980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f179c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f179da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7a619f165580" loc="149:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7a619f165580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f165900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f165a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f165c20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f165db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f164020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f164340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1644d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f164660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1647f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f164980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f164b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f164ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f163020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7a619f155570" loc="159:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7a619f155570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1558f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f155a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f155c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f155da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f154020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f154340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1544d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f154660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1547f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f154980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f154b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f154ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f153020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7a619f140580" loc="171:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7a619f140580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f140900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f140a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f140c20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f140db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f13f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f13f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f13f340"/>
        <function-ref name="get" scoped="" ref="0x7a619f13f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f13f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f13f7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f13f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f13fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f13fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f13e020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f13e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7a619f1c5020" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7a619f1c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1c5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1c56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1c5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1c59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1c5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1c5d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1c4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1c41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1c4340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1c44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1c4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1c47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1c4a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1c4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7a619f163580" loc="150:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7a619f163580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f163900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f163a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f163c20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f163db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f162020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f162340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1624d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f162660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1627f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f162980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f162b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f162ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f161020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7a619f1c1020" loc="61:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7a619f1c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1c13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1c1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1c16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1c1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1c19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1c1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1c1d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1c0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1c01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1c0340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1c04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1c0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1c07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1c0a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1c0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7a619f1ad020" loc="74:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7a619f1ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1ad3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1ad530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1ad6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1ad850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1ad9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1adb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1add00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1ac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1ac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1ac340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1ac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1ac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1ac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1aca80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1acc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7a619f198200" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7a619f198200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f198580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f198710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1988a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f198a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f198bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f198d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f197020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1971b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f197340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1974d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f197660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1977f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f197980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f197c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f197da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7a619f184200" loc="100:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7a619f184200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f184580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f184710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1848a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f184a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f184bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f184d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f183020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1831b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f183340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1834d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f183660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1837f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f183980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f183c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f183da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7a619f173200" loc="111:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7a619f173200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f173580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f173710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1738a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f173a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f173bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f173d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f172020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1721b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f172340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1724d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f172660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1727f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f172980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f172c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f172da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7a619f1cf020" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7a619f1cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1cf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1cf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1cf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1cf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1cf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1cfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1cfd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1ce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1ce340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1ce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1ce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1ce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1cea80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1cec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7a619f1bb020" loc="64:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7a619f1bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1bb4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1bb630"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1bb7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1bb950"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1bbae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1bbc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1bbe00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1ba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1ba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1ba340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1ba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1ba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1ba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1baa80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1bac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7a619f1a7020" loc="77:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7a619f1a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1a73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1a7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1a76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1a7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1a79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1a7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1a7d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1a6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1a61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1a6340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1a64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1a6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1a67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1a6a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1a6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7a619f16f580" loc="144:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7a619f16f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f16f900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f16fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f16fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f16fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f16e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f16e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f16e340"/>
        <function-ref name="get" scoped="" ref="0x7a619f16e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f16e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f16e7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f16e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f16eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f16eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f16d020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f16d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7a619f14f570" loc="162:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7a619f14f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f14f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f14fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f14fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f14fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f14e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f14e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f14e340"/>
        <function-ref name="get" scoped="" ref="0x7a619f14e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f14e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f14e7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f14e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f14eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f14eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f14d020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f14d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7a619f142570" loc="169:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7a619f142570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1428f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f142a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f142c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f142da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f141020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f141340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1414d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f141660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1417f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f141980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f141b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f141ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f140020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7a619f15b580" loc="155:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7a619f15b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f15b900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f15ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f15bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f15bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f15a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f15a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f15a340"/>
        <function-ref name="get" scoped="" ref="0x7a619f15a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f15a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f15a7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f15a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f15ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f15aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f159020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7a619f1a2020" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7a619f1a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1a25a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1a2730"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1a28c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1a2a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1a2be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1a2d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1a1020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1a11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1a1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1a14d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f1a1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1a17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1a1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1a1c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7a619f18e200" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7a619f18e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f18e580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f18e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f18e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f18ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f18ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f18ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f18d020"/>
        <function-ref name="get" scoped="" ref="0x7a619f18d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f18d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f18d4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f18d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f18d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f18d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f18dc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f18dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7a619f17e200" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7a619f17e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f17e580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f17e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f17e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f17ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f17ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f17ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f17d020"/>
        <function-ref name="get" scoped="" ref="0x7a619f17d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f17d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f17d4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f17d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f17d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f17d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f17dc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f17dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7a619f14d570" loc="163:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7a619f14d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f14d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f14da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f14dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f14dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f14c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f14c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f14c340"/>
        <function-ref name="get" scoped="" ref="0x7a619f14c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f14c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f14c7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f14c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f14cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f14cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f14b020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f14b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7a619f161570" loc="152:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7a619f161570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1618f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f161a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f161c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f161da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f160020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f160340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1604d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f160660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1607f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f160980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f160b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f160ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f15f020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f15f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7a619f1c9020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7a619f1c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1c93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1c9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1c96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1c9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1c99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1c9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1c9d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1c8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1c81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1c8340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1c84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1c8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1c87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1c8a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7a619f1b5020" loc="67:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7a619f1b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1b53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1b5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1b56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1b5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1b59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1b5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1b5d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1b4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1b41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1b4340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1b44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1b4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1b47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1b4a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1b4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7a619f182200" loc="104:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7a619f182200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f182580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f182710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1828a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f182a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f182bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f182d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f181020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1811b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f181340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1814d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f181660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1817f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f181980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f181c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f181da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7a619f1b1020" loc="72:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7a619f1b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1b13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1b1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1b16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1b1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1b19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1b1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1b1d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1b01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1b0340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1b04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1b0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1b07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1b0a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7a619f19c200" loc="85:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7a619f19c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f19c580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f19c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f19c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f19ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f19cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f19cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f19b020"/>
        <function-ref name="get" scoped="" ref="0x7a619f19b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f19b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f19b4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f19b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f19b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f19b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f19bc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f19bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7a619f188200" loc="98:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7a619f188200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f188580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f188710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1888a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f188a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f188bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f188d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f187020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1871b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f187340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1874d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f187660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1877f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f187980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f187c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f187da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7a619f178200" loc="109:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7a619f178200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f178580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f178710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1788a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f178a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f178bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f178d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f177020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1771b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f177340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1774d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f177660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1777f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f177980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f177c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f177da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7a619f15d580" loc="154:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7a619f15d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f15d900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f15da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f15dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f15ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f15c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f15c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f15c340"/>
        <function-ref name="get" scoped="" ref="0x7a619f15c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f15c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f15c7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f15c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f15cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f15cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f15b020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f15b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7a619f1dc020" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7a619f1dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1dc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1dc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1dc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1dc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1dcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1dcd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1db1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1db340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1db4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1db660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1db7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1dba80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7a619f1bf020" loc="62:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7a619f1bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1bf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1bf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1bf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1bf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1bf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1bfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1bfd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1be340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1bea80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7a619f1ab020" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7a619f1ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1ab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1ab530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1ab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1abd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1aa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1aa340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1aa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1aa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1aa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1aaa80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1aac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7a619f196200" loc="88:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7a619f196200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f196580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f196710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1968a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f196a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f196bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f196d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f195020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1951b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f195340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1954d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f195660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1957f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f195980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f195c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f195da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7a619f159580" loc="156:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7a619f159580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f159900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f159a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f159c20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f159db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f158020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f158340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1584d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f158660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1587f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f158980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f158b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f158ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f157020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7a619f153570" loc="160:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7a619f153570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1538f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f153a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f153c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f153da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f152020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f152340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1524d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f152660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1527f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f152980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f152b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f152ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f151020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7a619f147570" loc="166:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7a619f147570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1478f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f147a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f147c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f147da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f145020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f145340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1454d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f145660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1457f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f145980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f145b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f145ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f144020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7a619f192200" loc="93:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7a619f192200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f192580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f192710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1928a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f192a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f192bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f192d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f191020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1911b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f191340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1914d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f191660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1917f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f191980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f191c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f191da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7a619f157580" loc="157:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7a619f157580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f157900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f157a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f157c20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f157db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f156020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f156340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1564d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f156660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1567f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f156980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f156b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f156ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f155020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7a619f1cd020" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7a619f1cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1cd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1cd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1cd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1cd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1cdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1cdd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1cc340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1cca80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7a619f1b9020" loc="65:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7a619f1b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1b93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1b9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1b96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1b9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1b99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1b9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1b9d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1b8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1b81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1b8340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1b84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1b8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1b87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1b8a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1b8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7a619f1a4020" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7a619f1a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1a43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1a4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1a46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1a4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1a49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1a4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1a4d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1a31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1a3340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1a34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1a3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1a37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1a3a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7a619f15f580" loc="153:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7a619f15f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f15f900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f15fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f15fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f15fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f15e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f15e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f15e340"/>
        <function-ref name="get" scoped="" ref="0x7a619f15e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f15e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f15e7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f15e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f15eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f15eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f15d020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f15d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7a619f14b570" loc="164:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7a619f14b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f14b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f14ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f14bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f14bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f14a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f14a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f14a340"/>
        <function-ref name="get" scoped="" ref="0x7a619f14a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f14a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f14a7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f14a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f14ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f14aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f149020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7a619f1a0200" loc="83:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7a619f1a0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1a0580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1a0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1a08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1a0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1a0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1a0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f19f020"/>
        <function-ref name="get" scoped="" ref="0x7a619f19f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f19f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f19f4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f19f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f19f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f19f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f19fc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f19fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7a619f18c200" loc="96:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7a619f18c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f18c580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f18c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f18c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f18ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f18cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f18cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f18b020"/>
        <function-ref name="get" scoped="" ref="0x7a619f18b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f18b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f18b4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f18b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f18b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f18b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f18bc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f18bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7a619f17c200" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7a619f17c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f17c580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f17c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f17c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f17ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f17cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f17cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f17b020"/>
        <function-ref name="get" scoped="" ref="0x7a619f17b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f17b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f17b4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f17b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f17b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f17b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f17bc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f17bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7a619f1c7020" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7a619f1c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1c7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1c76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1c7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1c79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1c7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1c7d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1c61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1c6340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1c64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1c6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1c67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1c6a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7a619f180200" loc="105:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7a619f180200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f180580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f180710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1808a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f180a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f180bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f180d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f17f020"/>
        <function-ref name="get" scoped="" ref="0x7a619f17f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f17f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f17f4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f17f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f17f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f17f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f17fc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f17fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7a619f1c3020" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7a619f1c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1c33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1c3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1c36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1c3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1c39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1c3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1c3d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1c2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1c21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1c2340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1c24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1c2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1c27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1c2a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1c2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7a619f1af020" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7a619f1af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1af3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1af530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1af6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1af850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1af9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1afb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1afd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1ae020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1ae1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1ae340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1ae4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1ae660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1ae7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1aea80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1aec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7a619f19a200" loc="86:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7a619f19a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f19a580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f19a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f19a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f19aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f19abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f19ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f199020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1991b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f199340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1994d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f199660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1997f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f199980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f199c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f199da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7a619f186200" loc="99:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7a619f186200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f186580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f186710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1868a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f186a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f186bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f186d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f185020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1851b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f185340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1854d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f185660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1857f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f185980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f185c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f185da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7a619f175200" loc="110:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7a619f175200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f175580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f175710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1758a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f175a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f175bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f175d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f174020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1741b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f174340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1744d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f174660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1747f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f174980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f174c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f174da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7a619f1d1020" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7a619f1d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1d1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1d16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1d1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1d19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1d1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1d1d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1d0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1d01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1d0340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1d04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1d0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1d07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1d0a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1d0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7a619f1bd020" loc="63:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7a619f1bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1bd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1bd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1bd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1bd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1bd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1bdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1bdd00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1bc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1bc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1bc340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1bc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1bc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1bc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1bca80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1bcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7a619f1a9020" loc="76:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7a619f1a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1a93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f1a9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1a96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f1a9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1a99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1a9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1a9d00"/>
        <function-ref name="get" scoped="" ref="0x7a619f1a8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1a81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1a8340"/>
        <function-ref name="set" scoped="" ref="0x7a619f1a84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1a8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1a87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f1a8a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1a8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7a619f194200" loc="89:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7a619f194200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f194580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f194710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1948a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f194a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f194bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f194d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f193020"/>
        <function-ref name="get" scoped="" ref="0x7a619f1931b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f193340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1934d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f193660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f1937f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f193980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f193c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f193da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7a619f167560" loc="148:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7a619f167560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1678e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f167a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f167c00"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f167d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f166020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f166340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1664d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f166660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1667f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f166980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f166b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f166ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f165020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7a619f151570" loc="161:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7a619f151570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1518f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f151a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f151c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f151da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f150020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f150340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1504d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f150660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1507f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f150980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f150b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f150ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f14f020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f14f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7a619f169580" loc="147:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7a619f169580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f169900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f169a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f169c20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f169db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f168020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f168340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f168660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1687f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f168980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f168b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f168ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f167020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7a619f190200" loc="94:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7a619f190200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f190580"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f190710"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1908a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f190a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f190bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f190d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f18f020"/>
        <function-ref name="get" scoped="" ref="0x7a619f18f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f18f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f18f4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f18f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f18f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f18f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f18fc10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f18fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7a619f144570" loc="168:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7a619f144570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1448f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f144a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f144c10"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f144da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f143020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f143340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1434d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f143660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1437f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f143980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f143b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f143ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f142020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7a619f13e580" loc="172:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7a619f13e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f13e900"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f13ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f13ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f13edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f13d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f13d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f13d340"/>
        <function-ref name="get" scoped="" ref="0x7a619f13d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f13d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f13d7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f13d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f13db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f13dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f13c020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f13c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7a619f1711f0" loc="143:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7a619f1711f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f171970"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f171b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f171c90"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f171e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f170020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f170340"/>
        <function-ref name="get" scoped="" ref="0x7a619f1704d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f170660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f1707f0"/>
        <function-ref name="set" scoped="" ref="0x7a619f170980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f170b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f170ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f16f020"/>
        <function-ref name="clr" scoped="" ref="0x7a619f16f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f1136d0" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f1136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f113a50"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f113be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f113d70"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f112020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1121b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f112340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1124d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f112660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1127f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f112980"/>
        <function-ref name="set" scoped="" ref="0x7a619f112b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f112ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f112e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f111120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f10e100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f10e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f10e480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f10e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f10e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f10e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f10eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f10ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f10ede0"/>
        <function-ref name="get" scoped="" ref="0x7a619f10d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f10d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f10d340"/>
        <function-ref name="set" scoped="" ref="0x7a619f10d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f10d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f10d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f10da80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f10dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f10ad10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f10ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f1090e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f109270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f109400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f109590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f109720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f1098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f109a40"/>
        <function-ref name="get" scoped="" ref="0x7a619f109bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f109d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f108020"/>
        <function-ref name="set" scoped="" ref="0x7a619f1081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f108340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f1084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f108760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f105740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f105740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f105ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f105c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f105de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f104020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f1041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f104340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f1044d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f104660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f1047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f104980"/>
        <function-ref name="set" scoped="" ref="0x7a619f104b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f104ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f104e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f103120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f1032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f100100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f100100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f100480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f100610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f1007a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f100930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f100ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f100c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f100de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0ff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0ff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0ff340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0ff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0ff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0ff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0ffa80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0ffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0fcd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0fcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0fa0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0fa270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0fa400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0fa590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0fa720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0fa8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0faa40"/>
        <function-ref name="get" scoped="" ref="0x7a619f0fabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0fad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0f9020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0f9760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0f6740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0f6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0f6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0f6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0f51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0f5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0f54d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0f5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0f57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0f5980"/>
        <function-ref name="set" scoped="" ref="0x7a619f0f5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0f5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0f5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0f4120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0f1100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0f1480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0f1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0f17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0f1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0f1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0f1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0f1de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0f0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0f01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0f0340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0f04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0f0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0f07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0f0a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0f0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0edd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0edd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0ec0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0ec270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0ec400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0ec590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0ec720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0ec8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0eca40"/>
        <function-ref name="get" scoped="" ref="0x7a619f0ecbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0ecd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0eb020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0eb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0eb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0eb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0eb760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0eb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0e8740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0e8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0e8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0e8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0e8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0e7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0e71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0e7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0e74d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0e7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0e77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0e7980"/>
        <function-ref name="set" scoped="" ref="0x7a619f0e7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0e7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0e7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0e6120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0e3100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0e3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0e3480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0e3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0e37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0e3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0e3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0e3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0e3de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0e2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0e21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0e2340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0e24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0e2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0e27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0e2a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0e2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0dfd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0dfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0de0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0de270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0de400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0de590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0de720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0de8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0dea40"/>
        <function-ref name="get" scoped="" ref="0x7a619f0debd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0ded60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0dd020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0dd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0dd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0dd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0dd760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0dd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0da860" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0da860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0dabe0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0dad70"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0d9020"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0d91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0d9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0d94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0d9660"/>
        <function-ref name="get" scoped="" ref="0x7a619f0d97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0d9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0d9b10"/>
        <function-ref name="set" scoped="" ref="0x7a619f0d9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0d9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0d8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0d82b0"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0d8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0d4270" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0d4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0d45f0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0d4780"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0d4910"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0d4aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0d4c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0d4dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0d3020"/>
        <function-ref name="get" scoped="" ref="0x7a619f0d31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0d3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0d34d0"/>
        <function-ref name="set" scoped="" ref="0x7a619f0d3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0d37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0d3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0d3c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0d3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0d0d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0d0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0cf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0cf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0cf400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0cf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0cf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0cf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0cfa40"/>
        <function-ref name="get" scoped="" ref="0x7a619f0cfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0cfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0ce020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0ce760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0cb740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0cb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0cbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0cbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0cbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0ca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0ca4d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0ca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0ca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0ca980"/>
        <function-ref name="set" scoped="" ref="0x7a619f0cab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0caca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0cae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0c9120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0c6100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0c6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0c6480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0c6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0c67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0c6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0c6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0c6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0c6de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0c5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0c51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0c5340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0c54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0c5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0c57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0c5a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0c5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0c2d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0c2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0c10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0c1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0c1400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0c1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0c1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0c18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0c1a40"/>
        <function-ref name="get" scoped="" ref="0x7a619f0c1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0c1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0c0020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0c01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0c0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0c04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0c0760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0c08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0bd740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0bd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0bdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0bdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0bdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0bc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0bc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0bc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0bc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0bc980"/>
        <function-ref name="set" scoped="" ref="0x7a619f0bcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0bcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0bce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0bb120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0b8100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0b8480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0b8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0b87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0b8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0b8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0b8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0b8de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0b7340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0b7a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0b4d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0b4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0b20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0b2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0b2400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0b2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0b2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0b28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0b2a40"/>
        <function-ref name="get" scoped="" ref="0x7a619f0b2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0b2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0b1020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0b1760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0ae740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0ae740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0aeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0aec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0aede0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0ad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0ad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0ad4d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0ad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0ad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0ad980"/>
        <function-ref name="set" scoped="" ref="0x7a619f0adb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0adca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0ade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0ac120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0a9100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0a9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0a9480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0a9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0a97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0a9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0a9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0a9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0a9de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f0a8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0a81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0a8340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0a84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0a8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0a87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0a8a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0a8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0a5d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0a5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0a40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f0a4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0a4400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f0a4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0a4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0a48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0a4a40"/>
        <function-ref name="get" scoped="" ref="0x7a619f0a4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0a4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f0a3020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0a31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f0a3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0a34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f0a3760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f0a0a60" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f0a0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0a0de0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f09f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f09f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f09f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f09f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f09f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f09f7f0"/>
        <function-ref name="get" scoped="" ref="0x7a619f09f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f09fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f09fca0"/>
        <function-ref name="set" scoped="" ref="0x7a619f09fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f09e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f09e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f09e440"/>
        <function-ref name="clr" scoped="" ref="0x7a619f09e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f09b460" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f09b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f09b7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f09b970"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f09bb00"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f09bc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f09be20"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f09a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f09a1b0"/>
        <function-ref name="get" scoped="" ref="0x7a619f09a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f09a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f09a660"/>
        <function-ref name="set" scoped="" ref="0x7a619f09a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f09a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f09ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f09ada0"/>
        <function-ref name="clr" scoped="" ref="0x7a619f099020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f097e00" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f097e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0961c0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f096350"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0964e0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f096670"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f096800"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f096990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f096b20"/>
        <function-ref name="get" scoped="" ref="0x7a619f096cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f096e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f095020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f095340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f095760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f092740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f092740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f092ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f092c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f092de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f091020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f091340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0914d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f091660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f091980"/>
        <function-ref name="set" scoped="" ref="0x7a619f091b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f091ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f091e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f090120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f08d100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f08d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f08d480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f08d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f08d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f08d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f08dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f08dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f08dde0"/>
        <function-ref name="get" scoped="" ref="0x7a619f08b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f08b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f08b340"/>
        <function-ref name="set" scoped="" ref="0x7a619f08b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f08b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f08b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f08ba80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f08bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f088d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f088d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0870e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f087270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f087400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f087590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f087720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0878b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f087a40"/>
        <function-ref name="get" scoped="" ref="0x7a619f087bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f087d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f086020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f086340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f086760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f083740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f083740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f083ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f083c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f083de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f082020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f082340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0824d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f082660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f082980"/>
        <function-ref name="set" scoped="" ref="0x7a619f082b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f082ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f082e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f081120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f07e100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f07e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f07e480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f07e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f07e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f07e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f07eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f07ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f07ede0"/>
        <function-ref name="get" scoped="" ref="0x7a619f07d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f07d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f07d340"/>
        <function-ref name="set" scoped="" ref="0x7a619f07d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f07d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f07d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f07da80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f07dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f07ad10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f07ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0790e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f079270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f079400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f079590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f079720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f079a40"/>
        <function-ref name="get" scoped="" ref="0x7a619f079bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f079d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f078020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f078340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f078760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f075740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f075740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f075ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f075c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f075de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f074020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f074340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0744d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f074660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f074980"/>
        <function-ref name="set" scoped="" ref="0x7a619f074b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f074ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f074e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f073120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f070100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f070100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f070480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f070610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0707a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f070930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f070ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f070c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f070de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f06f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f06f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f06f340"/>
        <function-ref name="set" scoped="" ref="0x7a619f06f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f06f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f06f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f06fa80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f06fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f06cd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f06cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f06b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f06b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f06b400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f06b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f06b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f06b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f06ba40"/>
        <function-ref name="get" scoped="" ref="0x7a619f06bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f06bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f06a020"/>
        <function-ref name="set" scoped="" ref="0x7a619f06a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f06a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f06a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f06a760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f06a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f066740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f066740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f066ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f066c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f066de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f065020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f065340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0654d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f065660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f065980"/>
        <function-ref name="set" scoped="" ref="0x7a619f065b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f065ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f065e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f064120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f061100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f061100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f061480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f061610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0617a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f061930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f061ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f061c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f061de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f060020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f060340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f060660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f060a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f060c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f05dd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f05dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f05c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f05c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f05c400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f05c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f05c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f05c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f05ca40"/>
        <function-ref name="get" scoped="" ref="0x7a619f05cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f05cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f05b020"/>
        <function-ref name="set" scoped="" ref="0x7a619f05b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f05b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f05b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f05b760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f05b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f058740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f058740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f058ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f058c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f058de0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f057020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f057340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0574d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f057660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f057980"/>
        <function-ref name="set" scoped="" ref="0x7a619f057b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f057ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f057e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f056120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f053100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f053100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f053480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f053610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0537a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f053930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f053ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f053c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f053de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f052020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f052340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f052660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f052a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f052c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f04fd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f04fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f04e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f04e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f04e400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f04e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f04e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f04e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f04ea40"/>
        <function-ref name="get" scoped="" ref="0x7a619f04ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f04ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f04d020"/>
        <function-ref name="set" scoped="" ref="0x7a619f04d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f04d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f04d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f04d760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f04d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f04a740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f04a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f04aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f04ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f04ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f049020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f0491b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f049340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f0494d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f049660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f049980"/>
        <function-ref name="set" scoped="" ref="0x7a619f049b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f049ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f049e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f048120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f045100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f045100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f045480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f045610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0457a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f045930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f045ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f045c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f045de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f043020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f043340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f043660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f043a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f043c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f040d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f040d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f03f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f03f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f03f400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f03f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f03f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f03f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f03fa40"/>
        <function-ref name="get" scoped="" ref="0x7a619f03fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f03fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f03e020"/>
        <function-ref name="set" scoped="" ref="0x7a619f03e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f03e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f03e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f03e760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f03e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f03b740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f03b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f03bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f03bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f03bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f03a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f03a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f03a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f03a4d0"/>
        <function-ref name="get" scoped="" ref="0x7a619f03a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f03a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f03a980"/>
        <function-ref name="set" scoped="" ref="0x7a619f03ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f03aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f03ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f039120"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f036100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f036100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f036480"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f036610"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f0367a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f036930"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f036ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f036c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f036de0"/>
        <function-ref name="get" scoped="" ref="0x7a619f035020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f0351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f035340"/>
        <function-ref name="set" scoped="" ref="0x7a619f0354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f035660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f035a80"/>
        <function-ref name="clr" scoped="" ref="0x7a619f035c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7a619f032d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7a619f032d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619f0310e0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619f031270"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619f031400"/>
        <function-ref name="toggle" scoped="" ref="0x7a619f031590"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619f031720"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619f0318b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619f031a40"/>
        <function-ref name="get" scoped="" ref="0x7a619f031bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619f031d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619f030020"/>
        <function-ref name="set" scoped="" ref="0x7a619f0301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619f030340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619f0304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619f030760"/>
        <function-ref name="clr" scoped="" ref="0x7a619f0308f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7a619efb92f0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7a619efb92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619efb9670"/>
        <function-ref name="isInput" scoped="" ref="0x7a619efb9800"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619efb9990"/>
        <function-ref name="toggle" scoped="" ref="0x7a619efb9b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619efb9cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619efb9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619efb8020"/>
        <function-ref name="get" scoped="" ref="0x7a619efb81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619efb8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619efb84d0"/>
        <function-ref name="set" scoped="" ref="0x7a619efb8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619efb87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619efb8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619efb8c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619efb8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7a619efd3020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7a619efd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619efd33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619efd3530"/>
        <function-ref name="toggle" scoped="" ref="0x7a619efd36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619efd3850"/>
        <function-ref name="get" scoped="" ref="0x7a619efd39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619efd3b70"/>
        <function-ref name="set" scoped="" ref="0x7a619efd3d00"/>
        <function-ref name="clr" scoped="" ref="0x7a619efb9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7a619efb5de0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7a619efb5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619efb4180"/>
        <function-ref name="isInput" scoped="" ref="0x7a619efb4310"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619efb44a0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619efb4630"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619efb47c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619efb4950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619efb4ae0"/>
        <function-ref name="get" scoped="" ref="0x7a619efb4c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619efb4e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619efb3020"/>
        <function-ref name="set" scoped="" ref="0x7a619efb31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619efb3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619efb34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619efb3760"/>
        <function-ref name="clr" scoped="" ref="0x7a619efb38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7a619efb6b90" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7a619efb6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619efb5020"/>
        <function-ref name="isInput" scoped="" ref="0x7a619efb51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619efb5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619efb54d0"/>
        <function-ref name="get" scoped="" ref="0x7a619efb5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619efb57f0"/>
        <function-ref name="set" scoped="" ref="0x7a619efb5980"/>
        <function-ref name="clr" scoped="" ref="0x7a619efb5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7a619efaf930" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7a619efaf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619efafcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619efafe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619efae020"/>
        <function-ref name="toggle" scoped="" ref="0x7a619efae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619efae340"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619efae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619efae660"/>
        <function-ref name="get" scoped="" ref="0x7a619efae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619efae980"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619efaeb10"/>
        <function-ref name="set" scoped="" ref="0x7a619efaeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619efaee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619efad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619efad2b0"/>
        <function-ref name="clr" scoped="" ref="0x7a619efad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7a619efb0710" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7a619efb0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619efb0a90"/>
        <function-ref name="isInput" scoped="" ref="0x7a619efb0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7a619efb0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619efaf020"/>
        <function-ref name="get" scoped="" ref="0x7a619efaf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619efaf340"/>
        <function-ref name="set" scoped="" ref="0x7a619efaf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7a619efaf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619edf7370" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="LightSensorAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619edf7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619edf3870"/>
        <function-ref name="fired" scoped="" ref="0x7a619edf6e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619edf4c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619edf4780"/>
        <function-ref name="getdt" scoped="" ref="0x7a619edf21e0"/>
        <function-ref name="gett0" scoped="" ref="0x7a619edf3cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619edf4300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619edf6020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619edf3260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619edf64f0"/>
        <function-ref name="stop" scoped="" ref="0x7a619edf69c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7a619ef98610" loc="49:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef98610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ef94c40"/>
        <function-ref name="fired" scoped="" ref="0x7a619ef961e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619ef94020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619ef96ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7a619ef93590"/>
        <function-ref name="gett0" scoped="" ref="0x7a619ef93110"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ef96660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619ef97390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619ef94630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619ef97860"/>
        <function-ref name="stop" scoped="" ref="0x7a619ef97d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7a619ef8e1d0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7a619ef8e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ef8b630"/>
        <function-ref name="fired" scoped="" ref="0x7a619ef8dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619ef8c9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619ef8c550"/>
        <function-ref name="getdt" scoped="" ref="0x7a619ef89020"/>
        <function-ref name="gett0" scoped="" ref="0x7a619ef8bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ef8c0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619ef8edc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619ef8b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619ef8d2e0"/>
        <function-ref name="stop" scoped="" ref="0x7a619ef8d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7a619ef86a80" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7a619ef86a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619ef886f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619ef8f400" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619ef8f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619ef8f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619ee93870" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619ee93870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ee8f090"/>
        <function-ref name="fired" scoped="" ref="0x7a619ee90090"/>
        <function-ref name="startAt" scoped="" ref="0x7a619ee90a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ee90550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619ee8f550"/>
        <function-ref name="start" scoped="" ref="0x7a619ee926a0"/>
        <function-ref name="stop" scoped="" ref="0x7a619ee92bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619ee93020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619ee93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619ee933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619df6dbd0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619df6dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619df694e0"/>
        <function-ref name="fired" scoped="" ref="0x7a619df6b4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7a619df6be60"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619df6b9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619df699a0"/>
        <function-ref name="start" scoped="" ref="0x7a619df6ca80"/>
        <function-ref name="stop" scoped="" ref="0x7a619df6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619df6d380" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619df6d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619df6d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7a619df540c0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7a619df540c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619df54440"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619df545d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619df54760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619df548f0"/>
        <function-ref name="fired" scoped="" ref="0x7a619df54a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7a619df577b0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7a619df577b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619df57b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619df57cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619df57e50"/>
        <function-ref name="get" scoped="" ref="0x7a619df56020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619df561b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619df56340"/>
        <function-ref name="getMode" scoped="" ref="0x7a619df564d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619df56660"/>
        <function-ref name="overflow" scoped="" ref="0x7a619df567f0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619df56980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619df56b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7a619df56da0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619df56da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619df55180"/>
        <function-ref name="getControl" scoped="" ref="0x7a619df55310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619df554a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619df55630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619df557c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619df55950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619df55ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619df55c70"/>
        <function-ref name="setControl" scoped="" ref="0x7a619df55e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7a619ef61020" loc="52:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7a619ef61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619ef613a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619ef61530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619ef616c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619ef61850"/>
        <function-ref name="fired" scoped="" ref="0x7a619ef619e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7a619ef668b0" loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7a619ef668b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619ef66c30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619ef66dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619ef65020"/>
        <function-ref name="get" scoped="" ref="0x7a619ef651b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619ef65340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619ef654d0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619ef65660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619ef657f0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619ef65980"/>
        <function-ref name="setMode" scoped="" ref="0x7a619ef65b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619ef65ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7a619ef63560" loc="51:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619ef63560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619ef638e0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619ef63a70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619ef63c00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619ef63d90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619ef62020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619ef621b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619ef62340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619ef624d0"/>
        <function-ref name="setControl" scoped="" ref="0x7a619ef62660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7a619df4ada0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7a619df4ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619df49180"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619df49310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619df494a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619df49630"/>
        <function-ref name="fired" scoped="" ref="0x7a619df497c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7a619df4d4c0" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7a619df4d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619df4d840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619df4d9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619df4db60"/>
        <function-ref name="get" scoped="" ref="0x7a619df4dcf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619df4de80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619df4c030"/>
        <function-ref name="getMode" scoped="" ref="0x7a619df4c1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619df4c350"/>
        <function-ref name="overflow" scoped="" ref="0x7a619df4c4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619df4c670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619df4c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619df50340" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619df50340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619df4eba0"/>
        <function-ref name="fired" scoped="" ref="0x7a619df4fb80"/>
        <function-ref name="startAt" scoped="" ref="0x7a619df4e550"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619df4e090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619df4d090"/>
        <function-ref name="start" scoped="" ref="0x7a619df4f1b0"/>
        <function-ref name="stop" scoped="" ref="0x7a619df4f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619df51a30" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619df51a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619df51db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7a619df4ca90" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619df4ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619df4ce10"/>
        <function-ref name="getControl" scoped="" ref="0x7a619df4a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619df4a1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619df4a340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619df4a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619df4a660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619df4a7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619df4a980"/>
        <function-ref name="setControl" scoped="" ref="0x7a619df4ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7a619ef0b900" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619ef0b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619ef10780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619ef0f150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619ef10c40"/>
        <function-ref name="overflow" scoped="" ref="0x7a619ef0f610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7a619ef0a990" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7a619ef0a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619ef077c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619ef05170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619ef07c80"/>
        <function-ref name="overflow" scoped="" ref="0x7a619ef05630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7a619eef4c50" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7a619eef4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619eef3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619eef31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619eef3340"/>
        <function-ref name="get" scoped="" ref="0x7a619eef34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619eef3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619eef37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619eef3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619eef3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7a619eef3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619eef3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619eef2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7a619ef03b80" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619ef03b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619ef029b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619eef4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619ef02e70"/>
        <function-ref name="overflow" scoped="" ref="0x7a619eef4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7a619eed10f0" loc="63:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7a619eed10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619eed0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619eed09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619eed04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619eed0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7a619eeefcf0" loc="62:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619eeefcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619eed4b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619eed2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619eed2090"/>
        <function-ref name="overflow" scoped="" ref="0x7a619eed2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619df66020" loc="61:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619df66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619df64870"/>
        <function-ref name="fired" scoped="" ref="0x7a619df65840"/>
        <function-ref name="startAt" scoped="" ref="0x7a619df64220"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619df65d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619df64d30"/>
        <function-ref name="start" scoped="" ref="0x7a619df66e30"/>
        <function-ref name="stop" scoped="" ref="0x7a619df65380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7a619df60780" loc="73:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7a619df60780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619df5d020"/>
        <function-ref name="fired" scoped="" ref="0x7a619df5e020"/>
        <function-ref name="startAt" scoped="" ref="0x7a619df5e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619df5e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619df5d4e0"/>
        <function-ref name="start" scoped="" ref="0x7a619df5f5d0"/>
        <function-ref name="stop" scoped="" ref="0x7a619df5fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7a619df633d0" loc="68:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619df633d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619df61240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619df61bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619df61700"/>
        <function-ref name="overflow" scoped="" ref="0x7a619df600d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7a619ee5e9c0" loc="74:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7a619ee5e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619ee5ed40"/>
        <function-ref name="runTask" scoped="" ref="0x7a619ee5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7a619ee61850" loc="49:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619ee61850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ee5e090"/>
        <function-ref name="fired" scoped="" ref="0x7a619ee5f090"/>
        <function-ref name="startAt" scoped="" ref="0x7a619ee5fa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ee5f550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619ee5e550"/>
        <function-ref name="start" scoped="" ref="0x7a619ee606a0"/>
        <function-ref name="stop" scoped="" ref="0x7a619ee60bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619ee672f0" loc="48:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619ee672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ee63870"/>
        <function-ref name="fired" scoped="" ref="0x7a619ee65e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619ee64c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619ee64780"/>
        <function-ref name="getdt" scoped="" ref="0x7a619ee611e0"/>
        <function-ref name="gett0" scoped="" ref="0x7a619ee63cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ee64300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619ee65020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619ee63260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619ee654f0"/>
        <function-ref name="stop" scoped="" ref="0x7a619ee659c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7a619ee0ca00" loc="71:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7a619ee0ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619ee0cd80"/>
        <function-ref name="runTask" scoped="" ref="0x7a619ee0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7a619ee11640" loc="49:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7a619ee11640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ee0ec40"/>
        <function-ref name="fired" scoped="" ref="0x7a619ee0f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619ee0e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619ee0fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7a619ee0c590"/>
        <function-ref name="gett0" scoped="" ref="0x7a619ee0c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ee0f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619ee10390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619ee0e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619ee10860"/>
        <function-ref name="stop" scoped="" ref="0x7a619ee10d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619ee17150" loc="48:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619ee17150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ee13700"/>
        <function-ref name="fired" scoped="" ref="0x7a619ee16c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619ee14a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619ee145b0"/>
        <function-ref name="getdt" scoped="" ref="0x7a619ee11090"/>
        <function-ref name="gett0" scoped="" ref="0x7a619ee13ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ee14110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619ee17d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619ee130d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619ee162a0"/>
        <function-ref name="stop" scoped="" ref="0x7a619ee16790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7a619ee09790" loc="48:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7a619ee09790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619ee083f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7a619ee08a60" loc="49:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619ee08a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619edfe890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619edfd260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619edfed50"/>
        <function-ref name="overflow" scoped="" ref="0x7a619edfd720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7a619edef750" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="LightSensorAppC.LightSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7a619edef750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7a619e9e3390"/>
        <function-ref name="readDone" scoped="" ref="0x7a619e9e3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7a619e9e2020" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="LightSensorAppC.LightSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7a619e9e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7a619e9e1ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7a619e9e2c10"/>
        <function-ref name="read" scoped="" ref="0x7a619e9e15e0"/>
        <function-ref name="readDone" scoped="" ref="0x7a619e9e05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7a619edef020" loc="41:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="LightSensorAppC.LightSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7a619edef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7a619edef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7a619ded0570" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7a619ded0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7a619dece1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7a619dece630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7a619deced90" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7a619deced90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619decd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7a619edae340" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7a619edae340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619edae6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619edae850"/>
        <function-ref name="request" scoped="" ref="0x7a619edae9e0"/>
        <function-ref name="granted" scoped="" ref="0x7a619edaeb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619edaed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7a619edbcb10" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7a619edbcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7a619edbb750"/>
        <function-ref name="readDone" scoped="" ref="0x7a619edbbbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7a619edb5b10" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7a619edb5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7a619edb9790"/>
        <function-ref name="readDone" scoped="" ref="0x7a619edb9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7a619edafc70" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7a619edafc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619edb4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619edb41b0"/>
        <function-ref name="request" scoped="" ref="0x7a619edb4340"/>
        <function-ref name="granted" scoped="" ref="0x7a619edb44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619edb4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7a619edac8e0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7a619edac8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619edab5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7a619ed9ab10" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed9ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619edaa020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7a619edaa1b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7a619edaa340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7a619edaa4d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7a619edaa660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7a619edaa7f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7a619edaa980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7a619edb3020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7a619edb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619edb33a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619edb3530"/>
        <function-ref name="request" scoped="" ref="0x7a619edb36c0"/>
        <function-ref name="granted" scoped="" ref="0x7a619edb3850"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619edb39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7a619ed7e5c0" loc="136:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7a619ed7e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619ed7e940"/>
        <function-ref name="runTask" scoped="" ref="0x7a619ed7ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7a619dec0270" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7a619dec0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619dec05f0"/>
        <function-ref name="configure" scoped="" ref="0x7a619dec0780"/>
        <function-ref name="dataReady" scoped="" ref="0x7a619dec0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7a619dec1270" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619dec1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619dec15f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7a619dec1780"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7a619dec1910"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7a619dec1aa0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7a619dec1c30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7a619dec1dc0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7a619dec0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7a619dec0b60" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7a619dec0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7a619debf020"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7a619debf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7a619debf5e0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7a619debf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619debe240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619dec2550" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619dec2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619dec28d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619dec2a60"/>
        <function-ref name="request" scoped="" ref="0x7a619dec2bf0"/>
        <function-ref name="granted" scoped="" ref="0x7a619dec2d80"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619dec1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7a619ed42960" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7a619ed42960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619ed42ce0"/>
        <function-ref name="configure" scoped="" ref="0x7a619ed42e70"/>
        <function-ref name="dataReady" scoped="" ref="0x7a619ed41030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7a619ed3e1d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7a619ed3e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619ed3e550"/>
        <function-ref name="stop" scoped="" ref="0x7a619ed3e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7a619ed41920" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7a619ed41920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7a619ed41ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7a619ed41e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7a619ed431d0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed431d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619ed43550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7a619ed436e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7a619ed43870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7a619ed43a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7a619ed43b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7a619ed43d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7a619ed42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619ed47cd0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619ed47cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619ed440a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619ed44230"/>
        <function-ref name="request" scoped="" ref="0x7a619ed443c0"/>
        <function-ref name="granted" scoped="" ref="0x7a619ed44550"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619ed446e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7a619ed38af0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7a619ed38af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619ed38e70"/>
        <function-ref name="configure" scoped="" ref="0x7a619ed36030"/>
        <function-ref name="dataReady" scoped="" ref="0x7a619ed361c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7a619ed24b80" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7a619ed24b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7a619ed32020"/>
        <function-ref name="getMCtl" scoped="" ref="0x7a619ed321b0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7a619ed32340"/>
        <function-ref name="isBusy" scoped="" ref="0x7a619ed324d0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7a619ed32660"/>
        <function-ref name="getCtl1" scoped="" ref="0x7a619ed327f0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7a619ed32980"/>
        <function-ref name="startConversion" scoped="" ref="0x7a619ed32b10"/>
        <function-ref name="setCtl0" scoped="" ref="0x7a619ed32ca0"/>
        <function-ref name="getMem" scoped="" ref="0x7a619ed32e30"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7a619ed2f020"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7a619ed2f1b0"/>
        <function-ref name="stopConversion" scoped="" ref="0x7a619ed2f340"/>
        <function-ref name="enableConversion" scoped="" ref="0x7a619ed2f5d0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7a619ed2f760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7a619ed16540" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7a619ed16540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed168c0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed16a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed16be0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed16d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed15020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed15340"/>
        <function-ref name="get" scoped="" ref="0x7a619ed154d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed15660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed157f0"/>
        <function-ref name="set" scoped="" ref="0x7a619ed15980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed15b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed15ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed14020"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7a619ed1f9e0" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7a619ed1f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619ed1fd60"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619ed1e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619ed1e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619ed1e340"/>
        <function-ref name="fired" scoped="" ref="0x7a619ed1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7a619ed22220" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7a619ed22220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619ed225a0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619ed22730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619ed228c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619ed22a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619ed22be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619ed22d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619ed21020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619ed211b0"/>
        <function-ref name="setControl" scoped="" ref="0x7a619ed21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7a619ed35910" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7a619ed35910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619ed35c90"/>
        <function-ref name="stop" scoped="" ref="0x7a619ed35e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7a619ed1a640" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7a619ed1a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed1a9c0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed1ab50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed1ace0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed1ae70"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed19030"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed191c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed19350"/>
        <function-ref name="get" scoped="" ref="0x7a619ed194e0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed19670"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed19800"/>
        <function-ref name="set" scoped="" ref="0x7a619ed19990"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed19b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed19cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed18020"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7a619ed36ab0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7a619ed36ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7a619ed36e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7a619ed35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7a619ed10540" loc="61:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7a619ed10540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed108c0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed10a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed10be0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed10d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed0f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed0f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed0f340"/>
        <function-ref name="get" scoped="" ref="0x7a619ed0f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed0f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed0f7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619ed0f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed0fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed0fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed0e020"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7a619ed1e860" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7a619ed1e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed1ece0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed1ee70"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed1d030"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed1d1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed1d350"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed1d4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed1d670"/>
        <function-ref name="get" scoped="" ref="0x7a619ed1d800"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed1d990"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed1db20"/>
        <function-ref name="set" scoped="" ref="0x7a619ed1dcb0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed1de40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed1c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed1c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed1c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619ed3a680" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619ed3a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619ed3aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7a619ed14540" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7a619ed14540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed148c0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed14a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed14be0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed14d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed13020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed13340"/>
        <function-ref name="get" scoped="" ref="0x7a619ed134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed13660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed137f0"/>
        <function-ref name="set" scoped="" ref="0x7a619ed13980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed13b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed13ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed12020"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed121b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7a619ed2faa0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7a619ed2faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619ed2fe20"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619ed23020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619ed231b0"/>
        <function-ref name="get" scoped="" ref="0x7a619ed23340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619ed234d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619ed23660"/>
        <function-ref name="getMode" scoped="" ref="0x7a619ed237f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619ed23980"/>
        <function-ref name="overflow" scoped="" ref="0x7a619ed23b10"/>
        <function-ref name="setMode" scoped="" ref="0x7a619ed23ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619ed23e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7a619ed31b30" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7a619ed31b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619ed33020"/>
        <function-ref name="userId" scoped="" ref="0x7a619ed331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7a619ed216f0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7a619ed216f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619ed21a70"/>
        <function-ref name="getControl" scoped="" ref="0x7a619ed21c00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619ed21d90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619ed20020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619ed201b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619ed20340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619ed204d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619ed20660"/>
        <function-ref name="setControl" scoped="" ref="0x7a619ed207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7a619ed393f0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7a619ed393f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619ed39770"/>
        <function-ref name="configureSingle" scoped="" ref="0x7a619ed39900"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7a619ed39a90"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7a619ed39c20"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7a619ed39db0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7a619ed38020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7a619ed381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7a619ed18540" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7a619ed18540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed188c0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed18a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed18be0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed18d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed17020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed17340"/>
        <function-ref name="get" scoped="" ref="0x7a619ed174d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed17660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed177f0"/>
        <function-ref name="set" scoped="" ref="0x7a619ed17980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed17b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed17ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed16020"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7a619ed20b70" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7a619ed20b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619ed1f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619ed1f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619ed1f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619ed1f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7a619ed1f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7a619ed1c7d0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7a619ed1c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed1cb50"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed1cce0"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed1ce70"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed1b030"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed1b1c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed1b350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed1b4e0"/>
        <function-ref name="get" scoped="" ref="0x7a619ed1b670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed1b800"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed1b990"/>
        <function-ref name="set" scoped="" ref="0x7a619ed1bb20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed1bcb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed1be40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed1a120"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed1a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7a619ed12540" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7a619ed12540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619ed128c0"/>
        <function-ref name="isInput" scoped="" ref="0x7a619ed12a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619ed12be0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619ed12d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619ed11020"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619ed111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619ed11340"/>
        <function-ref name="get" scoped="" ref="0x7a619ed114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619ed11660"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619ed117f0"/>
        <function-ref name="set" scoped="" ref="0x7a619ed11980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619ed11b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619ed11ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619ed10020"/>
        <function-ref name="clr" scoped="" ref="0x7a619ed101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7a619ec510c0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7a619ec510c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7a619ec51440"/>
        <function-ref name="getMCtl" scoped="" ref="0x7a619ec515d0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7a619ec51760"/>
        <function-ref name="isBusy" scoped="" ref="0x7a619ec518f0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7a619ec51a80"/>
        <function-ref name="getCtl1" scoped="" ref="0x7a619ec51c10"/>
        <function-ref name="setMCtl" scoped="" ref="0x7a619ec51da0"/>
        <function-ref name="startConversion" scoped="" ref="0x7a619ec50020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7a619ec501b0"/>
        <function-ref name="getMem" scoped="" ref="0x7a619ec50340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7a619ec504d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7a619ec50660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7a619ec507f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7a619ec50a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7a619ec50c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7a619ebb93a0" loc="86:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7a619ebb93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7a619ebb9740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619ebb98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7a619ebb8570" loc="89:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619ebb8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619ebb8910"/>
        <function-ref name="configure" scoped="" ref="0x7a619ebb8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619ebba520" loc="85:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619ebba520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619ebba8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619ebbaa50"/>
        <function-ref name="request" scoped="" ref="0x7a619ebbabe0"/>
        <function-ref name="granted" scoped="" ref="0x7a619ebbad70"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619ebb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7a619ebb9b20" loc="87:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619ebb9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619ebb8020"/>
        <function-ref name="userId" scoped="" ref="0x7a619ebb81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619de9bca0" loc="44:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619de9bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619de860a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7a619de86330" loc="45:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7a619de86330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7a619de866b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7a619de86840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7a619de869d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7a619de86b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7a619de83020" loc="52:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7a619de83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7a619de833c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619de83550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7a619de820d0" loc="56:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619de820d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619de82470"/>
        <function-ref name="configure" scoped="" ref="0x7a619de82600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7a619de82890" loc="57:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7a619de82890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7a619de82c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7a619de82da0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7a619de80020"/>
        <function-ref name="dequeue" scoped="" ref="0x7a619de801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619de84270" loc="51:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619de84270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619de84610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619de847a0"/>
        <function-ref name="request" scoped="" ref="0x7a619de84930"/>
        <function-ref name="granted" scoped="" ref="0x7a619de84ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619de84c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7a619de837a0" loc="53:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619de837a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619de83b20"/>
        <function-ref name="userId" scoped="" ref="0x7a619de83cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7a619de80480" loc="68:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7a619de80480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619de80800"/>
        <function-ref name="runTask" scoped="" ref="0x7a619de80990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7a619eb9b740" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7a619eb9b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619eb9a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7a619eb9c1d0" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7a619eb9c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619eb9c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619eb9c6e0"/>
        <function-ref name="request" scoped="" ref="0x7a619eb9c870"/>
        <function-ref name="granted" scoped="" ref="0x7a619eb9ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619eb9cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7a619eba1d30" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7a619eba1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619eb9e0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619eb9e270"/>
        <function-ref name="request" scoped="" ref="0x7a619eb9e400"/>
        <function-ref name="granted" scoped="" ref="0x7a619eb9e590"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619eb9e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7a619eb96c40" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7a619eb96c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7a619eb95020"/>
        <function-ref name="getMCtl" scoped="" ref="0x7a619eb951b0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7a619eb95340"/>
        <function-ref name="isBusy" scoped="" ref="0x7a619eb954d0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7a619eb95660"/>
        <function-ref name="getCtl1" scoped="" ref="0x7a619eb957f0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7a619eb95980"/>
        <function-ref name="startConversion" scoped="" ref="0x7a619eb95b10"/>
        <function-ref name="setCtl0" scoped="" ref="0x7a619eb95ca0"/>
        <function-ref name="getMem" scoped="" ref="0x7a619eb95e30"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7a619eb8b020"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7a619eb8b1b0"/>
        <function-ref name="stopConversion" scoped="" ref="0x7a619eb8b340"/>
        <function-ref name="enableConversion" scoped="" ref="0x7a619eb8b5d0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7a619eb8b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7a619eb850f0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7a619eb850f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619eb81630"/>
        <function-ref name="fired" scoped="" ref="0x7a619eb84b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619eb83920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619eb834a0"/>
        <function-ref name="getdt" scoped="" ref="0x7a619eb80020"/>
        <function-ref name="gett0" scoped="" ref="0x7a619eb81ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619eb83020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619eb85ce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619eb81020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619eb84220"/>
        <function-ref name="stop" scoped="" ref="0x7a619eb846f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7a619eb960e0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7a619eb960e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619eb96460"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619eb965f0"/>
        <function-ref name="start" scoped="" ref="0x7a619eb96780"/>
        <function-ref name="stop" scoped="" ref="0x7a619eb96910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7a619eb806c0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7a619eb806c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619eb7cc40"/>
        <function-ref name="fired" scoped="" ref="0x7a619eb7e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619eb7c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619eb7eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7a619eb7b590"/>
        <function-ref name="gett0" scoped="" ref="0x7a619eb7b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619eb7e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619eb7f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619eb7c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619eb7f860"/>
        <function-ref name="stop" scoped="" ref="0x7a619eb7fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7a619eb8c490" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7a619eb8c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619eb8c810"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619eb8c9a0"/>
        <function-ref name="start" scoped="" ref="0x7a619eb8cb30"/>
        <function-ref name="stop" scoped="" ref="0x7a619eb8ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7a619eb8bc20" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7a619eb8bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619eb86110"/>
        <function-ref name="fired" scoped="" ref="0x7a619eb896a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619eb884a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619eb88020"/>
        <function-ref name="getdt" scoped="" ref="0x7a619eb86a10"/>
        <function-ref name="gett0" scoped="" ref="0x7a619eb86590"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619eb89b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619eb8a860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619eb88ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619eb8ad30"/>
        <function-ref name="stop" scoped="" ref="0x7a619eb89220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7a619eb2b020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7a619eb2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619eb2bc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7a619eb2d9c0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7a619eb2d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619eb2dd40"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619eb2c020"/>
        <function-ref name="start" scoped="" ref="0x7a619eb2c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7a619eb2c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7a619eb2f030" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7a619eb2f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619eb2f3b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619eb2f540"/>
        <function-ref name="request" scoped="" ref="0x7a619eb2f6d0"/>
        <function-ref name="granted" scoped="" ref="0x7a619eb2f860"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619eb2f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7a619eb33cb0" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7a619eb33cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619eb300a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619eb30230"/>
        <function-ref name="request" scoped="" ref="0x7a619eb303c0"/>
        <function-ref name="granted" scoped="" ref="0x7a619eb30550"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619eb306e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7a619eb297f0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7a619eb297f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619eb29b70"/>
        <function-ref name="runTask" scoped="" ref="0x7a619eb29d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7a619eb2fd80" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7a619eb2fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619eb2d180"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619eb2d310"/>
        <function-ref name="start" scoped="" ref="0x7a619eb2d4a0"/>
        <function-ref name="stop" scoped="" ref="0x7a619eb2d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619eafa4e0" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619eafa4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619eaf6a20"/>
        <function-ref name="fired" scoped="" ref="0x7a619eaf8020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619eaf8da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619eaf8920"/>
        <function-ref name="getdt" scoped="" ref="0x7a619eaf54a0"/>
        <function-ref name="gett0" scoped="" ref="0x7a619eaf5020"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619eaf84a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619eaf9110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619eaf6410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619eaf95e0"/>
        <function-ref name="stop" scoped="" ref="0x7a619eaf9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619eaf3020" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619eaf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619eaef630"/>
        <function-ref name="fired" scoped="" ref="0x7a619eaf2a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619eaf0920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619eaf04a0"/>
        <function-ref name="getdt" scoped="" ref="0x7a619eaee020"/>
        <function-ref name="gett0" scoped="" ref="0x7a619eaefab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619eaf0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619eaf3c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619eaef020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619eaf2110"/>
        <function-ref name="stop" scoped="" ref="0x7a619eaf25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7a619eaedb40" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7a619eaedb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619eae8110"/>
        <function-ref name="fired" scoped="" ref="0x7a619eaea5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7a619eae94a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7a619eae9020"/>
        <function-ref name="getdt" scoped="" ref="0x7a619eae8a10"/>
        <function-ref name="gett0" scoped="" ref="0x7a619eae8590"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619eaeaa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7a619eaec750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7a619eae9ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7a619eaecc20"/>
        <function-ref name="stop" scoped="" ref="0x7a619eaea130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7a619deb1c60" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7a619deb1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619deb08e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7a619deae020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7a619deae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619deaec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7a619dec8df0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7a619dec8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619dec7ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7a619decb140" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7a619decb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7a619dec9ba0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7a619decbd30"/>
        <function-ref name="read" scoped="" ref="0x7a619dec96d0"/>
        <function-ref name="readDone" scoped="" ref="0x7a619dec8690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7a619eab1c90" loc="23:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619eab1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619eaaf0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7a619eaaf230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7a619eaaf3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7a619eaaf550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7a619eaaf6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7a619eaaf870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7a619eaafa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7a619eab25e0" loc="22:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7a619eab25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619eab1240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7a619eab61d0" loc="20:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7a619eab61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7a619eab5c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7a619eab6dc0"/>
        <function-ref name="read" scoped="" ref="0x7a619eab5770"/>
        <function-ref name="readDone" scoped="" ref="0x7a619eab3730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7a619eaae280" loc="24:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619eaae280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619eaae600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619eaae790"/>
        <function-ref name="request" scoped="" ref="0x7a619eaae920"/>
        <function-ref name="granted" scoped="" ref="0x7a619eaaeab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619eaaec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7a619ea78380" loc="156:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7a619ea78380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619ea78700"/>
        <function-ref name="runTask" scoped="" ref="0x7a619ea78890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7a619ea86aa0" loc="119:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7a619ea86aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619ea86e20"/>
        <function-ref name="runTask" scoped="" ref="0x7a619ea85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7a619ea80100" loc="135:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7a619ea80100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619ea80480"/>
        <function-ref name="runTask" scoped="" ref="0x7a619ea80610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7a619eaa1020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619eaa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ea9e870"/>
        <function-ref name="fired" scoped="" ref="0x7a619eaa0840"/>
        <function-ref name="startAt" scoped="" ref="0x7a619ea9e220"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619eaa0d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619ea9ed30"/>
        <function-ref name="start" scoped="" ref="0x7a619eaa1e30"/>
        <function-ref name="stop" scoped="" ref="0x7a619eaa0380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619eaaa150" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619eaaa150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7a619f909800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7a619f909800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619eaaa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7a619eaa4b10" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7a619eaa4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619eaa2790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7a619eaa51d0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7a619eaa51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619eaa5550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7a619eaa56e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7a619eaa5870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7a619eaa5a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7a619eaa5b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7a619eaa5d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7a619eaa4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7a619eaaae70" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7a619eaaae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7a619eaa7910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7a619eaa9a90"/>
        <function-ref name="read" scoped="" ref="0x7a619eaa7440"/>
        <function-ref name="readDone" scoped="" ref="0x7a619eaa6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619ea3c970" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619ea3c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619ea381b0"/>
        <function-ref name="fired" scoped="" ref="0x7a619ea3a1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7a619ea3ab30"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619ea3a670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619ea38670"/>
        <function-ref name="start" scoped="" ref="0x7a619ea3b7c0"/>
        <function-ref name="stop" scoped="" ref="0x7a619ea3bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619ea3c120" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619ea3c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619ea3c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619de38870" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619de38870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619de34090"/>
        <function-ref name="fired" scoped="" ref="0x7a619de36090"/>
        <function-ref name="startAt" scoped="" ref="0x7a619de36a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619de36550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619de34550"/>
        <function-ref name="start" scoped="" ref="0x7a619de376a0"/>
        <function-ref name="stop" scoped="" ref="0x7a619de37bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619de38020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619de38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619de383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7a619de20da0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7a619de20da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619de1f180"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619de1f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619de1f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619de1f630"/>
        <function-ref name="fired" scoped="" ref="0x7a619de1f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7a619de22450" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7a619de22450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619de227d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619de22960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619de22af0"/>
        <function-ref name="get" scoped="" ref="0x7a619de22c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619de22e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619de21020"/>
        <function-ref name="getMode" scoped="" ref="0x7a619de211b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619de21340"/>
        <function-ref name="overflow" scoped="" ref="0x7a619de214d0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619de21660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619de217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7a619de21a80" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619de21a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619de21e00"/>
        <function-ref name="getControl" scoped="" ref="0x7a619de20020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619de201b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619de20340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619de204d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619de20660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619de207f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619de20980"/>
        <function-ref name="setControl" scoped="" ref="0x7a619de20b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7a619de16a80" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7a619de16a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7a619de16e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7a619de14020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7a619de141b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7a619de14340"/>
        <function-ref name="fired" scoped="" ref="0x7a619de144d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7a619de18190" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7a619de18190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619de18510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7a619de186a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619de18830"/>
        <function-ref name="get" scoped="" ref="0x7a619de189c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619de18b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619de18ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619de18e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619de17030"/>
        <function-ref name="overflow" scoped="" ref="0x7a619de171c0"/>
        <function-ref name="setMode" scoped="" ref="0x7a619de17350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7a619de174e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619de1b020" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619de1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619de19870"/>
        <function-ref name="fired" scoped="" ref="0x7a619de1a840"/>
        <function-ref name="startAt" scoped="" ref="0x7a619de19220"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619de1ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619de19d30"/>
        <function-ref name="start" scoped="" ref="0x7a619de1be30"/>
        <function-ref name="stop" scoped="" ref="0x7a619de1a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619de1d660" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619de1d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619de1d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7a619de17770" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7a619de17770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7a619de17af0"/>
        <function-ref name="getControl" scoped="" ref="0x7a619de17c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7a619de17e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7a619de16020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7a619de161b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7a619de16340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7a619de164d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7a619de16660"/>
        <function-ref name="setControl" scoped="" ref="0x7a619de167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7a619de32a90" loc="61:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7a619de32a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619de2f2e0"/>
        <function-ref name="fired" scoped="" ref="0x7a619de302e0"/>
        <function-ref name="startAt" scoped="" ref="0x7a619de30c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619de307a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619de2f7a0"/>
        <function-ref name="start" scoped="" ref="0x7a619de318d0"/>
        <function-ref name="stop" scoped="" ref="0x7a619de31de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7a619de2b210" loc="73:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7a619de2b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7a619de29b30"/>
        <function-ref name="fired" scoped="" ref="0x7a619de2aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7a619de294e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7a619de29020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7a619de28020"/>
        <function-ref name="start" scoped="" ref="0x7a619de2a090"/>
        <function-ref name="stop" scoped="" ref="0x7a619de2a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7a619de2fe10" loc="68:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619de2fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f416880"/>
            <typename><typedef-ref name="TMilli" ref="0x7a619f416bf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619de2eca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619de2c670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619de2c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619de2cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7a619ea09bf0" loc="26:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7a619ea09bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7a619ea06710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7a619ea07860"/>
        <function-ref name="read" scoped="" ref="0x7a619ea06220"/>
        <function-ref name="readDone" scoped="" ref="0x7a619ea04220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7a619ea34cb0" loc="24:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7a619ea34cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7a619ea0a850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7a619ea0b940"/>
        <function-ref name="read" scoped="" ref="0x7a619ea0a360"/>
        <function-ref name="readDone" scoped="" ref="0x7a619ea09360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7a619ea048f0" loc="27:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619ea048f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619ea04c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619ea04e20"/>
        <function-ref name="request" scoped="" ref="0x7a619ea03020"/>
        <function-ref name="granted" scoped="" ref="0x7a619ea031b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619ea03340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7a619de47d70" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7a619de47d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619de46180"/>
        <function-ref name="configure" scoped="" ref="0x7a619de46310"/>
        <function-ref name="dataReady" scoped="" ref="0x7a619de464a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7a619de48e10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7a619de48e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7a619de471c0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7a619de47350"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7a619de474e0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7a619de47670"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7a619de47800"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7a619de47990"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7a619de47b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7a619de466f0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7a619de466f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7a619de46a70"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7a619de46c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7a619de45060" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7a619de45060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619de45c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619de48200" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619de48200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619de48580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619de48710"/>
        <function-ref name="request" scoped="" ref="0x7a619de488a0"/>
        <function-ref name="granted" scoped="" ref="0x7a619de48a30"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619de48bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7a619ddd4a60" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7a619ddd4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619ddd36b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7a619ddd3cc0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7a619ddd3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619ddd2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7a619e9eb300" loc="44:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7a619e9eb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7a619e9ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7a619e9ee8b0" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7a619e9ee8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7a619e9eec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7a619e4a0020" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7a619e4a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e4a03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e4a0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e4a06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e4a0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e4a09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7a619e4a0c30" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7a619e4a0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619e49f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7a619e49f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e49f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e49f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7a619e49f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7a619e49f8b0" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7a619e49f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7a619e49fc30"/>
        <function-ref name="source" scoped="" ref="0x7a619e49fdc0"/>
        <function-ref name="address" scoped="" ref="0x7a619e49e020"/>
        <function-ref name="destination" scoped="" ref="0x7a619e49e1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7a619e49e340"/>
        <function-ref name="setDestination" scoped="" ref="0x7a619e49e4d0"/>
        <function-ref name="type" scoped="" ref="0x7a619e49e660"/>
        <function-ref name="setType" scoped="" ref="0x7a619e49e7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7a619e49e980"/>
        <function-ref name="setGroup" scoped="" ref="0x7a619e49eb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7a619e49eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7a619e49d020" loc="52:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7a619e49d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7a619e49d3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7a619e49d530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7a619e49d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7a619ddc3020" loc="44:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7a619ddc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619ddc33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619ddc3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619ddc36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619ddc3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619ddc39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7a619ddc3c90" loc="46:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7a619ddc3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619ddc10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619ddc1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619ddc13c0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619ddc1550"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619ddc16e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7a619ddc1930" loc="47:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7a619ddc1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7a619ddc1cb0"/>
        <function-ref name="source" scoped="" ref="0x7a619ddc1e40"/>
        <function-ref name="address" scoped="" ref="0x7a619ddc0020"/>
        <function-ref name="destination" scoped="" ref="0x7a619ddc01b0"/>
        <function-ref name="setSource" scoped="" ref="0x7a619ddc0340"/>
        <function-ref name="setDestination" scoped="" ref="0x7a619ddc04d0"/>
        <function-ref name="type" scoped="" ref="0x7a619ddc0660"/>
        <function-ref name="setType" scoped="" ref="0x7a619ddc07f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7a619ddc0980"/>
        <function-ref name="setGroup" scoped="" ref="0x7a619ddc0b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7a619ddc0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7a619e98da00" loc="44:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7a619e98da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e98dd80"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e98a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e98a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e98a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e98a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7a619e940400" loc="48:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7a619e940400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e9407a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e940930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e940ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e940c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e940de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7a619e941580" loc="46:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7a619e941580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e941920"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e941ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e941c40"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e941dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e940020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7a619e93e720" loc="50:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7a619e93e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619e93eaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7a619e93ec30"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e93edc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e93d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7a619e93d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7a619e93d480" loc="169:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7a619e93d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e93d800"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e93d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7a619e93dc60" loc="126:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7a619e93dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e93b020"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e93b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7a619e93f060" loc="49:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7a619e93f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7a619e93f3e0"/>
        <function-ref name="source" scoped="" ref="0x7a619e93f570"/>
        <function-ref name="address" scoped="" ref="0x7a619e93f700"/>
        <function-ref name="destination" scoped="" ref="0x7a619e93f890"/>
        <function-ref name="setSource" scoped="" ref="0x7a619e93fa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7a619e93fbb0"/>
        <function-ref name="type" scoped="" ref="0x7a619e93fd40"/>
        <function-ref name="setType" scoped="" ref="0x7a619e93e020"/>
        <function-ref name="isForMe" scoped="" ref="0x7a619e93e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7a619e93e340"/>
        <function-ref name="localGroup" scoped="" ref="0x7a619e93e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7a619e937140" loc="46:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7a619e937140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619e9374c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619e937650"/>
        <function-ref name="start" scoped="" ref="0x7a619e9377e0"/>
        <function-ref name="stop" scoped="" ref="0x7a619e937970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7a619e9361d0" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7a619e9361d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e936550"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e9366e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e936870"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e936a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e936b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7a619e934630" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7a619e934630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619e9349b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7a619e934b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e934cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e934e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7a619e933020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7a619e934020" loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7a619e934020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7a619e9343a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619e92e490" loc="53:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619e92e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619e92e810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619e92e9a0"/>
        <function-ref name="led1On" scoped="" ref="0x7a619e92eb30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619e92ecc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619e92ee50"/>
        <function-ref name="get" scoped="" ref="0x7a619e92d020"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619e92d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619e92d7f0"/>
        <function-ref name="set" scoped="" ref="0x7a619e92d340"/>
        <function-ref name="led0On" scoped="" ref="0x7a619e92d4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7a619e92d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7a619e931990" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7a619e931990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7a619e931d10"/>
        <function-ref name="noAck" scoped="" ref="0x7a619e92e020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7a619e92e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7a619e9332d0" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7a619e9332d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7a619e933650"/>
        <function-ref name="source" scoped="" ref="0x7a619e9337e0"/>
        <function-ref name="address" scoped="" ref="0x7a619e933970"/>
        <function-ref name="destination" scoped="" ref="0x7a619e933b00"/>
        <function-ref name="setSource" scoped="" ref="0x7a619e933c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7a619e933e20"/>
        <function-ref name="type" scoped="" ref="0x7a619e931020"/>
        <function-ref name="setType" scoped="" ref="0x7a619e9311b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7a619e931340"/>
        <function-ref name="setGroup" scoped="" ref="0x7a619e9314d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7a619e931660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7a619e8d39f0" loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7a619e8d39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e8d3d70"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e8d1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e8d11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e8d1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e8d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7a619e8d1760" loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7a619e8d1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7a619e8d1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7a619e92a7d0" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7a619e92a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e92ab70"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e92ad00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e8d6020"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e8d61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e8d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7a619e8d4400" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7a619e8d4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619e8d4780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7a619e8d4910"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e8d4aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e8d4c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7a619e8d4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7a619e8d66c0" loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7a619e8d66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7a619e8d6a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7a619e8d3060" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7a619e8d3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7a619e8d33e0"/>
        <function-ref name="noAck" scoped="" ref="0x7a619e8d3570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7a619e8d3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7a619e8d6cb0" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7a619e8d6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7a619e8d50a0"/>
        <function-ref name="source" scoped="" ref="0x7a619e8d5230"/>
        <function-ref name="address" scoped="" ref="0x7a619e8d53c0"/>
        <function-ref name="destination" scoped="" ref="0x7a619e8d5550"/>
        <function-ref name="setSource" scoped="" ref="0x7a619e8d56e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7a619e8d5870"/>
        <function-ref name="type" scoped="" ref="0x7a619e8d5a00"/>
        <function-ref name="setType" scoped="" ref="0x7a619e8d5b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7a619e8d5d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7a619e8d4020"/>
        <function-ref name="localGroup" scoped="" ref="0x7a619e8d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7a619e8cc2f0" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7a619e8cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619e8cc670"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619e8cc800"/>
        <function-ref name="start" scoped="" ref="0x7a619e8cc990"/>
        <function-ref name="stop" scoped="" ref="0x7a619e8ccb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7a619e8cbe10" loc="52:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7a619e8cbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7a619f42a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e8ca1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e8ca350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e8ca4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e8ca670"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e8ca800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619e8cfbc0" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619e8cfbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619e8cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7a619e8cb320" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7a619e8cb320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7a619f42a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7a619e8cb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619e8c9940" loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619e8c9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619e8c9cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619e8c9e50"/>
        <function-ref name="led1On" scoped="" ref="0x7a619e8c8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619e8c81b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619e8c8340"/>
        <function-ref name="get" scoped="" ref="0x7a619e8c84d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619e8c8660"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619e8c8ca0"/>
        <function-ref name="set" scoped="" ref="0x7a619e8c87f0"/>
        <function-ref name="led0On" scoped="" ref="0x7a619e8c8980"/>
        <function-ref name="led2On" scoped="" ref="0x7a619e8c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7a619e8c9020" loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7a619e8c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7a619f42a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7a619e8c93a0"/>
        <function-ref name="offset" scoped="" ref="0x7a619e8c9530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7a619e8c96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7a619e8bc450" loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7a619e8bc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619e8bc7d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619e8bc960"/>
        <function-ref name="start" scoped="" ref="0x7a619e8bcaf0"/>
        <function-ref name="stop" scoped="" ref="0x7a619e8bcc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7a619e854e40" loc="332:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7a619e854e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e8521e0"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e852370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7a619e8a6e00" loc="74:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7a619e8a6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619e8a81c0"/>
        <function-ref name="stop" scoped="" ref="0x7a619e8a8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7a619e88bd10" loc="191:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7a619e88bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e88a0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e88a270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619e8bdd60" loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619e8bdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619e8bc180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7a619e8a4a80" loc="75:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7a619e8a4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7a619e8a4e00"/>
        <function-ref name="flush" scoped="" ref="0x7a619e8a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7a619e856400" loc="322:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7a619e856400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e856780"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e856910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7a619e8abe30" loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7a619e8abe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7a619e8b41e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7a619e8b4370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7a619e8b4500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7a619e8b4690"/>
        <function-ref name="putData" scoped="" ref="0x7a619e8b4820"/>
        <function-ref name="putDone" scoped="" ref="0x7a619e8b49b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7a619e8b4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619e8b4dc0" loc="73:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619e8b4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619e8aa180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619e8aa310"/>
        <function-ref name="led1On" scoped="" ref="0x7a619e8aa4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619e8aa630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619e8aa7c0"/>
        <function-ref name="get" scoped="" ref="0x7a619e8aa950"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619e8aaae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619e8a91b0"/>
        <function-ref name="set" scoped="" ref="0x7a619e8aac70"/>
        <function-ref name="led0On" scoped="" ref="0x7a619e8aae00"/>
        <function-ref name="led2On" scoped="" ref="0x7a619e8a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7a619e84f0c0" loc="341:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7a619e84f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e84f440"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e84f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7a619e8b54a0" loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7a619e8b54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7a619e8b5820"/>
        <function-ref name="nextByte" scoped="" ref="0x7a619e8b59b0"/>
        <function-ref name="startSend" scoped="" ref="0x7a619e8b5b40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7a619e8b5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7a619e8b2ad0" loc="68:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7a619e8b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7a619e8b2e50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7a619e8b9020"/>
        <function-ref name="endPacket" scoped="" ref="0x7a619e8b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7a619e785c50" loc="275:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7a619e785c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e784020"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e7841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7a619e789830" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7a619e789830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7a619f42a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e789bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e789d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e788020"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e7881b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e788340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7a619e784480" loc="158:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7a619e784480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e784800"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e784990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7a619e789110" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7a619e789110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7a619f42a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7a619e7894b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7a619e788760" loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7a619e788760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7a619f42a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7a619e788b00"/>
        <function-ref name="offset" scoped="" ref="0x7a619e788c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7a619e788e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619e786590" loc="57:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619e786590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619e786910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619e786aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7a619e786c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619e786dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619e785020"/>
        <function-ref name="get" scoped="" ref="0x7a619e7851b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619e785340"/>
        <function-ref name="led2On" scoped="" ref="0x7a619e785980"/>
        <function-ref name="set" scoped="" ref="0x7a619e785660"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619e7854d0"/>
        <function-ref name="led0On" scoped="" ref="0x7a619e7857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7a619e7879d0" loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7a619e7879d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7a619e787d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7a619e786020"/>
        <function-ref name="startSend" scoped="" ref="0x7a619e7861b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7a619e786340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7a619e7870e0" loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7a619e7870e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7a619e787460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7a619e7875f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7a619e787780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7a619e774d20" loc="50:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7a619e774d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e77e0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7a619e77e270"/>
        <function-ref name="receive" scoped="" ref="0x7a619e77e400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7a619e77e590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7a619e77e720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7a619e77e8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e77ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7a619e782b70" loc="48:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7a619e782b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7a619e77f020"/>
        <function-ref name="resetSend" scoped="" ref="0x7a619e77f1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7a619e77f340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7a619e77f4d0"/>
        <function-ref name="putData" scoped="" ref="0x7a619e77f660"/>
        <function-ref name="putDone" scoped="" ref="0x7a619e77f7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7a619e77f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619e77ecc0" loc="51:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619e77ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619e77d0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619e77d230"/>
        <function-ref name="led1On" scoped="" ref="0x7a619e77d3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619e77d550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619e77d6e0"/>
        <function-ref name="get" scoped="" ref="0x7a619e77d870"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619e77da00"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619e7711b0"/>
        <function-ref name="set" scoped="" ref="0x7a619e77db90"/>
        <function-ref name="led0On" scoped="" ref="0x7a619e77dd20"/>
        <function-ref name="led2On" scoped="" ref="0x7a619e771020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7a619e755020" loc="6:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7a619e755020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e7553a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7a619e755530"/>
        <function-ref name="receive" scoped="" ref="0x7a619e7556c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7a619e755850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7a619e757890" loc="5:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7a619e757890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e757c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7a619e757da0"/>
        <function-ref name="receive" scoped="" ref="0x7a619e756020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7a619e7561b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7a619e756340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7a619e7564d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e756660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7a619e757080" loc="4:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7a619e757080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619e757400"/>
        <function-ref name="stop" scoped="" ref="0x7a619e757590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7a619e4d1c70" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e4d1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7a619e4d0020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619e4d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7a619e4cf440" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7a619e4cf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e4cf7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7a619e4cf950"/>
        <function-ref name="receive" scoped="" ref="0x7a619e4cfae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7a619e4cfc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7a619e4ce020" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e4ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7a619e4ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7a619e4d0440" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7a619e4d0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e4d07c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7a619e4d0950"/>
        <function-ref name="receive" scoped="" ref="0x7a619e4d0ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7a619e4d0c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7a619e4d0e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7a619e4cf020"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e4cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619e4d1020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619e4d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e4d13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e4d1530"/>
        <function-ref name="request" scoped="" ref="0x7a619e4d16c0"/>
        <function-ref name="granted" scoped="" ref="0x7a619e4d1850"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e4d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7a619e6f68a0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e6f68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619e6f6c20"/>
        <function-ref name="configure" scoped="" ref="0x7a619e6f6db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7a619e6f3d00" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7a619e6f3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e6f20a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7a619e6f2230"/>
        <function-ref name="receive" scoped="" ref="0x7a619e6f23c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7a619e6f2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7a619e6ef1d0" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e6ef1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7a619e6ef550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7a619e6f4670" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7a619e6f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e6f49f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7a619e6f4b80"/>
        <function-ref name="receive" scoped="" ref="0x7a619e6f4d10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7a619e6f3020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7a619e6f31b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7a619e6f3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e6f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7a619e6f2e50" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7a619e6f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e6f1210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e6f13a0"/>
        <function-ref name="request" scoped="" ref="0x7a619e6f1530"/>
        <function-ref name="granted" scoped="" ref="0x7a619e6f16c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e6f1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619e6f74d0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619e6f74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e6f7850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e6f79e0"/>
        <function-ref name="request" scoped="" ref="0x7a619e6f7b70"/>
        <function-ref name="granted" scoped="" ref="0x7a619e6f7d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e6f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7a619e6eb710" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7a619e6eb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619e6eba90"/>
        <function-ref name="txDone" scoped="" ref="0x7a619e6ebc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7a619e65de70" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e65de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619e65c240"/>
        <function-ref name="configure" scoped="" ref="0x7a619e65c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7a619e65b890" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7a619e65b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e65bc30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7a619e65bdc0"/>
        <function-ref name="receive" scoped="" ref="0x7a619e65a020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7a619e65a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7a619e6593e0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e6593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7a619e659780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7a619e659a50" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7a619e659a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7a619e659dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7a619e657020"/>
        <function-ref name="setUctl" scoped="" ref="0x7a619e6571b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7a619e657340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7a619e6574d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7a619e657660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7a619e6577f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7a619e657980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7a619e657b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7a619e657ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7a619e657e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7a619e656020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7a619e6561b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7a619e656440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7a619e6565d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7a619e656760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7a619e6568f0"/>
        <function-ref name="isUart" scoped="" ref="0x7a619e656a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7a619e656c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7a619e656da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7a619e655020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7a619e6551b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7a619e655340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7a619e6554d0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619e655660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7a619e6559f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7a619e655b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7a619e655d10"/>
        <function-ref name="tx" scoped="" ref="0x7a619e654020"/>
        <function-ref name="getUctl" scoped="" ref="0x7a619e6541b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7a619e654340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7a619e6544d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7a619e654660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7a619e6547f0"/>
        <function-ref name="rx" scoped="" ref="0x7a619e654980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7a619e654b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7a619e654ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7a619e654e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7a619e653020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7a619e6531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7a619e65c790" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7a619e65c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e65cb30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7a619e65ccc0"/>
        <function-ref name="receive" scoped="" ref="0x7a619e65ce50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7a619e65b020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7a619e65b1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7a619e65b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e65b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7a619e652020" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619e652020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619e652e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619e651800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619e651340"/>
        <function-ref name="overflow" scoped="" ref="0x7a619e651cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7a619e65a5b0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7a619e65a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e65a950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e65aae0"/>
        <function-ref name="request" scoped="" ref="0x7a619e65ac70"/>
        <function-ref name="granted" scoped="" ref="0x7a619e65ae00"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e659020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619e65d0d0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619e65d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e65d470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e65d600"/>
        <function-ref name="request" scoped="" ref="0x7a619e65d790"/>
        <function-ref name="granted" scoped="" ref="0x7a619e65d920"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e65dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7a619e6535b0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7a619e6535b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619e653950"/>
        <function-ref name="txDone" scoped="" ref="0x7a619e653ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619e650120" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619e650120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619e6504a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619e650630"/>
        <function-ref name="led1On" scoped="" ref="0x7a619e6507c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619e650950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619e650ae0"/>
        <function-ref name="get" scoped="" ref="0x7a619e650c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619e650e00"/>
        <function-ref name="led2On" scoped="" ref="0x7a619e64f4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619e64f1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619e64f020"/>
        <function-ref name="led0On" scoped="" ref="0x7a619e64f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7a619e641080" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7a619e641080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619e641400"/>
        <function-ref name="txDone" scoped="" ref="0x7a619e641590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7a619e64ab80" loc="76:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e64ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619e646020"/>
        <function-ref name="stop" scoped="" ref="0x7a619e6461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7a619e6464d0" loc="77:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7a619e6464d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7a619e646850"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7a619e6469e0"/>
        <function-ref name="setUctl" scoped="" ref="0x7a619e646b70"/>
        <function-ref name="enableUart" scoped="" ref="0x7a619e646d00"/>
        <function-ref name="setUrctl" scoped="" ref="0x7a619e645020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7a619e6451b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7a619e645340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7a619e6454d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7a619e645660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7a619e6457f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7a619e645980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7a619e645b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7a619e645ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7a619e644020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7a619e6441b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7a619e644340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7a619e6444d0"/>
        <function-ref name="isUart" scoped="" ref="0x7a619e644660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7a619e6447f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7a619e644980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7a619e644b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7a619e644ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7a619e644e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7a619e643020"/>
        <function-ref name="getMode" scoped="" ref="0x7a619e6431b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7a619e643540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7a619e6436d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7a619e643860"/>
        <function-ref name="tx" scoped="" ref="0x7a619e6439f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7a619e643b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7a619e643d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7a619e642020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7a619e6421b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7a619e642340"/>
        <function-ref name="rx" scoped="" ref="0x7a619e6424d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7a619e642660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7a619e6427f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7a619e642980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7a619e642b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7a619e642ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7a619e6331f0" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7a619e6331f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619e633570"/>
        <function-ref name="isInput" scoped="" ref="0x7a619e633700"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619e633890"/>
        <function-ref name="toggle" scoped="" ref="0x7a619e633a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619e633bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619e633d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619e632020"/>
        <function-ref name="get" scoped="" ref="0x7a619e6321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619e632340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619e6324d0"/>
        <function-ref name="set" scoped="" ref="0x7a619e632660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619e6327f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619e632980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619e632c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619e632da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7a619e639910" loc="76:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7a619e639910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619e639c90"/>
        <function-ref name="txDone" scoped="" ref="0x7a619e639e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7a619e6311f0" loc="81:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7a619e6311f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619e631570"/>
        <function-ref name="isInput" scoped="" ref="0x7a619e631700"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619e631890"/>
        <function-ref name="toggle" scoped="" ref="0x7a619e631a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619e631bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619e631d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619e630020"/>
        <function-ref name="get" scoped="" ref="0x7a619e6301b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619e630340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619e6304d0"/>
        <function-ref name="set" scoped="" ref="0x7a619e630660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619e6307f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619e630980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619e630c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619e630da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7a619e62f1f0" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7a619e62f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619e62f570"/>
        <function-ref name="isInput" scoped="" ref="0x7a619e62f700"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619e62f890"/>
        <function-ref name="toggle" scoped="" ref="0x7a619e62fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619e62fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619e62fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619e62e020"/>
        <function-ref name="get" scoped="" ref="0x7a619e62e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619e62e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619e62e4d0"/>
        <function-ref name="set" scoped="" ref="0x7a619e62e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619e62e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619e62e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619e62ec10"/>
        <function-ref name="clr" scoped="" ref="0x7a619e62eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7a619e63ecc0" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7a619e63ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7a619e63d0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7a619e63d230"/>
        <function-ref name="setUctl" scoped="" ref="0x7a619e63d3c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7a619e63d550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7a619e63d6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7a619e63d870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7a619e63da00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7a619e63db90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7a619e63dd20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7a619e63c020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7a619e63c1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7a619e63c340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7a619e63c4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7a619e63c760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7a619e63c8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7a619e63ca80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7a619e63cc10"/>
        <function-ref name="isUart" scoped="" ref="0x7a619e63cda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7a619e63b020"/>
        <function-ref name="isSpi" scoped="" ref="0x7a619e63b1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7a619e63b340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7a619e63b4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7a619e63b660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7a619e63b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619e63b980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7a619e63bd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7a619e63a020"/>
        <function-ref name="setUbr" scoped="" ref="0x7a619e63a1b0"/>
        <function-ref name="tx" scoped="" ref="0x7a619e63a340"/>
        <function-ref name="getUctl" scoped="" ref="0x7a619e63a4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7a619e63a660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7a619e63a7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7a619e63a980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7a619e63ab10"/>
        <function-ref name="rx" scoped="" ref="0x7a619e63aca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7a619e63ae30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7a619e639020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7a619e6391b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7a619e639340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7a619e6394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7a619e63e410" loc="74:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e63e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619e63e790"/>
        <function-ref name="stop" scoped="" ref="0x7a619e63e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7a619e6351f0" loc="79:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7a619e6351f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619e635570"/>
        <function-ref name="isInput" scoped="" ref="0x7a619e635700"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619e635890"/>
        <function-ref name="toggle" scoped="" ref="0x7a619e635a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619e635bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619e635d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619e634020"/>
        <function-ref name="get" scoped="" ref="0x7a619e6341b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619e634340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619e6344d0"/>
        <function-ref name="set" scoped="" ref="0x7a619e634660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619e6347f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619e634980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619e634c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619e634da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7a619e638210" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7a619e638210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7a619e638590"/>
        <function-ref name="isInput" scoped="" ref="0x7a619e638720"/>
        <function-ref name="setResistor" scoped="" ref="0x7a619e6388b0"/>
        <function-ref name="toggle" scoped="" ref="0x7a619e638a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7a619e638bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7a619e638d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7a619e637020"/>
        <function-ref name="get" scoped="" ref="0x7a619e6371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7a619e637340"/>
        <function-ref name="getRaw" scoped="" ref="0x7a619e6374d0"/>
        <function-ref name="set" scoped="" ref="0x7a619e637660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7a619e6377f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7a619e637980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7a619e637c10"/>
        <function-ref name="clr" scoped="" ref="0x7a619e637da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7a619e5b1110" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7a619e5b1110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619f415080"/>
            <typename><typedef-ref name="T32khz" ref="0x7a619f4153f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7a619e5ae020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7a619e5ae9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7a619e5ae4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7a619e5aee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7a619dd08a90" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7a619dd08a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7a619dd08e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619dd06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7a619dd01be0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619dd01be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619dd00020"/>
        <function-ref name="configure" scoped="" ref="0x7a619dd001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7a619dd01440" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7a619dd01440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619dd017c0"/>
        <function-ref name="txDone" scoped="" ref="0x7a619dd01950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619dd09e00" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619dd09e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619dd081c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619dd08350"/>
        <function-ref name="request" scoped="" ref="0x7a619dd084e0"/>
        <function-ref name="granted" scoped="" ref="0x7a619dd08670"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619dd08800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7a619dd06a50" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7a619dd06a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7a619dd06dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7a619dd05020"/>
        <function-ref name="setUctl" scoped="" ref="0x7a619dd051b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7a619dd05340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7a619dd054d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7a619dd05660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7a619dd057f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7a619dd05980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7a619dd05b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7a619dd05ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7a619dd05e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7a619dd04020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7a619dd041b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7a619dd04440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7a619dd045d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7a619dd04760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7a619dd048f0"/>
        <function-ref name="isUart" scoped="" ref="0x7a619dd04a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7a619dd04c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7a619dd04da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7a619dd03020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7a619dd031b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7a619dd03340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7a619dd034d0"/>
        <function-ref name="getMode" scoped="" ref="0x7a619dd03660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7a619dd039f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7a619dd03b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7a619dd03d10"/>
        <function-ref name="tx" scoped="" ref="0x7a619dd02020"/>
        <function-ref name="getUctl" scoped="" ref="0x7a619dd021b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7a619dd02340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7a619dd024d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7a619dd02660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7a619dd027f0"/>
        <function-ref name="rx" scoped="" ref="0x7a619dd02980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7a619dd02b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7a619dd02ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7a619dd02e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7a619dd01020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7a619dd011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7a619dd062b0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619dd062b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619dd06630"/>
        <function-ref name="userId" scoped="" ref="0x7a619dd067c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7a619e594510" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e594510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7a619e594890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619e594a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7a619e593af0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e593af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619e593e70"/>
        <function-ref name="configure" scoped="" ref="0x7a619e592030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7a619e596510" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7a619e596510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619e596890"/>
        <function-ref name="txDone" scoped="" ref="0x7a619e596a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619e595280" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619e595280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e595600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e595790"/>
        <function-ref name="request" scoped="" ref="0x7a619e595920"/>
        <function-ref name="granted" scoped="" ref="0x7a619e595ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e595c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7a619e594d20" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e594d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619e5930e0"/>
        <function-ref name="userId" scoped="" ref="0x7a619e593270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7a619e57da90" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e57da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619e57de10"/>
        <function-ref name="userId" scoped="" ref="0x7a619e57b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7a619e590b60" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7a619e590b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619e58f020"/>
        <function-ref name="txDone" scoped="" ref="0x7a619e58f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7a619e57d480" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7a619e57d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619e57d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7a619e58f5b0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7a619e58f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7a619e58f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7a619e58fc20" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7a619e58fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7a619e57d020"/>
        <function-ref name="txDone" scoped="" ref="0x7a619e57d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7a619e506020" loc="92:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7a619e506020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7a619e5063c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619e506550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7a619e505cd0" loc="96:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619e505cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619e5040a0"/>
        <function-ref name="configure" scoped="" ref="0x7a619e504230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7a619e5067a0" loc="93:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619e5067a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e506b20"/>
        <function-ref name="requested" scoped="" ref="0x7a619e506cb0"/>
        <function-ref name="granted" scoped="" ref="0x7a619e506e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e505020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619e5051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619e507210" loc="91:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619e507210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e5075b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e507740"/>
        <function-ref name="request" scoped="" ref="0x7a619e5078d0"/>
        <function-ref name="granted" scoped="" ref="0x7a619e507a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e507bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7a619e505400" loc="94:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e505400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619e505780"/>
        <function-ref name="userId" scoped="" ref="0x7a619e505910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619dc9dca0" loc="44:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619dc9dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619dc9c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7a619dc9c330" loc="45:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7a619dc9c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7a619dc9c6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7a619dc9c840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7a619dc9c9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7a619dc9cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7a619dc993a0" loc="55:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7a619dc993a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7a619dc99740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619dc998d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7a619dc97210" loc="60:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7a619dc97210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7a619dc975b0"/>
        <function-ref name="configure" scoped="" ref="0x7a619dc97740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7a619dc979d0" loc="61:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7a619dc979d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7a619dc97d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7a619dc96020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7a619dc961b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7a619dc96340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7a619dc99b20" loc="56:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619dc99b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619dc98020"/>
        <function-ref name="requested" scoped="" ref="0x7a619dc981b0"/>
        <function-ref name="granted" scoped="" ref="0x7a619dc98340"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619dc984d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619dc98660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619dc96590" loc="62:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619dc96590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619dc96910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619dc96aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7a619dc96c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619dc96dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619dc94020"/>
        <function-ref name="get" scoped="" ref="0x7a619dc941b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619dc94340"/>
        <function-ref name="led0On" scoped="" ref="0x7a619dc94980"/>
        <function-ref name="set" scoped="" ref="0x7a619dc94660"/>
        <function-ref name="led2On" scoped="" ref="0x7a619dc944d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619dc947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7a619dc9a540" loc="54:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619dc9a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619dc9a8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619dc9aa70"/>
        <function-ref name="request" scoped="" ref="0x7a619dc9ac00"/>
        <function-ref name="granted" scoped="" ref="0x7a619dc9ad90"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619dc99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7a619dc988b0" loc="57:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619dc988b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619dc98c30"/>
        <function-ref name="userId" scoped="" ref="0x7a619dc98dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7a619dc94c50" loc="75:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7a619dc94c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619dc93020"/>
        <function-ref name="runTask" scoped="" ref="0x7a619dc931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7a619e4ea400" loc="72:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7a619e4ea400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7a619e4ea780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7a619e4ea9d0" loc="73:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619e4ea9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e4ead50"/>
        <function-ref name="requested" scoped="" ref="0x7a619e4e9020"/>
        <function-ref name="granted" scoped="" ref="0x7a619e4e91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e4e9340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619e4e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7a619e500b20" loc="70:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619e500b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619e4ea020"/>
        <function-ref name="stop" scoped="" ref="0x7a619e4ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7a619e4e9720" loc="74:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619e4e9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619e4e9aa0"/>
        <function-ref name="userId" scoped="" ref="0x7a619e4e9c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7a619dc64b00" loc="62:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7a619dc64b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7a619dc64e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7a619dc630f0" loc="63:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7a619dc630f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619dc63470"/>
        <function-ref name="requested" scoped="" ref="0x7a619dc63600"/>
        <function-ref name="granted" scoped="" ref="0x7a619dc63790"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619dc63920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7a619dc63ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7a619dc643a0" loc="60:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7a619dc643a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619dc64720"/>
        <function-ref name="stop" scoped="" ref="0x7a619dc648b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7a619dc63d00" loc="64:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7a619dc63d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7a619dc620a0"/>
        <function-ref name="userId" scoped="" ref="0x7a619dc62230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7a619e4ca920" loc="3:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7a619e4ca920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7a619e4caca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7a619e4c9020" loc="4:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7a619e4c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7a619e4c93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7a619e4c9530"/>
        <function-ref name="request" scoped="" ref="0x7a619e4c96c0"/>
        <function-ref name="granted" scoped="" ref="0x7a619e4c9850"/>
        <function-ref name="isOwner" scoped="" ref="0x7a619e4c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7a619e4ca0c0" loc="2:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7a619e4ca0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7a619e4ca440"/>
        <function-ref name="stop" scoped="" ref="0x7a619e4ca5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7a619e4b78d0" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7a619e4b78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7a619e4b7c50"/>
        <function-ref name="offset" scoped="" ref="0x7a619e4b7de0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7a619e4b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7a619e498720" loc="43:/home/tofu/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7a619e498720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7a619e4745f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7a619e4733a0"/>
        <function-ref name="element" scoped="" ref="0x7a619e473a10"/>
        <function-ref name="full" scoped="" ref="0x7a619e475810"/>
        <function-ref name="maxSize" scoped="" ref="0x7a619e474170"/>
        <function-ref name="dequeue" scoped="" ref="0x7a619e474ca0"/>
        <function-ref name="empty" scoped="" ref="0x7a619e475390"/>
        <function-ref name="size" scoped="" ref="0x7a619e475c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7a619e46d5a0" loc="93:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7a619e46d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7a619e46a4a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7a619e468260"/>
        <function-ref name="element" scoped="" ref="0x7a619e4688d0"/>
        <function-ref name="full" scoped="" ref="0x7a619e46c680"/>
        <function-ref name="maxSize" scoped="" ref="0x7a619e46a020"/>
        <function-ref name="dequeue" scoped="" ref="0x7a619e46ab50"/>
        <function-ref name="empty" scoped="" ref="0x7a619e46c200"/>
        <function-ref name="size" scoped="" ref="0x7a619e46cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7a619e467020" loc="94:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7a619e467020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7a619e4673a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e467530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e4676c0"/>
        <function-ref name="cancel" scoped="" ref="0x7a619e467850"/>
        <function-ref name="sendDone" scoped="" ref="0x7a619e4679e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7a619e467c70" loc="95:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7a619e467c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7a619e466020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7a619e4661b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7a619e466340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7a619e4664d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7a619e466660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7a619e460020" loc="114:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7a619e460020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7a619e4603a0"/>
        <function-ref name="runTask" scoped="" ref="0x7a619e460530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619e46e470" loc="89:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619e46e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619e46e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7a619e4668e0" loc="96:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7a619e4668e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7a619e466c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7a619e466df0"/>
        <function-ref name="led1On" scoped="" ref="0x7a619e465020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7a619e4651b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7a619e465340"/>
        <function-ref name="get" scoped="" ref="0x7a619e4654d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7a619e465660"/>
        <function-ref name="led2Off" scoped="" ref="0x7a619e465ca0"/>
        <function-ref name="set" scoped="" ref="0x7a619e4657f0"/>
        <function-ref name="led0On" scoped="" ref="0x7a619e465980"/>
        <function-ref name="led2On" scoped="" ref="0x7a619e465b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7a619e46bc90" loc="90:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7a619e46bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7a619e46d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7a619e44a7e0" loc="43:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7a619e44a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7a619e44ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7a619e447b20" loc="94:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7a619e447b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7a619e444020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7a619e444300" loc="95:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7a619e444300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7a619e444680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7a619e43a0f0" loc="39:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7a619e43a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7a619e43a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7a619e43a810" loc="40:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7a619e43a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7a619e43ab90"/>
        <function-ref name="stopDone" scoped="" ref="0x7a619e43ad20"/>
        <function-ref name="start" scoped="" ref="0x7a619e439020"/>
        <function-ref name="stop" scoped="" ref="0x7a619e4391b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7a619f4128e0" loc="60:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7a619f3f6a90" loc="49:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619f3f6a90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7a619f3f3390" loc="55:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7a619f3f2120" loc="63:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619f3f6a90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7a619f3f3b10" loc="63:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7a619f3f3e30" loc="63:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619f3f6a90"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7a619f40a020" loc="61:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7a619f40a7d0" loc="67:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7a619f409020" loc="72:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7a619f408020" loc="83:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7a619f4067d0" loc="100:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7a619f405020" loc="117:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7a619f4097b0" loc="77:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7a619f405b90" loc="134:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7a619f405910" loc="134:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7a619f40b850" loc="56:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7a619f408800" loc="89:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7a619f406020" loc="94:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7a619f402020" loc="53:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7a619f402020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7a619f3fcc50" loc="136:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7a619f3ff5b0" loc="83:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7a619f3fd360" loc="114:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7a619f3fed60" loc="114:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7a619f3fd0d0" loc="114:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7a619f3fe5b0" loc="98:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7a619f3faca0" loc="151:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7a619f3fa420" loc="144:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7a619f3ffd90" loc="92:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7a619f402b90" loc="64:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7a619f402910" loc="64:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7a619f3fc2f0" loc="129:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7a619f3fdd00" loc="129:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7a619f3fc060" loc="129:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7a619f401680" loc="73:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7a619f401400" loc="73:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7a619f401e80" loc="78:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/tofu/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7a619f3e58d0" loc="62:/home/tofu/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7a619f3b65b0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7a619f3b9870" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7a619f3b7e60" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7a619f3b9190" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7a619f3b7020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7a619f3ba350" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7a619f3baa30" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7a619f3b7740" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7a619f588020" loc="62:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7a619f84ddd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7a619f3645a0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7a619f364320" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7a619f3729d0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7a619f3ae180"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7a619f3aebd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7a619f364e10" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7a619f363d20" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7a619f366b90" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7a619f363590" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7a619f3671f0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7a619f367980" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7a619f366420" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7a619f3ae180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7a619f3aebd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7a619f3661a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7a619f3ae180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7a619f3aebd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7a619f356560" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7a619f353ca0" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7a619f353a20" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7a619f3529d0" loc="91:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7a619f352750" loc="91:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7a619f353270" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7a619f355940" loc="68:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7a619f355020" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7a619f356c90" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7a619f360890" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7a619f35d2a0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7a619f35d020" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7a619f35dc80" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7a619f35da00" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7a619f35b6a0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7a619f35b420" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7a619f35bd90" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7a619f36d020" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7a619f36ca10" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7a619f36c790" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7a619f36d750" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7a619f371020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7a619f36c020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7a619f36f020" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7a619f36e7b0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7a619f3717b0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7a619f36f730" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7a619f36e0b0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7a619f36fdc0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7a619f36a450" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7a619f36a1d0" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7a619f32c1f0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7a619f4aba80" loc="85:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7a619f4aa1f0" loc="86:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7a619f4ab2b0" loc="79:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7a619f6c4830" loc="52:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7a619f906020" loc="57:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7a619f905020" loc="72:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7a619f906790" loc="65:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7a619f8fa350" loc="67:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7a619f8faba0" loc="75:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7a619f204e30" loc="44:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7a619f2035c0" loc="45:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7a619f204020" loc="42:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7a619f201480" loc="47:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7a619f204720" loc="43:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7a619f203ce0" loc="46:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7a619f205120" loc="40:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7a619f2057f0" loc="41:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7a619f1d8020" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7a619f1d8770" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7a619f1d32e0" loc="110:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7a619f1d3060" loc="110:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7a619f1da770" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7a619f1d6780" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7a619f1d3bd0" loc="117:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7a619f1d6020" loc="85:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7a619f1d9820" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7a619f1d4020" loc="99:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7a619f1d9020" loc="66:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7a619f1dd8c0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7a619f1d5020" loc="92:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7a619f1d47c0" loc="101:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7a619f1d57e0" loc="94:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7a619f1da020" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7a619ef89c50" loc="53:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7a619ef89c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7a619ef865a0" loc="61:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7a619ef805d0" loc="56:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7a619ef805d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7a619ef80810" loc="56:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7a619ef7a390" loc="109:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7a619ef7d3b0" loc="78:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7a619ef7c9d0" loc="103:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7a619ef7c400" loc="103:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7a619ef7c740" loc="103:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7a619ef7db90" loc="88:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7a619ef7ab80" loc="116:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7a619ef7e390" loc="66:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7a619ef7e110" loc="66:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef80810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7a619ef7ebc0" loc="73:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7a619ef13e20" loc="57:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7a619ef13e20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7a619ef0e0d0" loc="57:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef0e0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7a619ef0e9f0" loc="64:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7a619ef0e0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7a619ef0db10" loc="76:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7a619ef0d2b0" loc="71:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7a619ef0b2b0" loc="82:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7a619ede84a0" loc="57:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619ede84a0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7a619ede4810" loc="89:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619ede84a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7a619ede6e50" loc="89:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7a619ede4210" loc="90:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619ede84a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7a619ede4570" loc="90:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7a619ede73e0" loc="68:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619ede84a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7a619ede8da0" loc="68:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619ede84a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7a619ede7150" loc="68:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7a619ede6630" loc="78:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7a619ede63b0" loc="78:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7a619ede2df0" loc="102:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7a619ede27b0" loc="102:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7a619ede2b60" loc="102:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7a619fe41920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/tofu/tinyos-main/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7a619edec6b0" loc="41:/home/tofu/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7a619edc24c0" loc="45:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7a619edc24c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7a619edbf020" loc="58:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7a619edc24c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7a619edb07f0" loc="120:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7a619edb27d0" loc="97:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7a619edb8e20" loc="88:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7a619edb0020" loc="102:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7a619edaf270" loc="128:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7a619edba930" loc="52:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619edba930"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7a619edb7270" loc="58:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7a619edb5020" loc="66:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619edba930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7a619edb7a30" loc="66:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7a619edb7d50" loc="66:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7a619edba930"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7a619ed9e4b0" loc="189:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7a619eda7450" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7a619eda71d0" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7a619eda6940" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7a619eda6340" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7a619eda66b0" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7a619ed9f4c0" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7a619eda1260" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7a619eda1b00" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7a619eda1e80" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7a619ed9f210" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7a619ed9cdd0" loc="227:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7a619ed9c730" loc="227:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7a619ed9cac0" loc="227:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7a619eda3d30" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7a619eda4a30" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7a619eda3380" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7a619eda3710" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7a619eda3a80" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7a619ed9d120" loc="206:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7a619ed9ee70" loc="206:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7a619ed4ce20" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7a619ed4c160" loc="86:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619edd9850"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7a619edd9d20"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7a619ed4faf0" loc="86:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7a619eddbc10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7a619eddb330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7a619ed4e020" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619edd9850"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7a619edd9d20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7a619ed4e390" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7a619ed4e730" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7a619ed4eae0" loc="88:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7a619ed4ee50" loc="88:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7a619ed4bdc0" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7a619ed4b7a0" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7a619ed4bb30" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7a619ed49780" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7a619ed48020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7a619ed3fdb0" loc="95:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7a619ed3c6a0" loc="105:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7a619ed2d560" loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619edc8470"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7a619edc7020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7a619ed2b6c0" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619edd9850"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7a619edd9d20"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7a619ed2b440" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7a619ed28d90" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7a619ed25020" loc="118:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7a619ed277d0" loc="112:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7a619ed27550" loc="112:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7a619ed2dd80" loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619edc66d0"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7a619edc4020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7a619ed2cb70" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619edd9850"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7a619edd9d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7a619ed2c520" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7a619ed2c8e0" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619edd9850"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7a619edd9d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7a619ed240e0" loc="128:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7a619ed2e2a0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619edc8470"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7a619edc7020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7a619ed2e020" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619edc8470"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7a619edc7020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7a619ed292a0" loc="89:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7a619ed29020" loc="89:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7a619ed29d20" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7a619ed29aa0" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7a619ed285d0" loc="101:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7a619ed257e0" loc="123:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7a619ed24880" loc="133:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7a619ed2ed00" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619edc66d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7a619edc4020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7a619ed2ea80" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7a619edc66d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7a619edc4020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7a619ed34db0" loc="90:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7a619ed316b0" loc="98:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7a619ec18b30" loc="53:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7a619ec154e0" loc="61:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7a619ec11550" loc="65:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7a619ec14d00" loc="59:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7a619ec07580" loc="79:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7a619ec125e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7a619ec07300" loc="79:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7a619ec125e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7a619ec0a5a0" loc="53:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7a619ec08110" loc="62:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7a619ec125e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7a619ec0ae20" loc="62:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7a619ec125e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7a619ec08a20" loc="70:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7a619ec125e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7a619eb94ab0" loc="113:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7a619eb94830" loc="113:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7a619eb8c020" loc="138:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7a619eb8dd30" loc="138:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7a619eb97df0" loc="104:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7a619eb8d350" loc="130:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7a619e9d46a0" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7a619e9d8cd0" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7a619e9d40d0" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e9d4400" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7a619e9ce020" loc="135:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9cf890" loc="135:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e9cfbc0" loc="135:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7a619e9cf020" loc="123:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7a619e9d2a70" loc="96:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9d27f0" loc="96:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7a619e9d0020" loc="110:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9d19e0" loc="110:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7a619e9d1d30" loc="110:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7a619e9ca8d0" loc="65:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9ca650" loc="65:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7a619e9c8990" loc="78:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9c8710" loc="78:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7a619e9c5d30" loc="126:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9c5730" loc="126:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e9c5a60" loc="126:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7a619e9c6da0" loc="106:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7a619e9c7e30" loc="94:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9c7870" loc="94:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e9c7ba0" loc="94:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7a619e9b6840" loc="177:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7a619f42d930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9b65c0" loc="177:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7a619e9bf400" loc="88:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9bf180" loc="88:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7a619e9c1840" loc="68:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7a619e9c0350" loc="78:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9c00d0" loc="78:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7a619e9bbd00" loc="121:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9bb720" loc="121:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7a619e9bba70" loc="121:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7a619e9be800" loc="103:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9be220" loc="103:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7a619e9be570" loc="103:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7a619f42dd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7a619e9b82e0" loc="147:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9b8060" loc="147:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7a619e9b7680" loc="162:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9b70d0" loc="162:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7a619e9b73f0" loc="162:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7a619f42d550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7a619e9b90b0" loc="136:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9bce00" loc="136:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7a619e9b3d00" loc="187:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7a619f42d930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7a619e9b3720" loc="187:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7a619e9b3a70" loc="187:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7a619f42d930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7a619e9b2b50" loc="195:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7a619f42d930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7a619e9af5f0" loc="59:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9af370" loc="59:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7a619e9ae7d0" loc="71:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9ae550" loc="71:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7a619e9ac940" loc="85:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9ac6c0" loc="85:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7a619e9a5020" loc="75:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9a8930" loc="75:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e9a8c60" loc="75:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7a619e9a1660" loc="125:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9a1060" loc="125:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e9a1390" loc="125:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7a619e9a0790" loc="112:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7a619e9a4350" loc="89:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9a40d0" loc="89:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7a619e9a2870" loc="100:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e9a2290" loc="100:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7a619e9a25e0" loc="100:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7a619e932300" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
              <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e935870" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7a619e935bc0" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e932020" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7a619e8c4630" loc="31:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e8c4020" loc="31:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7a619e8c43a0" loc="31:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7a619e8c7670" loc="15:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7a619e8c6620" loc="23:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7a619e8c6020" loc="23:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7a619f41d720"/>
                <typename><typedef-ref name="message_t" ref="0x7a619f41cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7a619e8c6390" loc="23:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7a619e8a60e0" loc="95:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7a619e8a68f0" loc="105:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7a619e8a4790" loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7a619e8a4020" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7a619e8ae120" loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7a619e8ad560" loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7a619e8ab2a0" loc="94:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7a619e8ab020" loc="94:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7a619e8adde0" loc="79:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7a619e8aec90" loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7a619e8aea10" loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7a619e8abb00" loc="100:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7a619e8ac6e0" loc="85:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7a619e8b8990" loc="71:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7a619e8b6350" loc="81:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7a619e8b8020" loc="62:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7a619e8bbc30" loc="62:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7a619e8b5020" loc="91:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7a619e8b6c50" loc="91:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7a619e8bac60" loc="62:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7a619e8b3a60" loc="69:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7a619e8b37e0" loc="69:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7a619e8b25c0" loc="80:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7a619e8b2340" loc="80:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7a619e77cc40" loc="48:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7a619e77c670" loc="48:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e77c9b0" loc="48:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7a619e776a70" loc="79:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7a619e7767f0" loc="79:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7a619e775890" loc="90:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7a619e7752c0" loc="90:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e775600" loc="90:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7a619e778610" loc="65:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7a619e7742c0" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7a619e773820" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e773b60" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7a619e774020" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7a619e776020" loc="72:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7a619e77a610" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7a619e779bd0" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7a619e77a020" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7a619e77a370" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7a619e7535b0" loc="50:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7a619e753330" loc="50:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7a619e753df0" loc="59:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7a619e752cf0" loc="69:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7a619e752700" loc="69:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7a619e752a60" loc="69:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7a619e750b50" loc="79:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7a619e6f9230" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7a619e71c450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7a619e71c870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7a619e6ecd70" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7a619e6ecaf0" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7a619e6ec350" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7a619e6bdaf0" loc="213:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7a619e6c8790" loc="143:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7a619e6d52a0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e74b3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7a619e74bbf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7a619e6d5020" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e74b3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7a619e74bbf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7a619e6cb7b0" loc="123:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7a619e6d2780" loc="70:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e746360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7a619e746ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7a619e6d2500" loc="70:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e746360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7a619e746ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7a619e6c2e70" loc="180:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7a619e6be480" loc="197:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7a619e6d4d20" loc="65:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e749290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7a619e749a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7a619e6d1020" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e746360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7a619e746ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7a619e6cfd50" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7a619e6cfad0" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7a619e6cf3b0" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7a619e6c2740" loc="179:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7a619e6d4530" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e749290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7a619e749a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7a619e6d42b0" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e749290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7a619e749a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7a619e6d01f0" loc="85:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7a619e6c15d0" loc="181:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7a619e6d0bd0" loc="90:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7a619e6d0950" loc="90:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7a619e6cc730" loc="113:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7a619e6cb020" loc="118:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7a619e6c3840" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7a619e6c6790" loc="163:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7a619e6ca7e0" loc="133:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7a619e6c2020" loc="178:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7a619e6c7020" loc="148:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7a619e6c1cf0" loc="182:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7a619e6cd570" loc="103:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7a619e754330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7a619e74da50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7a619e6bf4c0" loc="187:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7a619e6bd350" loc="207:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7a619e6d19c0" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7a619e6d1740" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7a619fe41520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7a619e6bc4d0" loc="224:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7a619e6bc250" loc="224:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7a619e6d5a80" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7a619e74b3b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7a619e74bbf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7a619e6ca020" loc="128:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7a619e6c7770" loc="153:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7a619e6c3020" loc="174:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7a619e71c450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7a619e71c870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7a619e6c5cf0" loc="174:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7a619e71c450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7a619e71c870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7a619e6c52a0" loc="168:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7a619e72f420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7a619e72f840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7a619e6c5020" loc="168:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7a619e72f420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7a619e72f840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7a619e6bcd90" loc="231:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7a619e6bfcb0" loc="192:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7a619e6cdd80" loc="108:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7a619e6bebe0" loc="202:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7a619e6c6020" loc="158:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7a619e6c8020" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7a619e58dd50" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7a619e572e00" loc="56:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7a619e56f020" loc="73:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7a619e572570" loc="46:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7a619e5706d0" loc="65:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7a619e56f950" loc="81:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7a619e4fc770" loc="62:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7a619e4951e0" loc="43:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7a619e4951e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7a619e4939e0" loc="80:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7a619e4951e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7a619e4924a0" loc="97:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7a619f901cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7a619e4951e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7a619e492220" loc="97:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7a619e4951e0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7a619fe47c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7a619fe47c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7a619e48f440" loc="108:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7a619e4951e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7a619e48f1c0" loc="108:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7a619e494270" loc="57:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7a619e493270" loc="72:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7a619e491610" loc="88:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7a619e4951e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7a619e495a90" loc="50:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7a619f90a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7a619e4949f0" loc="65:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7a619fe41160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7a619e46b940" loc="49:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7a619e46b6c0" loc="49:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
