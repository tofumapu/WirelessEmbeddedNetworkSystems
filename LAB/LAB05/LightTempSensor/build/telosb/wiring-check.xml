<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="22:LightTempSensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7365123b96c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x736512595e30"/></to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x736512595e30"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7365123c7590"/></to>
    </wire>
    <wire loc="23:LightTempSensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7365123ac9a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7365123bcdd0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7365123bcdd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x736512384710"/></to>
    </wire>
    <wire loc="24:LightTempSensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7365123a2da0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x736511f71370"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736511f71370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:LightTempSensorAppC.nc">
      <from><interface-ref name="LRead" scoped="" ref="0x736512399310"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x736511f69750"/></to>
    </wire>
    <wire loc="47:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x736511f69750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x736510dd19a0"/></to>
    </wire>
    <wire loc="27:LightTempSensorAppC.nc">
      <from><interface-ref name="TRead" scoped="" ref="0x73651239cc70"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x736511870310"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x736511870310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x736510cca8f0"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736511347b20"/></to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736510ab2ca0"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651175abc0"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651136f470"/></to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736510c303b0"/></to>
    </wire>
    <wire loc="37:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736511c24150"/></to>
    </wire>
    <wire loc="96:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736510d8b060"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736511eb4680"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651210a400"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7365123c7c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x736512a843a0"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x736512a843a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x73651262f140"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7365123c66c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736512593300"/></to>
    </wire>
    <wire loc="48:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x736512593300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651258c510"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7365123c6dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x73651258cc20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x73651258d910"/></to>
    </wire>
    <wire loc="46:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x73651258d910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651256d850"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x73651258b380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651258e6d0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x73651258ba60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651235b020"/></to>
    </wire>
    <wire loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x73651256d850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736512554c00"/></to>
    </wire>
    <wire loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x736512564de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x736512553350"/></to>
    </wire>
    <wire loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7365127074c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x736512552680"/></to>
    </wire>
    <wire loc="113:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x73651250f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x73651244c6d0"/></to>
    </wire>
    <wire loc="126:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7365124fd020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x736512445b30"/></to>
    </wire>
    <wire loc="108:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x736512506700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x736512452160"/></to>
    </wire>
    <wire loc="149:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7365124eaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x73651242bcb0"/></to>
    </wire>
    <wire loc="107:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x73651250daa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x736512453480"/></to>
    </wire>
    <wire loc="148:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7365124f0020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x73651242b020"/></to>
    </wire>
    <wire loc="170:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7365124e7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x736512414cb0"/></to>
    </wire>
    <wire loc="154:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7365124f75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x736512425220"/></to>
    </wire>
    <wire loc="99:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x736512510b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7365124a29d0"/></to>
    </wire>
    <wire loc="135:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7365124eca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x73651243a2f0"/></to>
    </wire>
    <wire loc="134:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7365124f23e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x73651243b610"/></to>
    </wire>
    <wire loc="133:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7365124fc5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x73651243c220"/></to>
    </wire>
    <wire loc="115:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x736512505700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x73651244a7a0"/></to>
    </wire>
    <wire loc="156:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7365124e9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7365124232f0"/></to>
    </wire>
    <wire loc="140:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7365124fbbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7365124356d0"/></to>
    </wire>
    <wire loc="114:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x73651250c890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x73651244bac0"/></to>
    </wire>
    <wire loc="93:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x736512520060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124b0540"/></to>
    </wire>
    <wire loc="155:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7365124f0da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x736512424610"/></to>
    </wire>
    <wire loc="106:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7365125160c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x736512454020"/></to>
    </wire>
    <wire loc="161:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7365124f6a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x73651241d6d0"/></to>
    </wire>
    <wire loc="101:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7365125006d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x73651245aa90"/></to>
    </wire>
    <wire loc="142:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7365124eba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7365124337a0"/></to>
    </wire>
    <wire loc="100:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x736512508cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x73651245bde0"/></to>
    </wire>
    <wire loc="141:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7365124f11f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x736512434ac0"/></to>
    </wire>
    <wire loc="163:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7365124e8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x73651241b7a0"/></to>
    </wire>
    <wire loc="147:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7365124f80c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x73651242db30"/></to>
    </wire>
    <wire loc="120:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="162:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7365124efb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x73651241cac0"/></to>
    </wire>
    <wire loc="128:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7365124eda20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x736512443cb0"/></to>
    </wire>
    <wire loc="169:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7365124eea20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x736512414020"/></to>
    </wire>
    <wire loc="127:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7365124f3570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x736512443020"/></to>
    </wire>
    <wire loc="168:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7365124f4020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x736512416b30"/></to>
    </wire>
    <wire loc="94:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7365124ae450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124afd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7365124aeaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x73651240faa0"/></to>
    </wire>
    <wire loc="96:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7365124ad120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x73651240b260"/></to>
    </wire>
    <wire loc="102:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512459930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124b0540"/></to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x736512457020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124afd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512451020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124b0540"/></to>
    </wire>
    <wire loc="110:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x73651244f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124afd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512449610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124b0540"/></to>
    </wire>
    <wire loc="117:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x736512448c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124afd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7365124a62f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7365124a6940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x73651240b9f0"/></to>
    </wire>
    <wire loc="123:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7365124a5020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x73651240a240"/></to>
    </wire>
    <wire loc="129:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512442b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="130:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7365124402f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512439160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="137:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7365124387a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512432610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="144:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x736512431c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x73651242ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="151:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7365124282f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512422160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="158:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7365124217a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x73651241a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="165:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x736512419c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736512413b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></to>
    </wire>
    <wire loc="172:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7365124112f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x73651262d040"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x736512629490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x736512a1b3b0"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x73651235b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736512384110"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x73651237cce0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x736512385970"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x736512385970"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x736512144020"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x736512380020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x73651235eb60"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x73651235eb60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x736512130b90"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x73651237b340"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x73651235de70"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x73651235de70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x73651212b710"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7365121332f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x736512304200"/></to>
    </wire>
    <wire loc="486:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x736512304200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121e1740"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x73651212fde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x736512302200"/></to>
    </wire>
    <wire loc="487:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x736512302200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121dc100"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x73651212a930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x736512300200"/></to>
    </wire>
    <wire loc="488:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x736512300200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121d8d10"/></to>
    </wire>
    <wire loc="442:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x736512346020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651227a100"/></to>
    </wire>
    <wire loc="455:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x736512331020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651224bd10"/></to>
    </wire>
    <wire loc="531:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7365122e8560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651223cd10"/></to>
    </wire>
    <wire loc="551:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7365122c3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121b1100"/></to>
    </wire>
    <wire loc="532:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7365122e6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512237740"/></to>
    </wire>
    <wire loc="460:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x73651232d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512240100"/></to>
    </wire>
    <wire loc="473:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x736512319200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512211e00"/></to>
    </wire>
    <wire loc="497:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7365122f4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121bbd10"/></to>
    </wire>
    <wire loc="535:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7365122e0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651222ed10"/></to>
    </wire>
    <wire loc="545:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7365122cf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121cd100"/></to>
    </wire>
    <wire loc="557:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7365122bb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121acd10"/></to>
    </wire>
    <wire loc="445:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x736512340020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651226c100"/></to>
    </wire>
    <wire loc="536:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7365122dd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512229740"/></to>
    </wire>
    <wire loc="450:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x73651233b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512262740"/></to>
    </wire>
    <wire loc="463:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x736512327020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512232100"/></to>
    </wire>
    <wire loc="476:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x736512313200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512203d10"/></to>
    </wire>
    <wire loc="489:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7365122fe200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121d2740"/></to>
    </wire>
    <wire loc="500:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7365122ee200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121acd10"/></to>
    </wire>
    <wire loc="440:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x73651234a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512284d10"/></to>
    </wire>
    <wire loc="453:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x736512335020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512254860"/></to>
    </wire>
    <wire loc="466:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x736512321020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512224100"/></to>
    </wire>
    <wire loc="530:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7365122ea580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651223cd10"/></to>
    </wire>
    <wire loc="548:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7365122c9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121bf100"/></to>
    </wire>
    <wire loc="555:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7365122bd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121acd10"/></to>
    </wire>
    <wire loc="541:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7365122d5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121e6d10"/></to>
    </wire>
    <wire loc="471:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x73651231d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651221aa60"/></to>
    </wire>
    <wire loc="484:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x736512308200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121ea100"/></to>
    </wire>
    <wire loc="495:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7365122f8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121c4740"/></to>
    </wire>
    <wire loc="549:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7365122c7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121bbd10"/></to>
    </wire>
    <wire loc="538:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7365122db570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121f4d10"/></to>
    </wire>
    <wire loc="443:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x736512344020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512276d10"/></to>
    </wire>
    <wire loc="456:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x73651232f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512246740"/></to>
    </wire>
    <wire loc="493:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7365122fc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121cd100"/></to>
    </wire>
    <wire loc="461:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x73651232b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651223cd10"/></to>
    </wire>
    <wire loc="474:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x736512317200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651220c740"/></to>
    </wire>
    <wire loc="498:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7365122f2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121b6740"/></to>
    </wire>
    <wire loc="540:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7365122d7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121ea100"/></to>
    </wire>
    <wire loc="438:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7365123570a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651228e6d0"/></to>
    </wire>
    <wire loc="451:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x736512339020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651225d100"/></to>
    </wire>
    <wire loc="464:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x736512325020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651222ed10"/></to>
    </wire>
    <wire loc="477:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x736512311200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121fe740"/></to>
    </wire>
    <wire loc="542:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7365122d3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512224100"/></to>
    </wire>
    <wire loc="546:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7365122cd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121c9d10"/></to>
    </wire>
    <wire loc="552:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7365122c1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121acd10"/></to>
    </wire>
    <wire loc="482:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x73651230c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121f4d10"/></to>
    </wire>
    <wire loc="543:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7365122d1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512220d10"/></to>
    </wire>
    <wire loc="441:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x736512348020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651227f740"/></to>
    </wire>
    <wire loc="454:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x736512333020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x73651224f270"/></to>
    </wire>
    <wire loc="467:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x73651231f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512220d10"/></to>
    </wire>
    <wire loc="539:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7365122d9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121ef740"/></to>
    </wire>
    <wire loc="550:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7365122c5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121b6740"/></to>
    </wire>
    <wire loc="472:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x73651231b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512215460"/></to>
    </wire>
    <wire loc="485:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x736512306200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121e6d10"/></to>
    </wire>
    <wire loc="496:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7365122f6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121bf100"/></to>
    </wire>
    <wire loc="444:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x736512342020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512271740"/></to>
    </wire>
    <wire loc="494:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7365122fa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121c9d10"/></to>
    </wire>
    <wire loc="449:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x73651233d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512267d10"/></to>
    </wire>
    <wire loc="462:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x736512329020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512237740"/></to>
    </wire>
    <wire loc="475:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x736512315200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512207100"/></to>
    </wire>
    <wire loc="499:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7365122f0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121b1100"/></to>
    </wire>
    <wire loc="439:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x73651234c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512288100"/></to>
    </wire>
    <wire loc="452:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x736512337020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512259d10"/></to>
    </wire>
    <wire loc="465:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x736512323020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512229740"/></to>
    </wire>
    <wire loc="478:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x73651230e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121f8100"/></to>
    </wire>
    <wire loc="534:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7365122e2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512232100"/></to>
    </wire>
    <wire loc="547:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7365122cb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121c4740"/></to>
    </wire>
    <wire loc="533:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7365122e4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512232100"/></to>
    </wire>
    <wire loc="483:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x73651230a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121ef740"/></to>
    </wire>
    <wire loc="554:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7365122bf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121b1100"/></to>
    </wire>
    <wire loc="558:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7365122b9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7365121d2740"/></to>
    </wire>
    <wire loc="529:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7365122ec1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x736512240100"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7365121091d0"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7365121091d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x736511f92150"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x73651210a400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x73651200d020"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x736512100a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x736511f83790"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x73651200d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736510e6f490"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x736511f8c640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x736511fe12f0"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x736511fdc850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x73651200d870"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x73651200d870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x736510e68140"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x736511f79a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x736512086900"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x736512086900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x736512069cf0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x736510e6f490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736510e53e60"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x736510e62b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x736510e6fce0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x736510e6fce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x736510e52720"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x736510e64690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x736512086900"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x736510e4e910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x736510e59c50"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x736510e59c50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510e4c020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510e562b0"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510e562b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x736510e4b440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x736510e555d0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x736510e555d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7365124fd020"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7365124f3570"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7365124fbbe0"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7365124f11f0"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7365124f80c0"/></to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7365124f0020"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7365124f75a0"/></to>
    </wire>
    <wire loc="76:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7365124f0da0"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></to>
    </wire>
    <wire loc="79:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7365124f6a50"/></to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7365124efb80"/></to>
    </wire>
    <wire loc="82:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></to>
    </wire>
    <wire loc="83:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7365124f4020"/></to>
    </wire>
    <wire loc="84:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7365124eea20"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x73651204b0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x736512084990"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x736512084990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x73651207db80"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x73651206fc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x736511fd89c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x736511f87a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x736510dd19a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x736511f37b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x736511b5d020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x736510dcc570"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x736510dcc570"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x736511c301d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x736511f69020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x736511b688b0"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x736510dcf200"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736511b65300"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x736510dc9260"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736511b65300"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x736511f278e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736510dcf200"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x736511f15b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736510dc3590"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736510dc3590"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x736511ebd1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x736511f29020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x736510dc48a0"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736510dc48a0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x736511d1bd30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x736510dc17e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736510dcf200"/></to>
    </wire>
    <wire loc="136:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x736511ef85c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x736510dc2590"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x736511ebc960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x736510dc2e80"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x736511ebb920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x736511d171d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511ecacd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x736510d9f2a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736510dc17e0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x736511d16740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x736510da1020"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x736511ebc960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x736511eb2af0"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x736511eb91d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x736511eaf910"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x736511ebb920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x736511eb1ab0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x736511ebd1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x736511eb33f0"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511ecacd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511d34520"/></to>
    </wire>
    <wire loc="98:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511d34520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736510d886c0"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x736511eabb30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x736511d33b20"/></to>
    </wire>
    <wire loc="100:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x736511d33b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x736510d87cb0"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x736511e9fb80"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x736511dcc0c0"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x736511e98860"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7365122fc200"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x736511e967d0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7365122fa200"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x736511e94640"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7365122f8200"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x736511e92540"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7365122f6200"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x736511e90540"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7365122f4200"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x736511e8e540"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7365122f2200"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x736511e8c540"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7365122f0200"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x736511e8a540"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7365122ee200"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x736511eaaaa0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x736512520060"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x736511e9c220"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x736512510b10"/></to>
    </wire>
    <wire loc="76:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x736511e9b6f0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7365125160c0"/></to>
    </wire>
    <wire loc="77:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x736511e9ab70"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x736512508cf0"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x736511e999e0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x73651250daa0"/></to>
    </wire>
    <wire loc="99:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x736511d333a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x736510d87530"/></to>
    </wire>
    <wire loc="101:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x736510d86610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x736511d32570"/></to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x736510d86dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x736510d8b670"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x736510d85900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x736511d1bd30"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x736511cadcb0"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x736511ca9030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x736511d171d0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x736511ca6020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x736511d16740"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x736511ca9d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x736511d07490"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x736511ca89c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x736511d0a0e0"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x736511d05c20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x736511c744e0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736511c744e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x736511cff0f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x736511c6d020"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736511c6d020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x736511cfa6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x736511c67b40"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736511c67b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x736511d0ac40"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x736511dcc0c0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x736511ca37f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x736510d46280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736510dc9260"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x736511c2c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736510dc9260"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511c28280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x736510d4a360"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736510d4a360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x736511d1bd30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736511c2bc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736510d48020"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736510d48020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x736511ebd1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x736511c301d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x736511baecb0"/></to>
    </wire>
    <wire loc="32:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x736511c1eb10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736511c2c5e0"/></to>
    </wire>
    <wire loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511b7f8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511c28280"/></to>
    </wire>
    <wire loc="35:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x736511b83bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x736511c24e70"/></to>
    </wire>
    <wire loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x736511c1f1d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736511c2bc90"/></to>
    </wire>
    <wire loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x736511c1b020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x736511bb6970"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x736511bb6970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x736510d33020"/></to>
    </wire>
    <wire loc="156:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x736511bf2380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x736511c01aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x736511bfa100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x736511bb6120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736510d3a450"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x736510d3a450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736510d1eca0"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x736510d2d780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x736510d3aca0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x736510d3aca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x736510d1d5b0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x736510d2f3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x736512086900"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x736510d19710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x736510d23880"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x736510d23880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510d18da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510d21020"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510d21020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x736510d160c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x736510d20440"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x736510d20440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x736510d47020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x736511ebc960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x736510d47910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x736511ebb920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x736511d171d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511ecacd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x736510cd3120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x736510d46280"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x736511d16740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x736510cd6dc0"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x73651186d900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x736510cc7020"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x73651186e240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x736510cc7790"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x73651186faa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x736510cca180"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x736510cc6e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511b07020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x736510cc47b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x736511b052c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x736510cc5af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511b07020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x736510cc3c50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x736511b052c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x736511b052c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x736511a88c90"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511b07020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511a761d0"/></to>
    </wire>
    <wire loc="77:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511a761d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7365118c4210"/></to>
    </wire>
    <wire loc="53:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x736511a862f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x736511a74020"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x736511a74020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x736511a70330"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x736511a85480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x736511a73370"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x736511a73370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x736511a6cd60"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x736511a84610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x736511a72730"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x736511a72730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x736511947a30"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736511a83240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7365118811e0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7365118811e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x736511a7e450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7365123bcdd0"/></to>
    </wire>
    <wire loc="102:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x736511a7c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x736511a7dac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7365118c4210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736510c2ec80"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x736511a6f490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x736512344020"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x736511a6a020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x736512342020"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x736511a66de0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x736512340020"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x736511a59510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x736511a67b60"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x736511a57830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x736511a70330"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x736511a56b40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x736511a6cd60"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736511a5d080"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x736511a495a0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x736511a495a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x736511939610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x736511a37710"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x736511a37710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x736511a24710"/></to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7365118be280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x736511a5f3e0"/></to>
    </wire>
    <wire loc="81:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x73651188e020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7365118c2400"/></to>
    </wire>
    <wire loc="108:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7365118c2400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x736510c2ce80"/></to>
    </wire>
    <wire loc="82:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x73651188f2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7365118c37a0"/></to>
    </wire>
    <wire loc="107:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7365118c37a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510c2c270"/></to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x736511a54700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x736511a38710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x736511a25710"/></to>
    </wire>
    <wire loc="82:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x736511a2e8a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x736511a1a8a0"/></to>
    </wire>
    <wire loc="73:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x736511a35710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x736511a21710"/></to>
    </wire>
    <wire loc="77:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x736511a33710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x736511a1f710"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x736511a3e710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x736511a27710"/></to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x736511a30710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x736511a1c710"/></to>
    </wire>
    <wire loc="83:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x736511a2d8a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x736511a198a0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x736511a3b660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x736511a296b0"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x736511a32710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x736511a1e710"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x736511a39710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x736511a26710"/></to>
    </wire>
    <wire loc="81:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x736511a2f8a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x736511a1b8a0"/></to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x736511a36710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x736511a23710"/></to>
    </wire>
    <wire loc="76:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x736511a34710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x736511a20710"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x736511a3f710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x736511a28710"/></to>
    </wire>
    <wire loc="79:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x736511a31710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x736511a1d710"/></to>
    </wire>
    <wire loc="106:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7365118c3020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x736510c2da60"/></to>
    </wire>
    <wire loc="109:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x736510c2b790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7365118c2cd0"/></to>
    </wire>
    <wire loc="111:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x736510c2a020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x736510c309c0"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x736510c27160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x736510bf7400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7365118be280"/></to>
    </wire>
    <wire loc="81:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x736510bf7e80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7365118bed00"/></to>
    </wire>
    <wire loc="83:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510bf6470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x73651188f2f0"/></to>
    </wire>
    <wire loc="84:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x736510bf40e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x73651188e020"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x736510bf48c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x736510bf3100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x73651136e5a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x736511399720"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x736511368020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7365113a0020"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7365113a0020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x736510bd8cd0"/></to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x736511368c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7365113a0c30"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7365113a0c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7365117bf630"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x73651134a7e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x73651136cc90"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7365117bf630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x73651175f400"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x73651139f8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7365117be2d0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7365117be2d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x736511761cb0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x73651139d020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7365117bc990"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7365117bc990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x73651175e060"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x736510bd7990"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x736511818a00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x736510bd6720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7365117be2d0"/></to>
    </wire>
    <wire loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x736511818a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7365117cc580"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7365117cb400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7365117c11d0"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7365117c11d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7365117b57d0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7365117ca060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7365117be2d0"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7365117c9720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7365117bf630"/></to>
    </wire>
    <wire loc="169:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7365117c8480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7365117c8c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7365117c3140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7365117572f0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7365117572f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x736511747450"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7365117bf020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7365117616c0"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x73651175abc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x736511748d60"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x736511754940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7365117b9490"/></to>
    </wire>
    <wire loc="69:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x73651175e9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x736511756e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x73651175d760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x736511756320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x736511754020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7365113b88d0"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x736511756e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x736511617de0"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x736511756320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7365116176c0"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x736511616c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x736511754020"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x73651173fdc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x736511754940"/></to>
    </wire>
    <wire loc="71:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x736511613920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x736511754940"/></to>
    </wire>
    <wire loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x73651160acc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x736511754940"/></to>
    </wire>
    <wire loc="74:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x736511614590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x73651173dad0"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x736511614e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7365117404a0"/></to>
    </wire>
    <wire loc="77:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x736511737e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x73651160fe10"/></to>
    </wire>
    <wire loc="78:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x736511736540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7365115e5080"/></to>
    </wire>
    <wire loc="17:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7365115e5080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7365113ca0c0"/></to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x736511601d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7365115e5890"/></to>
    </wire>
    <wire loc="13:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7365115e5890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7365113d1440"/></to>
    </wire>
    <wire loc="332:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7365116e06e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7365117174f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7365116e3c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7365116dca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x736511611020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x736511611800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7365115e3020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7365113d0440"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7365113d0440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x736511581d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7365113d1440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x736511582670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7365113cf020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7365113ca920"/></to>
    </wire>
    <wire loc="19:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7365113c9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7365113d2020"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7365113d2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7365115844d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7365113d2c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x736510b1ca90"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x736510b1ca90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x736511421510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x73651157d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7365113cf020"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x736510b16be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7365115838a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x73651157fe50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x736510b1de00"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736510b1de00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511423280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x736511578710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x736510b16440"/></to>
    </wire>
    <wire loc="63:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x736510b16440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x736511424510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7365115838a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7365114eae70"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x736511581d00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7365114e8890"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x736511582670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7365114e9790"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7365115844d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7365114ea0d0"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7365114e63e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x73651157d1d0"/></to>
    </wire>
    <wire loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7365114e75b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x73651157fe50"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7365114e15b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x736511578710"/></to>
    </wire>
    <wire loc="64:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7365114e6a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7365114d44d0"/></to>
    </wire>
    <wire loc="88:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7365114d44d0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7365114cccc0"/></to>
    </wire>
    <wire loc="67:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7365114e0020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x73651143e110"/></to>
    </wire>
    <wire loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x73651143e110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x736512084990"/></to>
    </wire>
    <wire loc="70:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7365114dd120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7365123bcdd0"/></to>
    </wire>
    <wire loc="89:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7365114cf080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7365114c7910"/></to>
    </wire>
    <wire loc="87:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7365114d7b80"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7365114cc410"/></to>
    </wire>
    <wire loc="91:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7365114c6210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7365122d9580"/></to>
    </wire>
    <wire loc="92:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7365114c41f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7365122d7580"/></to>
    </wire>
    <wire loc="93:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7365114c21f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7365122d5580"/></to>
    </wire>
    <wire loc="94:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7365114c01f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7365122d1580"/></to>
    </wire>
    <wire loc="95:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7365114be1f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7365122d3580"/></to>
    </wire>
    <wire loc="66:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x736510b1ba50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7365114d44d0"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x736510b1b2b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x736511421d20"/></to>
    </wire>
    <wire loc="58:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x736511421d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x736511404930"/></to>
    </wire>
    <wire loc="61:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x736511420af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x736510b16be0"/></to>
    </wire>
    <wire loc="56:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x736511421510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x736511406530"/></to>
    </wire>
    <wire loc="106:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x736511406530"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x736510aae3a0"/></to>
    </wire>
    <wire loc="51:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x736511424510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x73651141eb60"/></to>
    </wire>
    <wire loc="55:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511423280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736511407780"/></to>
    </wire>
    <wire loc="105:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x736511407780"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x736510aaf540"/></to>
    </wire>
    <wire loc="108:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x736511404930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x736510aac8b0"/></to>
    </wire>
    <wire loc="52:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x73651141dc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7365114cf080"/></to>
    </wire>
    <wire loc="57:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x736511403250"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x736511420af0"/></to>
    </wire>
    <wire loc="59:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x73651140aa90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x736511404930"/></to>
    </wire>
    <wire loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7365113ffd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736511406cb0"/></to>
    </wire>
    <wire loc="107:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736511406cb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510aaeb20"/></to>
    </wire>
    <wire loc="65:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7365113ff020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7365114d7b80"/></to>
    </wire>
    <wire loc="109:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x736510aab210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x736511403250"/></to>
    </wire>
    <wire loc="111:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x736510aab9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x736510ab1330"/></to>
    </wire>
    <wire loc="75:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x736510aa9c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x736510a793a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7365113ff020"/></to>
    </wire>
    <wire loc="82:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x736510a79b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7365113ff780"/></to>
    </wire>
    <wire loc="84:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510a770f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7365113ffd50"/></to>
    </wire>
    <wire loc="85:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x736510a77d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7365113ea990"/></to>
    </wire>
    <wire loc="114:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x736511361020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x736511344300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x73651134a7e0"/></to>
    </wire>
    <wire loc="44:/home/tofu/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x73651133c0f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x736512595e30"/></to>
    </wire>
    <wire loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x73651133c810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7365117c3140"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/tofu/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/tofu/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/tofu/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LightTempSensor" loc="5:LightTempSensor.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/tofu/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/tofu/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="LightTempSensorAppC.TimerMilliC" loc="44(LightTempSensorAppC.TimerMilliC):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LightTempSensorAppC.LightSource" loc="40(LightTempSensorAppC.LightSource):/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LightTempSensorAppC.LightSource.AdcReadClientC" loc="47(LightTempSensorAppC.LightSource.AdcReadClientC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient" loc="43(LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC" loc="47(LightTempSensorAppC.LightSource.AdcReadStreamClientC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient" loc="43(LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LightTempSensorAppC.TempSource" loc="45(LightTempSensorAppC.TempSource):/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP" loc="45(LightTempSensorAppC.TempSource.SensirionSht11ReaderP):/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/tofu/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7365124e2890" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7365124e2c30" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7365124e1020" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7365124e13a0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7365124e1720" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7365124e1a90" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7365124e1e20" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7365124df200" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7365124df5d0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7365124a4e80" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7365124a1270" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/tofu/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7365122b4a10" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7365122b4dc0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7365122b31a0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7365122b3550" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7365122b38c0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7365120becc0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7365120becc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x73651207ea40" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x73651207ea40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x736512068570" loc="55:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x736512068570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x736512068d40" loc="56:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x736512068d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x736512067160" loc="57:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x736512067160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x736512067940" loc="58:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x736512067940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x736512067d10" loc="59:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x736512066540" loc="60:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x736512066540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7365120476e0" loc="52:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7365120476e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x736512044020" loc="53:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x736512044020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x736512044410" loc="54:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x736512044410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x736512044bf0" loc="55:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x736512044bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x736512043020" loc="56:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x736512008cd0" loc="46:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x736512008cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x736511fd3230" loc="46:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x736511fd3230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x736511fd3560" loc="46:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x736511f84de0" loc="46:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x736511f84de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x736511d95850" loc="83:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x736511d8db40" loc="42:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x736511bb0670" loc="23:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x736511bb09c0" loc="23:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511bb09c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7365119347d0" loc="89:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x736511928350" loc="42:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/tofu/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x736511912d90" loc="52:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x736511863020" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x73651183c9a0" loc="43:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x736511814e10" loc="45:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/tofu/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/tofu/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/tofu/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x73651139b4a0" loc="42:/home/tofu/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x73651139b4a0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x73651139b820" loc="42:/home/tofu/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x736512591320" loc="58:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x736512591320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7365125916a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x736512595e30" loc="57:/home/tofu/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x736512595e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7365125941e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736512593300" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736512593300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736512593680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x73651258b380" loc="6:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x73651258b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651258b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x73651258c510" loc="4:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651258c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651258c890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x73651258cc20" loc="5:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x73651258cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651258b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x73651258ba60" loc="7:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x73651258ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651258bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x73651258e6d0" loc="2:/home/tofu/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651258e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651258ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x73651258d910" loc="39:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x73651258d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651258dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x736512564de0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x736512564de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x736512569c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x736512569310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7365125694a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x736512569630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x736512569180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7365125697c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x736512569950"/>
        <function-ref name="initClocks" scoped="" ref="0x736512569ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x73651256d850" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651256d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651256dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x736512553350" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x736512553350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x736512552340"/>
        <function-ref name="initTimerB" scoped="" ref="0x736512553860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7365125539f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x736512553b80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7365125536d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x736512553d10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x736512552020"/>
        <function-ref name="initClocks" scoped="" ref="0x7365125521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x736512552680" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x736512552680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x736512552a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736512554c00" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736512554c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736512553020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x73651250f5a0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x73651250f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x73651250f920"/>
        <function-ref name="getControl" scoped="" ref="0x73651250fab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651250fc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x73651250fdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x73651250e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x73651250e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x73651250e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x73651250e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x73651250e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7365124fd020" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7365124fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124fd3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7365124fd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124fd6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124fd850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124fd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124fdb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124fdd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124fc020"/>
        <function-ref name="setControl" scoped="" ref="0x7365124fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x736512506700" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x736512506700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512506a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512506c10"/>
        <function-ref name="captured" scoped="" ref="0x736512506da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512505020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365125051b0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512505340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7365124eaa20" loc="68:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7365124eaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124eada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7365124e9020"/>
        <function-ref name="captured" scoped="" ref="0x7365124e91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124e9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124e94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x73651250daa0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x73651250daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651250de20"/>
        <function-ref name="setEvent" scoped="" ref="0x73651250c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x73651250c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x73651250c340"/>
        <function-ref name="fired" scoped="" ref="0x73651250c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7365124f0020" loc="61:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7365124f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124f03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7365124f0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124f06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365124f0850"/>
        <function-ref name="fired" scoped="" ref="0x7365124f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7365124e7a20" loc="71:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7365124e7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124e7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7365124e6020"/>
        <function-ref name="captured" scoped="" ref="0x7365124e61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124e6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124e64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7365124f75a0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7365124f75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124f7920"/>
        <function-ref name="getControl" scoped="" ref="0x7365124f7ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124f7c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124f7dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124f6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124f61b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124f6340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124f64d0"/>
        <function-ref name="setControl" scoped="" ref="0x7365124f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x736512510b10" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x736512510b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736512517020"/>
        <function-ref name="getControl" scoped="" ref="0x7365125171b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512517340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365125174d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736512517660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365125177f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736512517980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736512517b10"/>
        <function-ref name="setControl" scoped="" ref="0x736512517ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7365124eca20" loc="66:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7365124eca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124ecda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7365124eb020"/>
        <function-ref name="captured" scoped="" ref="0x7365124eb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124eb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124eb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7365124f23e0" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7365124f23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124f2760"/>
        <function-ref name="setEvent" scoped="" ref="0x7365124f28f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124f2a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365124f2c10"/>
        <function-ref name="fired" scoped="" ref="0x7365124f2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7365124fc5a0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7365124fc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124fca20"/>
        <function-ref name="getControl" scoped="" ref="0x7365124fcbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124fcd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124fb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124fb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124fb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124fb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124fb660"/>
        <function-ref name="setControl" scoped="" ref="0x7365124fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x736512505700" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x736512505700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512505a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512505c10"/>
        <function-ref name="captured" scoped="" ref="0x736512505da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124ff020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124ff1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124ff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7365124e9a20" loc="69:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7365124e9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124e9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7365124e8020"/>
        <function-ref name="captured" scoped="" ref="0x7365124e81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124e8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124e84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7365124fbbe0" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7365124fbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124fa020"/>
        <function-ref name="getControl" scoped="" ref="0x7365124fa1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124fa340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124fa4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124fa660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124fa7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124fa980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124fab10"/>
        <function-ref name="setControl" scoped="" ref="0x7365124faca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x73651250c890" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x73651250c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651250cc10"/>
        <function-ref name="setEvent" scoped="" ref="0x73651250cda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736512507020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365125071b0"/>
        <function-ref name="fired" scoped="" ref="0x736512507340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x736512520060" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x736512520060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365125203e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x736512520570"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512520700"/>
        <function-ref name="get" scoped="" ref="0x736512520890"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512520a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512520bb0"/>
        <function-ref name="getMode" scoped="" ref="0x736512520d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651251f020"/>
        <function-ref name="overflow" scoped="" ref="0x73651251f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x73651251f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x73651251f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7365124f0da0" loc="62:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7365124f0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124ef180"/>
        <function-ref name="setEvent" scoped="" ref="0x7365124ef310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124ef4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365124ef630"/>
        <function-ref name="fired" scoped="" ref="0x7365124ef7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7365125160c0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7365125160c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736512516440"/>
        <function-ref name="getControl" scoped="" ref="0x7365125165d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512516760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365125168f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736512516a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512516c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736512516da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x73651250f020"/>
        <function-ref name="setControl" scoped="" ref="0x73651250f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7365124f6a50" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7365124f6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124f6dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7365124f5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124f51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124f5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124f54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124f5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124f57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124f5980"/>
        <function-ref name="setControl" scoped="" ref="0x7365124f5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7365125006d0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7365125006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512500a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512500be0"/>
        <function-ref name="captured" scoped="" ref="0x736512500d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512506020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365125061b0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512506340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7365124eba20" loc="67:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7365124eba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124ebda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7365124ea020"/>
        <function-ref name="captured" scoped="" ref="0x7365124ea1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124ea340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124ea4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x736512508cf0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x736512508cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651250d0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x73651250d230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x73651250d3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x73651250d550"/>
        <function-ref name="fired" scoped="" ref="0x73651250d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7365124f11f0" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7365124f11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124f1570"/>
        <function-ref name="setEvent" scoped="" ref="0x7365124f1700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124f1890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365124f1a20"/>
        <function-ref name="fired" scoped="" ref="0x7365124f1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7365124e8a20" loc="70:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7365124e8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124e8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7365124e7020"/>
        <function-ref name="captured" scoped="" ref="0x7365124e71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124e7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124e74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7365124f80c0" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7365124f80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124f8440"/>
        <function-ref name="getControl" scoped="" ref="0x7365124f85d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124f8760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124f88f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124f8a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124f8c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124f8da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124f7020"/>
        <function-ref name="setControl" scoped="" ref="0x7365124f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7365124ff6c0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7365124ff6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365124ffa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7365124ffbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124ffd60"/>
        <function-ref name="get" scoped="" ref="0x7365124fe020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124fe1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124fe340"/>
        <function-ref name="getMode" scoped="" ref="0x7365124fe4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124fe660"/>
        <function-ref name="overflow" scoped="" ref="0x7365124fe7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7365124fe980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7365124feb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7365124efb80" loc="63:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7365124efb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124ee020"/>
        <function-ref name="setEvent" scoped="" ref="0x7365124ee1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124ee340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365124ee4d0"/>
        <function-ref name="fired" scoped="" ref="0x7365124ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7365124eda20" loc="65:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7365124eda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124edda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7365124ec020"/>
        <function-ref name="captured" scoped="" ref="0x7365124ec1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124ec340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124ec4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7365124ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7365124eea20" loc="64:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7365124eea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124ed020"/>
        <function-ref name="setEvent" scoped="" ref="0x7365124ed1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124ed340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365124ed4d0"/>
        <function-ref name="fired" scoped="" ref="0x7365124ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7365124f3570" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7365124f3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124f38f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7365124f3a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124f3c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365124f3da0"/>
        <function-ref name="fired" scoped="" ref="0x7365124f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7365124f4020" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7365124f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124f43a0"/>
        <function-ref name="getControl" scoped="" ref="0x7365124f4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124f46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124f4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124f49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124f4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124f4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124f3020"/>
        <function-ref name="setControl" scoped="" ref="0x7365124f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7365124aeaa0" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7365124aeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124aee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7365124ae450" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7365124ae450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124ae7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7365124ad120" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7365124ad120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124ad4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7365124afd80" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7365124afd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124ae180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7365124b0540" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7365124b0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365124b08c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7365124b0a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124b0be0"/>
        <function-ref name="get" scoped="" ref="0x7365124b0d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124af020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124af1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7365124af340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124af4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7365124af660"/>
        <function-ref name="setMode" scoped="" ref="0x7365124af7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7365124af980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7365124a6940" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7365124a6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124a6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7365124a62f0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7365124a62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124a6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7365124a5020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7365124a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7365124a7bf0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7365124a7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7365124a83e0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7365124a83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365124a8760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7365124a88f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124a8a80"/>
        <function-ref name="get" scoped="" ref="0x7365124a8c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124a8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124a7020"/>
        <function-ref name="getMode" scoped="" ref="0x7365124a71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124a7340"/>
        <function-ref name="overflow" scoped="" ref="0x7365124a74d0"/>
        <function-ref name="setMode" scoped="" ref="0x7365124a7660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7365124a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x73651245aa90" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x73651245aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651245ae10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512459020"/>
        <function-ref name="captured" scoped="" ref="0x7365124591b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512459340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124594d0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512459660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7365124a29d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7365124a29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124a2d50"/>
        <function-ref name="getControl" scoped="" ref="0x73651245b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651245b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x73651245b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x73651245b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x73651245b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x73651245b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x73651245b980"/>
        <function-ref name="setControl" scoped="" ref="0x73651245bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x736512457020" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x736512457020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7365124573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x73651245bde0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x73651245bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651245a180"/>
        <function-ref name="setEvent" scoped="" ref="0x73651245a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x73651245a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x73651245a630"/>
        <function-ref name="fired" scoped="" ref="0x73651245a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512459930" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512459930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736512459cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x736512459e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512458020"/>
        <function-ref name="get" scoped="" ref="0x7365124581b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512458340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124584d0"/>
        <function-ref name="getMode" scoped="" ref="0x736512458660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124587f0"/>
        <function-ref name="overflow" scoped="" ref="0x736512458980"/>
        <function-ref name="setMode" scoped="" ref="0x736512458b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736512458ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x736512452160" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x736512452160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124524e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512452670"/>
        <function-ref name="captured" scoped="" ref="0x736512452800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512452990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512452b20"/>
        <function-ref name="setEdge" scoped="" ref="0x736512452cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x736512454020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x736512454020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124543a0"/>
        <function-ref name="getControl" scoped="" ref="0x736512454530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124546c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736512454850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124549e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512454b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736512454d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736512453020"/>
        <function-ref name="setControl" scoped="" ref="0x7365124531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x73651244f7a0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x73651244f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651244fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x736512453480" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x736512453480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512453800"/>
        <function-ref name="setEvent" scoped="" ref="0x736512453990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736512453b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736512453cb0"/>
        <function-ref name="fired" scoped="" ref="0x736512453e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512451020" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512451020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365124513a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x736512451530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124516c0"/>
        <function-ref name="get" scoped="" ref="0x736512451850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124519e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512451b70"/>
        <function-ref name="getMode" scoped="" ref="0x736512451d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651244f020"/>
        <function-ref name="overflow" scoped="" ref="0x73651244f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x73651244f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x73651244f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x73651244a7a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x73651244a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651244ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x73651244acb0"/>
        <function-ref name="captured" scoped="" ref="0x73651244ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512449020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124491b0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512449340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x73651244c6d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x73651244c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x73651244ca50"/>
        <function-ref name="getControl" scoped="" ref="0x73651244cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651244cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x73651244b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x73651244b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x73651244b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x73651244b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x73651244b660"/>
        <function-ref name="setControl" scoped="" ref="0x73651244b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x736512448c50" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x736512448c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736512447020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x73651244bac0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x73651244bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651244be40"/>
        <function-ref name="setEvent" scoped="" ref="0x73651244a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x73651244a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x73651244a340"/>
        <function-ref name="fired" scoped="" ref="0x73651244a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512449610" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512449610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736512449990"/>
        <function-ref name="setClockSource" scoped="" ref="0x736512449b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512449cb0"/>
        <function-ref name="get" scoped="" ref="0x736512449e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512448020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124481b0"/>
        <function-ref name="getMode" scoped="" ref="0x736512448340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124484d0"/>
        <function-ref name="overflow" scoped="" ref="0x736512448660"/>
        <function-ref name="setMode" scoped="" ref="0x7365124487f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736512448980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x736512443cb0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x736512443cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124420a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512442230"/>
        <function-ref name="captured" scoped="" ref="0x7365124423c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512442550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124426e0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512442870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x736512445b30" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x736512445b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736512444020"/>
        <function-ref name="getControl" scoped="" ref="0x7365124441b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512444340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124444d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736512444660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124447f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736512444980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736512444b10"/>
        <function-ref name="setControl" scoped="" ref="0x736512444ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7365124402f0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7365124402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736512440670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x736512443020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x736512443020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124433a0"/>
        <function-ref name="setEvent" scoped="" ref="0x736512443530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124436c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736512443850"/>
        <function-ref name="fired" scoped="" ref="0x7365124439e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512442b40" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512442b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736512441020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7365124411b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512441340"/>
        <function-ref name="get" scoped="" ref="0x7365124414d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512441660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124417f0"/>
        <function-ref name="getMode" scoped="" ref="0x736512441980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512441b10"/>
        <function-ref name="overflow" scoped="" ref="0x736512441ca0"/>
        <function-ref name="setMode" scoped="" ref="0x736512441e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736512440020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x73651243a2f0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x73651243a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651243a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x73651243a800"/>
        <function-ref name="captured" scoped="" ref="0x73651243a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651243ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651243acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x73651243ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x73651243c220" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x73651243c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x73651243c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x73651243c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651243c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x73651243ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x73651243cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x73651243cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x73651243b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x73651243b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x73651243b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7365124387a0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7365124387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736512438b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x73651243b610" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x73651243b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651243b990"/>
        <function-ref name="setEvent" scoped="" ref="0x73651243bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x73651243bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x73651243be40"/>
        <function-ref name="fired" scoped="" ref="0x73651243a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512439160" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512439160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365124394e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x736512439670"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512439800"/>
        <function-ref name="get" scoped="" ref="0x736512439990"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512439b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512439cb0"/>
        <function-ref name="getMode" scoped="" ref="0x736512439e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512438020"/>
        <function-ref name="overflow" scoped="" ref="0x7365124381b0"/>
        <function-ref name="setMode" scoped="" ref="0x736512438340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7365124384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7365124337a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7365124337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512433b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512433cb0"/>
        <function-ref name="captured" scoped="" ref="0x736512433e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512432020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124321b0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512432340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7365124356d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7365124356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736512435a50"/>
        <function-ref name="getControl" scoped="" ref="0x736512435be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512435d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736512434020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365124341b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512434340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365124344d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736512434660"/>
        <function-ref name="setControl" scoped="" ref="0x7365124347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x736512431c50" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x736512431c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651242f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x736512434ac0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x736512434ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512434e40"/>
        <function-ref name="setEvent" scoped="" ref="0x736512433020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124331b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736512433340"/>
        <function-ref name="fired" scoped="" ref="0x7365124334d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512432610" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512432610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736512432990"/>
        <function-ref name="setClockSource" scoped="" ref="0x736512432b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512432cb0"/>
        <function-ref name="get" scoped="" ref="0x736512432e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512431020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124311b0"/>
        <function-ref name="getMode" scoped="" ref="0x736512431340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124314d0"/>
        <function-ref name="overflow" scoped="" ref="0x736512431660"/>
        <function-ref name="setMode" scoped="" ref="0x7365124317f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736512431980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x73651242bcb0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x73651242bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651242a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x73651242a230"/>
        <function-ref name="captured" scoped="" ref="0x73651242a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651242a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651242a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x73651242a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x73651242db30" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x73651242db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x73651242c020"/>
        <function-ref name="getControl" scoped="" ref="0x73651242c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651242c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x73651242c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x73651242c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x73651242c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x73651242c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x73651242cb10"/>
        <function-ref name="setControl" scoped="" ref="0x73651242cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7365124282f0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7365124282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736512428670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x73651242b020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x73651242b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651242b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x73651242b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x73651242b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x73651242b850"/>
        <function-ref name="fired" scoped="" ref="0x73651242b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x73651242ab40" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x73651242ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736512429020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7365124291b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512429340"/>
        <function-ref name="get" scoped="" ref="0x7365124294d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512429660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124297f0"/>
        <function-ref name="getMode" scoped="" ref="0x736512429980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512429b10"/>
        <function-ref name="overflow" scoped="" ref="0x736512429ca0"/>
        <function-ref name="setMode" scoped="" ref="0x736512429e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736512428020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7365124232f0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7365124232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512423670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512423800"/>
        <function-ref name="captured" scoped="" ref="0x736512423990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512423b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512423cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512423e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x736512425220" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x736512425220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365124255a0"/>
        <function-ref name="getControl" scoped="" ref="0x736512425730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365124258c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736512425a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736512425be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512425d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736512424020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365124241b0"/>
        <function-ref name="setControl" scoped="" ref="0x736512424340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7365124217a0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7365124217a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736512421b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x736512424610" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x736512424610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736512424990"/>
        <function-ref name="setEvent" scoped="" ref="0x736512424b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736512424cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736512424e40"/>
        <function-ref name="fired" scoped="" ref="0x736512423020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512422160" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512422160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365124224e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x736512422670"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512422800"/>
        <function-ref name="get" scoped="" ref="0x736512422990"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512422b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512422cb0"/>
        <function-ref name="getMode" scoped="" ref="0x736512422e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512421020"/>
        <function-ref name="overflow" scoped="" ref="0x7365124211b0"/>
        <function-ref name="setMode" scoped="" ref="0x736512421340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7365124214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x73651241b7a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x73651241b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651241bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x73651241bcb0"/>
        <function-ref name="captured" scoped="" ref="0x73651241be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651241a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651241a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x73651241a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x73651241d6d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x73651241d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x73651241da50"/>
        <function-ref name="getControl" scoped="" ref="0x73651241dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651241dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x73651241c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x73651241c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x73651241c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x73651241c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x73651241c660"/>
        <function-ref name="setControl" scoped="" ref="0x73651241c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x736512419c50" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x736512419c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736512418020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x73651241cac0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x73651241cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x73651241ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x73651241b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x73651241b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x73651241b340"/>
        <function-ref name="fired" scoped="" ref="0x73651241b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x73651241a610" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x73651241a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x73651241a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x73651241ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651241acb0"/>
        <function-ref name="get" scoped="" ref="0x73651241ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512419020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124191b0"/>
        <function-ref name="getMode" scoped="" ref="0x736512419340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124194d0"/>
        <function-ref name="overflow" scoped="" ref="0x736512419660"/>
        <function-ref name="setMode" scoped="" ref="0x7365124197f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736512419980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x736512414cb0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x736512414cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124130a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x736512413230"/>
        <function-ref name="captured" scoped="" ref="0x7365124133c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512413550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365124136e0"/>
        <function-ref name="setEdge" scoped="" ref="0x736512413870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x736512416b30" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x736512416b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736512415020"/>
        <function-ref name="getControl" scoped="" ref="0x7365124151b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512415340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365124154d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736512415660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365124157f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736512415980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736512415b10"/>
        <function-ref name="setControl" scoped="" ref="0x736512415ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7365124112f0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7365124112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736512411670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x736512414020" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x736512414020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365124143a0"/>
        <function-ref name="setEvent" scoped="" ref="0x736512414530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365124146c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736512414850"/>
        <function-ref name="fired" scoped="" ref="0x7365124149e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736512413b40" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736512413b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736512412020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7365124121b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736512412340"/>
        <function-ref name="get" scoped="" ref="0x7365124124d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736512412660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365124127f0"/>
        <function-ref name="getMode" scoped="" ref="0x736512412980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512412b10"/>
        <function-ref name="overflow" scoped="" ref="0x736512412ca0"/>
        <function-ref name="setMode" scoped="" ref="0x736512412e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736512411020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x73651240a240" loc="7:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x73651240a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651240a5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x73651240faa0" loc="4:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x73651240faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651240fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x73651240b260" loc="5:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x73651240b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651240b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x73651240b9f0" loc="6:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x73651240b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651240bd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7365127074c0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7365127074c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x736512707840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x736512a1b3b0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x736512a1b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x736512a1b730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x736512a1b8c0"/>
        <function-ref name="sleep" scoped="" ref="0x736512a1ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x736512843be0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x736512843be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x73651297f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x73651256bb50" loc="39:/home/tofu/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x73651256bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7365123d3b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7365123d31b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7365123d3340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7365123d34d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7365123d3020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7365123d3660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7365123d37f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7365123d3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7365123c6dc0" loc="60:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7365123c6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7365123c5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7365123c7590" loc="57:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7365123c7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7365123c7910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7365123c66c0" loc="59:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7365123c66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7365123c6a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7365123c7c00" loc="58:/home/tofu/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7365123c7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7365123c6020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7365123c61b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7365123c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x736512af34f0" loc="48:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x736512af34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736512af3870"/>
        <function-ref name="runTask" scoped="" ref="0x736512af3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x736512a843a0" loc="47:/home/tofu/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x736512a843a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736512a84720"/>
        <function-ref name="taskLoop" scoped="" ref="0x736512a848b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x736512a84a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x73651262d040" loc="56:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x73651262d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x73651262d3c0"/>
        <function-ref name="runTask" scoped="" ref="0x73651262d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x736512629490" loc="57:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x736512629490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x736512629810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7365126299a0"/>
        <function-ref name="sleep" scoped="" ref="0x736512629b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x73651262f140" loc="55:/home/tofu/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x73651262f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651262f4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x73651262f650"/>
        <function-ref name="runNextTask" scoped="" ref="0x73651262f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7365123b96c0" loc="7:LightTempSensor.nc">
      <component-ref qname="LightTempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7365123b96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7365123b9a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LRead" ref="0x736512399310" loc="10:LightTempSensor.nc">
      <component-ref qname="LightTempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LRead" scoped="" ref="0x736512399310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x73651239c020"/>
        <function-ref name="readDone" scoped="" ref="0x73651239c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TRead" ref="0x73651239cc70" loc="11:LightTempSensor.nc">
      <component-ref qname="LightTempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TRead" scoped="" ref="0x73651239cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x73651239b8a0"/>
        <function-ref name="readDone" scoped="" ref="0x73651239bd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7365123ac9a0" loc="8:LightTempSensor.nc">
      <component-ref qname="LightTempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7365123ac9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7365123acd20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7365123b8020"/>
        <function-ref name="led1On" scoped="" ref="0x7365123b81b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7365123b8340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7365123b84d0"/>
        <function-ref name="get" scoped="" ref="0x7365123b8660"/>
        <function-ref name="led1Off" scoped="" ref="0x7365123b87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7365123b8e30"/>
        <function-ref name="set" scoped="" ref="0x7365123b8980"/>
        <function-ref name="led0On" scoped="" ref="0x7365123b8b10"/>
        <function-ref name="led2On" scoped="" ref="0x7365123b8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7365123a2da0" loc="9:LightTempSensor.nc">
      <component-ref qname="LightTempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7365123a2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x73651239f390"/>
        <function-ref name="fired" scoped="" ref="0x7365123aa970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7365123a0720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7365123a02a0"/>
        <function-ref name="getdt" scoped="" ref="0x73651239fc90"/>
        <function-ref name="gett0" scoped="" ref="0x73651239f810"/>
        <function-ref name="isRunning" scoped="" ref="0x7365123aadf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7365123ab9d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7365123a0d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7365123aa020"/>
        <function-ref name="stop" scoped="" ref="0x7365123aa4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7365123bcdd0" loc="46:/home/tofu/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7365123bcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736512388180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736512388310"/>
        <function-ref name="led1On" scoped="" ref="0x7365123884a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x736512388630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7365123887c0"/>
        <function-ref name="get" scoped="" ref="0x736512388950"/>
        <function-ref name="led1Off" scoped="" ref="0x736512388ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7365123871b0"/>
        <function-ref name="set" scoped="" ref="0x736512388c70"/>
        <function-ref name="led0On" scoped="" ref="0x736512388e00"/>
        <function-ref name="led2On" scoped="" ref="0x736512387020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x73651237cce0" loc="50:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x73651237cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123810a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512381230"/>
        <function-ref name="toggle" scoped="" ref="0x7365123813c0"/>
        <function-ref name="isOutput" scoped="" ref="0x736512381550"/>
        <function-ref name="get" scoped="" ref="0x7365123816e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512381870"/>
        <function-ref name="set" scoped="" ref="0x736512381a00"/>
        <function-ref name="clr" scoped="" ref="0x736512381b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736512384110" loc="46:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736512384110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736512384490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x736512380020" loc="51:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x736512380020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123803a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512380530"/>
        <function-ref name="toggle" scoped="" ref="0x7365123806c0"/>
        <function-ref name="isOutput" scoped="" ref="0x736512380850"/>
        <function-ref name="get" scoped="" ref="0x7365123809e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512380b70"/>
        <function-ref name="set" scoped="" ref="0x736512380d00"/>
        <function-ref name="clr" scoped="" ref="0x73651237b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x736512384710" loc="47:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x736512384710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736512384a90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736512384c20"/>
        <function-ref name="led1On" scoped="" ref="0x736512384db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x736512383020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7365123831b0"/>
        <function-ref name="get" scoped="" ref="0x736512383340"/>
        <function-ref name="led1Off" scoped="" ref="0x7365123834d0"/>
        <function-ref name="led2Off" scoped="" ref="0x736512383b10"/>
        <function-ref name="set" scoped="" ref="0x736512383660"/>
        <function-ref name="led0On" scoped="" ref="0x7365123837f0"/>
        <function-ref name="led2On" scoped="" ref="0x736512383980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x73651237b340" loc="52:/home/tofu/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x73651237b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651237b6c0"/>
        <function-ref name="isInput" scoped="" ref="0x73651237b850"/>
        <function-ref name="toggle" scoped="" ref="0x73651237b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x73651237bb70"/>
        <function-ref name="get" scoped="" ref="0x73651237bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651237a020"/>
        <function-ref name="set" scoped="" ref="0x73651237a1b0"/>
        <function-ref name="clr" scoped="" ref="0x73651237a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x736512385970" loc="41:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x736512385970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512385cf0"/>
        <function-ref name="isInput" scoped="" ref="0x736512385e80"/>
        <function-ref name="toggle" scoped="" ref="0x73651235e030"/>
        <function-ref name="isOutput" scoped="" ref="0x73651235e1c0"/>
        <function-ref name="get" scoped="" ref="0x73651235e350"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651235e4e0"/>
        <function-ref name="set" scoped="" ref="0x73651235e670"/>
        <function-ref name="clr" scoped="" ref="0x73651235e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x73651235eb60" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x73651235eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651235d020"/>
        <function-ref name="isInput" scoped="" ref="0x73651235d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x73651235d340"/>
        <function-ref name="isOutput" scoped="" ref="0x73651235d4d0"/>
        <function-ref name="get" scoped="" ref="0x73651235d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651235d7f0"/>
        <function-ref name="set" scoped="" ref="0x73651235d980"/>
        <function-ref name="clr" scoped="" ref="0x73651235db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x73651235b020" loc="44:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651235b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651235b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x73651235de70" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x73651235de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651235c220"/>
        <function-ref name="isInput" scoped="" ref="0x73651235c3b0"/>
        <function-ref name="toggle" scoped="" ref="0x73651235c540"/>
        <function-ref name="isOutput" scoped="" ref="0x73651235c6d0"/>
        <function-ref name="get" scoped="" ref="0x73651235c860"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651235c9f0"/>
        <function-ref name="set" scoped="" ref="0x73651235cb80"/>
        <function-ref name="clr" scoped="" ref="0x73651235cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x736512346020" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x736512346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123463a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512346530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123466c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512346850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123469e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512346b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512346d00"/>
        <function-ref name="get" scoped="" ref="0x736512345020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512345340"/>
        <function-ref name="set" scoped="" ref="0x7365123454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512345660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512345a80"/>
        <function-ref name="clr" scoped="" ref="0x736512345c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x736512331020" loc="66:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x736512331020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123313a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512331530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123316c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512331850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512331b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512331d00"/>
        <function-ref name="get" scoped="" ref="0x736512330020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512330340"/>
        <function-ref name="set" scoped="" ref="0x7365123304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512330660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512330a80"/>
        <function-ref name="clr" scoped="" ref="0x736512330c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7365122e8560" loc="145:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7365122e8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122e88e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122e8a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122e8c00"/>
        <function-ref name="toggle" scoped="" ref="0x7365122e8d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122e7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122e7340"/>
        <function-ref name="get" scoped="" ref="0x7365122e74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122e7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122e77f0"/>
        <function-ref name="set" scoped="" ref="0x7365122e7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122e7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122e7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122e6020"/>
        <function-ref name="clr" scoped="" ref="0x7365122e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7365122c3570" loc="165:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7365122c3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122c38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122c3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122c3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122c3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122c2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122c21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122c2340"/>
        <function-ref name="get" scoped="" ref="0x7365122c24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122c2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122c27f0"/>
        <function-ref name="set" scoped="" ref="0x7365122c2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122c2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122c2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122c1020"/>
        <function-ref name="clr" scoped="" ref="0x7365122c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7365122e6580" loc="146:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7365122e6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122e6900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122e6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122e6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122e6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122e5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122e51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122e5340"/>
        <function-ref name="get" scoped="" ref="0x7365122e54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122e5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122e57f0"/>
        <function-ref name="set" scoped="" ref="0x7365122e5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122e5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122e5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122e4020"/>
        <function-ref name="clr" scoped="" ref="0x7365122e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x73651232d020" loc="71:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x73651232d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651232d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651232d530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651232d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651232d850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651232d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651232db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651232dd00"/>
        <function-ref name="get" scoped="" ref="0x73651232c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651232c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651232c340"/>
        <function-ref name="set" scoped="" ref="0x73651232c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651232c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651232c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651232ca80"/>
        <function-ref name="clr" scoped="" ref="0x73651232cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x736512319200" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x736512319200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512319580"/>
        <function-ref name="isInput" scoped="" ref="0x736512319710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123198a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512319a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512319bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512319d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512318020"/>
        <function-ref name="get" scoped="" ref="0x7365123181b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512318340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123184d0"/>
        <function-ref name="set" scoped="" ref="0x736512318660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123187f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512318980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512318c10"/>
        <function-ref name="clr" scoped="" ref="0x736512318da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x736512304200" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x736512304200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512304580"/>
        <function-ref name="isInput" scoped="" ref="0x736512304710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123048a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512304a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512304bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512304d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512303020"/>
        <function-ref name="get" scoped="" ref="0x7365123031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512303340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123034d0"/>
        <function-ref name="set" scoped="" ref="0x736512303660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512303980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512303c10"/>
        <function-ref name="clr" scoped="" ref="0x736512303da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7365122f4200" loc="108:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7365122f4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122f4580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122f4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122f48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122f4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122f4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122f4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122f3020"/>
        <function-ref name="get" scoped="" ref="0x7365122f31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122f3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122f34d0"/>
        <function-ref name="set" scoped="" ref="0x7365122f3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122f37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122f3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122f3c10"/>
        <function-ref name="clr" scoped="" ref="0x7365122f3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7365122e0580" loc="149:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7365122e0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122e0900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122e0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122e0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122e0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122de020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122de340"/>
        <function-ref name="get" scoped="" ref="0x7365122de4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122de660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122de7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122de980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122deb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122deca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122dd020"/>
        <function-ref name="clr" scoped="" ref="0x7365122dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7365122cf570" loc="159:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7365122cf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122cf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122cfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122cfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122cfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122ce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122ce340"/>
        <function-ref name="get" scoped="" ref="0x7365122ce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122ce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122ce7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122ce980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122ceb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122ceca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122cd020"/>
        <function-ref name="clr" scoped="" ref="0x7365122cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7365122bb580" loc="171:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7365122bb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122bb900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122bba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122bbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122bbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122ba020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122ba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122ba340"/>
        <function-ref name="get" scoped="" ref="0x7365122ba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122ba660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122ba7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122ba980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122bab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122baca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122b9020"/>
        <function-ref name="clr" scoped="" ref="0x7365122b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x736512340020" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x736512340020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123403a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512340530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123406c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512340850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123409e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512340b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512340d00"/>
        <function-ref name="get" scoped="" ref="0x73651233f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651233f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651233f340"/>
        <function-ref name="set" scoped="" ref="0x73651233f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651233f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651233f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651233fa80"/>
        <function-ref name="clr" scoped="" ref="0x73651233fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7365122dd580" loc="150:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7365122dd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122dd900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122dda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122ddc20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122dddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122dc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122dc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122dc340"/>
        <function-ref name="get" scoped="" ref="0x7365122dc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122dc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122dc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122dcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122dcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122db020"/>
        <function-ref name="clr" scoped="" ref="0x7365122db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x73651233b020" loc="61:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x73651233b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651233b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651233b530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651233b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651233b850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651233b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651233bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651233bd00"/>
        <function-ref name="get" scoped="" ref="0x73651233a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651233a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651233a340"/>
        <function-ref name="set" scoped="" ref="0x73651233a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651233a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651233a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651233aa80"/>
        <function-ref name="clr" scoped="" ref="0x73651233ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x736512327020" loc="74:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x736512327020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123273a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512327530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123276c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512327850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512327b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512327d00"/>
        <function-ref name="get" scoped="" ref="0x736512326020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512326340"/>
        <function-ref name="set" scoped="" ref="0x7365123264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512326660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512326a80"/>
        <function-ref name="clr" scoped="" ref="0x736512326c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x736512313200" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x736512313200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512313580"/>
        <function-ref name="isInput" scoped="" ref="0x736512313710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123138a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512313a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512313bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512313d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512312020"/>
        <function-ref name="get" scoped="" ref="0x7365123121b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512312340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123124d0"/>
        <function-ref name="set" scoped="" ref="0x736512312660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123127f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512312980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512312c10"/>
        <function-ref name="clr" scoped="" ref="0x736512312da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7365122fe200" loc="100:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7365122fe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122fe580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122fe710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122fe8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122fea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122febc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122fed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122fd020"/>
        <function-ref name="get" scoped="" ref="0x7365122fd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122fd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122fd4d0"/>
        <function-ref name="set" scoped="" ref="0x7365122fd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122fd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122fd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122fdc10"/>
        <function-ref name="clr" scoped="" ref="0x7365122fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7365122ee200" loc="111:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7365122ee200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122ee580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122ee710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122ee8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122eea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122eebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122eed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122ed020"/>
        <function-ref name="get" scoped="" ref="0x7365122ed1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122ed340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122ed4d0"/>
        <function-ref name="set" scoped="" ref="0x7365122ed660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122ed7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122ed980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122edc10"/>
        <function-ref name="clr" scoped="" ref="0x7365122edda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x73651234a020" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x73651234a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651234a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651234a530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651234a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651234a850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651234a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651234ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651234ad00"/>
        <function-ref name="get" scoped="" ref="0x736512349020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512349340"/>
        <function-ref name="set" scoped="" ref="0x7365123494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512349660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512349a80"/>
        <function-ref name="clr" scoped="" ref="0x736512349c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x736512335020" loc="64:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x736512335020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123354a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512335630"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123357c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512335950"/>
        <function-ref name="isOutput" scoped="" ref="0x736512335ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512335c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512335e00"/>
        <function-ref name="get" scoped="" ref="0x736512334020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512334340"/>
        <function-ref name="set" scoped="" ref="0x7365123344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512334660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512334a80"/>
        <function-ref name="clr" scoped="" ref="0x736512334c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x736512321020" loc="77:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x736512321020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123213a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512321530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123216c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512321850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512321b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512321d00"/>
        <function-ref name="get" scoped="" ref="0x736512320020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512320340"/>
        <function-ref name="set" scoped="" ref="0x7365123204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512320660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512320a80"/>
        <function-ref name="clr" scoped="" ref="0x736512320c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7365122ea580" loc="144:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7365122ea580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122ea900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122eaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122eac20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122eadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122e9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122e9340"/>
        <function-ref name="get" scoped="" ref="0x7365122e94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122e9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122e97f0"/>
        <function-ref name="set" scoped="" ref="0x7365122e9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122e9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122e9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122e8020"/>
        <function-ref name="clr" scoped="" ref="0x7365122e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7365122c9570" loc="162:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7365122c9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122c98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122c9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122c9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122c9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122c8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122c81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122c8340"/>
        <function-ref name="get" scoped="" ref="0x7365122c84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122c8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122c87f0"/>
        <function-ref name="set" scoped="" ref="0x7365122c8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122c8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122c8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122c7020"/>
        <function-ref name="clr" scoped="" ref="0x7365122c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7365122bd570" loc="169:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7365122bd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122bd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122bda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122bdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122bdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122bc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122bc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122bc340"/>
        <function-ref name="get" scoped="" ref="0x7365122bc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122bc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122bc7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122bc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122bcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122bcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122bb020"/>
        <function-ref name="clr" scoped="" ref="0x7365122bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7365122d5580" loc="155:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7365122d5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122d5900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122d5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122d5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122d5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122d4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122d4340"/>
        <function-ref name="get" scoped="" ref="0x7365122d44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122d4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122d47f0"/>
        <function-ref name="set" scoped="" ref="0x7365122d4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122d4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122d4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122d3020"/>
        <function-ref name="clr" scoped="" ref="0x7365122d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x73651231d020" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x73651231d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651231d5a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651231d730"/>
        <function-ref name="setResistor" scoped="" ref="0x73651231d8c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651231da50"/>
        <function-ref name="isOutput" scoped="" ref="0x73651231dbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651231dd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651231c020"/>
        <function-ref name="get" scoped="" ref="0x73651231c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651231c340"/>
        <function-ref name="getRaw" scoped="" ref="0x73651231c4d0"/>
        <function-ref name="set" scoped="" ref="0x73651231c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651231c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651231c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651231cc10"/>
        <function-ref name="clr" scoped="" ref="0x73651231cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x736512308200" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x736512308200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512308580"/>
        <function-ref name="isInput" scoped="" ref="0x736512308710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123088a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512308a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512308bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512308d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512307020"/>
        <function-ref name="get" scoped="" ref="0x7365123071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512307340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123074d0"/>
        <function-ref name="set" scoped="" ref="0x736512307660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512307980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512307c10"/>
        <function-ref name="clr" scoped="" ref="0x736512307da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7365122f8200" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7365122f8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122f8580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122f8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122f88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122f8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122f8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122f8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122f7020"/>
        <function-ref name="get" scoped="" ref="0x7365122f71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122f7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122f74d0"/>
        <function-ref name="set" scoped="" ref="0x7365122f7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122f77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122f7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122f7c10"/>
        <function-ref name="clr" scoped="" ref="0x7365122f7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7365122c7570" loc="163:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7365122c7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122c78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122c7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122c7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122c7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122c6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122c61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122c6340"/>
        <function-ref name="get" scoped="" ref="0x7365122c64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122c6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122c67f0"/>
        <function-ref name="set" scoped="" ref="0x7365122c6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122c6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122c6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122c5020"/>
        <function-ref name="clr" scoped="" ref="0x7365122c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7365122db570" loc="152:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7365122db570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122db8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122dba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122dbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122dbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122da020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122da340"/>
        <function-ref name="get" scoped="" ref="0x7365122da4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122da660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122da7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122da980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122dab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122daca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122d9020"/>
        <function-ref name="clr" scoped="" ref="0x7365122d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x736512344020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x736512344020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123443a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512344530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123446c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512344850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123449e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512344b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512344d00"/>
        <function-ref name="get" scoped="" ref="0x736512343020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512343340"/>
        <function-ref name="set" scoped="" ref="0x7365123434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512343660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512343a80"/>
        <function-ref name="clr" scoped="" ref="0x736512343c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x73651232f020" loc="67:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x73651232f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651232f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651232f530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651232f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651232f850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651232f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651232fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651232fd00"/>
        <function-ref name="get" scoped="" ref="0x73651232e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651232e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651232e340"/>
        <function-ref name="set" scoped="" ref="0x73651232e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651232e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651232e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651232ea80"/>
        <function-ref name="clr" scoped="" ref="0x73651232ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7365122fc200" loc="104:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7365122fc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122fc580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122fc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122fc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122fca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122fcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122fcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122fb020"/>
        <function-ref name="get" scoped="" ref="0x7365122fb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122fb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122fb4d0"/>
        <function-ref name="set" scoped="" ref="0x7365122fb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122fb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122fb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122fbc10"/>
        <function-ref name="clr" scoped="" ref="0x7365122fbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x73651232b020" loc="72:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x73651232b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651232b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651232b530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651232b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651232b850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651232b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651232bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651232bd00"/>
        <function-ref name="get" scoped="" ref="0x73651232a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651232a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651232a340"/>
        <function-ref name="set" scoped="" ref="0x73651232a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651232a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651232a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651232aa80"/>
        <function-ref name="clr" scoped="" ref="0x73651232ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x736512317200" loc="85:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x736512317200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512317580"/>
        <function-ref name="isInput" scoped="" ref="0x736512317710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123178a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512317a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512317bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512317d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512316020"/>
        <function-ref name="get" scoped="" ref="0x7365123161b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512316340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123164d0"/>
        <function-ref name="set" scoped="" ref="0x736512316660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123167f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512316980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512316c10"/>
        <function-ref name="clr" scoped="" ref="0x736512316da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x736512302200" loc="98:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x736512302200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512302580"/>
        <function-ref name="isInput" scoped="" ref="0x736512302710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123028a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512302a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512302bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512302d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512301020"/>
        <function-ref name="get" scoped="" ref="0x7365123011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512301340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123014d0"/>
        <function-ref name="set" scoped="" ref="0x736512301660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512301980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512301c10"/>
        <function-ref name="clr" scoped="" ref="0x736512301da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7365122f2200" loc="109:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7365122f2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122f2580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122f2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122f28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122f2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122f2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122f2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122f1020"/>
        <function-ref name="get" scoped="" ref="0x7365122f11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122f1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122f14d0"/>
        <function-ref name="set" scoped="" ref="0x7365122f1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122f17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122f1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122f1c10"/>
        <function-ref name="clr" scoped="" ref="0x7365122f1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7365122d7580" loc="154:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7365122d7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122d7900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122d7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122d7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122d7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122d6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122d6340"/>
        <function-ref name="get" scoped="" ref="0x7365122d64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122d6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122d67f0"/>
        <function-ref name="set" scoped="" ref="0x7365122d6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122d6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122d6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122d5020"/>
        <function-ref name="clr" scoped="" ref="0x7365122d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7365123570a0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7365123570a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512357420"/>
        <function-ref name="isInput" scoped="" ref="0x7365123575b0"/>
        <function-ref name="setResistor" scoped="" ref="0x736512357740"/>
        <function-ref name="toggle" scoped="" ref="0x7365123578d0"/>
        <function-ref name="isOutput" scoped="" ref="0x736512357a60"/>
        <function-ref name="getResistor" scoped="" ref="0x736512357bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512357d80"/>
        <function-ref name="get" scoped="" ref="0x736512356020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512356340"/>
        <function-ref name="set" scoped="" ref="0x7365123564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512356660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512356a80"/>
        <function-ref name="clr" scoped="" ref="0x736512356c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x736512339020" loc="62:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x736512339020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123393a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512339530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123396c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512339850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512339b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512339d00"/>
        <function-ref name="get" scoped="" ref="0x736512338020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512338340"/>
        <function-ref name="set" scoped="" ref="0x7365123384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512338660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512338a80"/>
        <function-ref name="clr" scoped="" ref="0x736512338c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x736512325020" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x736512325020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123253a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512325530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123256c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512325850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512325b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512325d00"/>
        <function-ref name="get" scoped="" ref="0x736512324020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512324340"/>
        <function-ref name="set" scoped="" ref="0x7365123244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512324660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512324a80"/>
        <function-ref name="clr" scoped="" ref="0x736512324c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x736512311200" loc="88:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x736512311200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512311580"/>
        <function-ref name="isInput" scoped="" ref="0x736512311710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123118a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512311a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512311bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512311d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512310020"/>
        <function-ref name="get" scoped="" ref="0x7365123101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512310340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123104d0"/>
        <function-ref name="set" scoped="" ref="0x736512310660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123107f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512310980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512310c10"/>
        <function-ref name="clr" scoped="" ref="0x736512310da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7365122d3580" loc="156:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7365122d3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122d3900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122d3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122d3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122d3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122d2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122d2340"/>
        <function-ref name="get" scoped="" ref="0x7365122d24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122d2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122d27f0"/>
        <function-ref name="set" scoped="" ref="0x7365122d2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122d2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122d2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122d1020"/>
        <function-ref name="clr" scoped="" ref="0x7365122d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7365122cd570" loc="160:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7365122cd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122cd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122cda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122cdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122cdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122cc340"/>
        <function-ref name="get" scoped="" ref="0x7365122cc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122cc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122cc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122ccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122ccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122cb020"/>
        <function-ref name="clr" scoped="" ref="0x7365122cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7365122c1570" loc="166:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7365122c1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122c18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122c1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122c1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122c1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122c0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122c01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122c0340"/>
        <function-ref name="get" scoped="" ref="0x7365122c04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122c0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122c07f0"/>
        <function-ref name="set" scoped="" ref="0x7365122c0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122c0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122c0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122bf020"/>
        <function-ref name="clr" scoped="" ref="0x7365122bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x73651230c200" loc="93:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x73651230c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651230c580"/>
        <function-ref name="isInput" scoped="" ref="0x73651230c710"/>
        <function-ref name="setResistor" scoped="" ref="0x73651230c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651230ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x73651230cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651230cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651230b020"/>
        <function-ref name="get" scoped="" ref="0x73651230b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651230b340"/>
        <function-ref name="getRaw" scoped="" ref="0x73651230b4d0"/>
        <function-ref name="set" scoped="" ref="0x73651230b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651230b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651230b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651230bc10"/>
        <function-ref name="clr" scoped="" ref="0x73651230bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7365122d1580" loc="157:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7365122d1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122d1900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122d1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122d1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122d1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122d0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122d0340"/>
        <function-ref name="get" scoped="" ref="0x7365122d04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122d0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122d07f0"/>
        <function-ref name="set" scoped="" ref="0x7365122d0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122d0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122d0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122cf020"/>
        <function-ref name="clr" scoped="" ref="0x7365122cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x736512348020" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x736512348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123483a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512348530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123486c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512348850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123489e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512348b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512348d00"/>
        <function-ref name="get" scoped="" ref="0x736512347020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512347340"/>
        <function-ref name="set" scoped="" ref="0x7365123474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512347660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512347a80"/>
        <function-ref name="clr" scoped="" ref="0x736512347c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x736512333020" loc="65:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x736512333020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123333a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512333530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123336c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512333850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512333b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512333d00"/>
        <function-ref name="get" scoped="" ref="0x736512332020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512332340"/>
        <function-ref name="set" scoped="" ref="0x7365123324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512332660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512332a80"/>
        <function-ref name="clr" scoped="" ref="0x736512332c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x73651231f020" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x73651231f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651231f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651231f530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651231f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651231f850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651231f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651231fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651231fd00"/>
        <function-ref name="get" scoped="" ref="0x73651231e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651231e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651231e340"/>
        <function-ref name="set" scoped="" ref="0x73651231e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651231e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651231e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651231ea80"/>
        <function-ref name="clr" scoped="" ref="0x73651231ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7365122d9580" loc="153:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7365122d9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122d9900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122d9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122d9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122d9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122d8340"/>
        <function-ref name="get" scoped="" ref="0x7365122d84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122d8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122d87f0"/>
        <function-ref name="set" scoped="" ref="0x7365122d8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122d8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122d8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122d7020"/>
        <function-ref name="clr" scoped="" ref="0x7365122d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7365122c5570" loc="164:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7365122c5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122c58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122c5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122c5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122c5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122c4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122c41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122c4340"/>
        <function-ref name="get" scoped="" ref="0x7365122c44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122c4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122c47f0"/>
        <function-ref name="set" scoped="" ref="0x7365122c4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122c4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122c4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122c3020"/>
        <function-ref name="clr" scoped="" ref="0x7365122c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x73651231b200" loc="83:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x73651231b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651231b580"/>
        <function-ref name="isInput" scoped="" ref="0x73651231b710"/>
        <function-ref name="setResistor" scoped="" ref="0x73651231b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651231ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x73651231bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651231bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651231a020"/>
        <function-ref name="get" scoped="" ref="0x73651231a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651231a340"/>
        <function-ref name="getRaw" scoped="" ref="0x73651231a4d0"/>
        <function-ref name="set" scoped="" ref="0x73651231a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651231a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651231a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651231ac10"/>
        <function-ref name="clr" scoped="" ref="0x73651231ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x736512306200" loc="96:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x736512306200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512306580"/>
        <function-ref name="isInput" scoped="" ref="0x736512306710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123068a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512306a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512306bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512306d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512305020"/>
        <function-ref name="get" scoped="" ref="0x7365123051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512305340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123054d0"/>
        <function-ref name="set" scoped="" ref="0x736512305660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512305980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512305c10"/>
        <function-ref name="clr" scoped="" ref="0x736512305da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7365122f6200" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7365122f6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122f6580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122f6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122f68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122f6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122f6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122f6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122f5020"/>
        <function-ref name="get" scoped="" ref="0x7365122f51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122f5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122f54d0"/>
        <function-ref name="set" scoped="" ref="0x7365122f5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122f57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122f5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122f5c10"/>
        <function-ref name="clr" scoped="" ref="0x7365122f5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x736512342020" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x736512342020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123423a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512342530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123426c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512342850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512342b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512342d00"/>
        <function-ref name="get" scoped="" ref="0x736512341020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512341340"/>
        <function-ref name="set" scoped="" ref="0x7365123414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512341660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512341a80"/>
        <function-ref name="clr" scoped="" ref="0x736512341c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7365122fa200" loc="105:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7365122fa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122fa580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122fa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122fa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122faa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122fabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122fad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122f9020"/>
        <function-ref name="get" scoped="" ref="0x7365122f91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122f9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122f94d0"/>
        <function-ref name="set" scoped="" ref="0x7365122f9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122f97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122f9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122f9c10"/>
        <function-ref name="clr" scoped="" ref="0x7365122f9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x73651233d020" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x73651233d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651233d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651233d530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651233d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651233d850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651233d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651233db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651233dd00"/>
        <function-ref name="get" scoped="" ref="0x73651233c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651233c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651233c340"/>
        <function-ref name="set" scoped="" ref="0x73651233c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651233c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651233c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651233ca80"/>
        <function-ref name="clr" scoped="" ref="0x73651233cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x736512329020" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x736512329020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123293a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512329530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123296c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512329850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512329b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512329d00"/>
        <function-ref name="get" scoped="" ref="0x736512328020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512328340"/>
        <function-ref name="set" scoped="" ref="0x7365123284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512328660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512328a80"/>
        <function-ref name="clr" scoped="" ref="0x736512328c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x736512315200" loc="86:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x736512315200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512315580"/>
        <function-ref name="isInput" scoped="" ref="0x736512315710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123158a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512315a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512315bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512315d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512314020"/>
        <function-ref name="get" scoped="" ref="0x7365123141b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512314340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123144d0"/>
        <function-ref name="set" scoped="" ref="0x736512314660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123147f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512314980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512314c10"/>
        <function-ref name="clr" scoped="" ref="0x736512314da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x736512300200" loc="99:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x736512300200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512300580"/>
        <function-ref name="isInput" scoped="" ref="0x736512300710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123008a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512300a30"/>
        <function-ref name="isOutput" scoped="" ref="0x736512300bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512300d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122ff020"/>
        <function-ref name="get" scoped="" ref="0x7365122ff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122ff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122ff4d0"/>
        <function-ref name="set" scoped="" ref="0x7365122ff660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122ff7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122ff980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122ffc10"/>
        <function-ref name="clr" scoped="" ref="0x7365122ffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7365122f0200" loc="110:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7365122f0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122f0580"/>
        <function-ref name="isInput" scoped="" ref="0x7365122f0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122f08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365122f0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122f0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122f0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122ef020"/>
        <function-ref name="get" scoped="" ref="0x7365122ef1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122ef340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122ef4d0"/>
        <function-ref name="set" scoped="" ref="0x7365122ef660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122ef7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122ef980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122efc10"/>
        <function-ref name="clr" scoped="" ref="0x7365122efda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x73651234c020" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x73651234c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651234c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x73651234c530"/>
        <function-ref name="setResistor" scoped="" ref="0x73651234c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x73651234c850"/>
        <function-ref name="isOutput" scoped="" ref="0x73651234c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651234cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651234cd00"/>
        <function-ref name="get" scoped="" ref="0x73651234b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651234b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651234b340"/>
        <function-ref name="set" scoped="" ref="0x73651234b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651234b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651234b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651234ba80"/>
        <function-ref name="clr" scoped="" ref="0x73651234bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x736512337020" loc="63:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x736512337020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123373a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512337530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123376c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512337850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512337b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512337d00"/>
        <function-ref name="get" scoped="" ref="0x736512336020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512336340"/>
        <function-ref name="set" scoped="" ref="0x7365123364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512336660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512336a80"/>
        <function-ref name="clr" scoped="" ref="0x736512336c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x736512323020" loc="76:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x736512323020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365123233a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512323530"/>
        <function-ref name="setResistor" scoped="" ref="0x7365123236c0"/>
        <function-ref name="toggle" scoped="" ref="0x736512323850"/>
        <function-ref name="isOutput" scoped="" ref="0x7365123239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512323b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512323d00"/>
        <function-ref name="get" scoped="" ref="0x736512322020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365123221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512322340"/>
        <function-ref name="set" scoped="" ref="0x7365123224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512322660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365123227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512322a80"/>
        <function-ref name="clr" scoped="" ref="0x736512322c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x73651230e200" loc="89:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x73651230e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651230e580"/>
        <function-ref name="isInput" scoped="" ref="0x73651230e710"/>
        <function-ref name="setResistor" scoped="" ref="0x73651230e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651230ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x73651230ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651230ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651230d020"/>
        <function-ref name="get" scoped="" ref="0x73651230d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651230d340"/>
        <function-ref name="getRaw" scoped="" ref="0x73651230d4d0"/>
        <function-ref name="set" scoped="" ref="0x73651230d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651230d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651230d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651230dc10"/>
        <function-ref name="clr" scoped="" ref="0x73651230dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7365122e2560" loc="148:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7365122e2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122e28e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122e2a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122e2c00"/>
        <function-ref name="toggle" scoped="" ref="0x7365122e2d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122e1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122e1340"/>
        <function-ref name="get" scoped="" ref="0x7365122e14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122e1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122e17f0"/>
        <function-ref name="set" scoped="" ref="0x7365122e1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122e1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122e1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122e0020"/>
        <function-ref name="clr" scoped="" ref="0x7365122e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7365122cb570" loc="161:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7365122cb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122cb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122cba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122cbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122cbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122ca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122ca340"/>
        <function-ref name="get" scoped="" ref="0x7365122ca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122ca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122ca7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122ca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122cab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122caca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122c9020"/>
        <function-ref name="clr" scoped="" ref="0x7365122c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7365122e4580" loc="147:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7365122e4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122e4900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122e4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122e4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122e4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122e3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122e3340"/>
        <function-ref name="get" scoped="" ref="0x7365122e34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122e3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122e37f0"/>
        <function-ref name="set" scoped="" ref="0x7365122e3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122e3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122e3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122e2020"/>
        <function-ref name="clr" scoped="" ref="0x7365122e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x73651230a200" loc="94:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x73651230a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651230a580"/>
        <function-ref name="isInput" scoped="" ref="0x73651230a710"/>
        <function-ref name="setResistor" scoped="" ref="0x73651230a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651230aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x73651230abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651230ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512309020"/>
        <function-ref name="get" scoped="" ref="0x7365123091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512309340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365123094d0"/>
        <function-ref name="set" scoped="" ref="0x736512309660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365123097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512309980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512309c10"/>
        <function-ref name="clr" scoped="" ref="0x736512309da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7365122bf570" loc="168:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7365122bf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122bf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7365122bfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122bfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7365122bfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122be020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122be340"/>
        <function-ref name="get" scoped="" ref="0x7365122be4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122be660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122be7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122be980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122beb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122beca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122bd020"/>
        <function-ref name="clr" scoped="" ref="0x7365122bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7365122b9580" loc="172:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7365122b9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122b9900"/>
        <function-ref name="isInput" scoped="" ref="0x7365122b9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122b9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7365122b9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122b8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122b8340"/>
        <function-ref name="get" scoped="" ref="0x7365122b84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122b8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122b87f0"/>
        <function-ref name="set" scoped="" ref="0x7365122b8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122b8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122b8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122b7020"/>
        <function-ref name="clr" scoped="" ref="0x7365122b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7365122ec1f0" loc="143:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7365122ec1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122ec970"/>
        <function-ref name="isInput" scoped="" ref="0x7365122ecb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122ecc90"/>
        <function-ref name="toggle" scoped="" ref="0x7365122ece20"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122eb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122eb340"/>
        <function-ref name="get" scoped="" ref="0x7365122eb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122eb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7365122eb7f0"/>
        <function-ref name="set" scoped="" ref="0x7365122eb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365122ebb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122ebca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122ea020"/>
        <function-ref name="clr" scoped="" ref="0x7365122ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651228e6d0" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651228e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651228ea50"/>
        <function-ref name="isInput" scoped="" ref="0x73651228ebe0"/>
        <function-ref name="setResistor" scoped="" ref="0x73651228ed70"/>
        <function-ref name="toggle" scoped="" ref="0x73651228c020"/>
        <function-ref name="isOutput" scoped="" ref="0x73651228c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651228c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651228c4d0"/>
        <function-ref name="get" scoped="" ref="0x73651228c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651228c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651228c980"/>
        <function-ref name="set" scoped="" ref="0x73651228cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651228cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651228ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651228b120"/>
        <function-ref name="clr" scoped="" ref="0x73651228b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512288100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512288100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512288480"/>
        <function-ref name="isInput" scoped="" ref="0x736512288610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122887a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512288930"/>
        <function-ref name="isOutput" scoped="" ref="0x736512288ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512288c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512288de0"/>
        <function-ref name="get" scoped="" ref="0x736512287020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512287340"/>
        <function-ref name="set" scoped="" ref="0x7365122874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512287660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512287a80"/>
        <function-ref name="clr" scoped="" ref="0x736512287c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512284d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512284d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122830e0"/>
        <function-ref name="isInput" scoped="" ref="0x736512283270"/>
        <function-ref name="setResistor" scoped="" ref="0x736512283400"/>
        <function-ref name="toggle" scoped="" ref="0x736512283590"/>
        <function-ref name="isOutput" scoped="" ref="0x736512283720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122838b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512283a40"/>
        <function-ref name="get" scoped="" ref="0x736512283bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512283d60"/>
        <function-ref name="getRaw" scoped="" ref="0x736512282020"/>
        <function-ref name="set" scoped="" ref="0x7365122821b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512282340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122824d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512282760"/>
        <function-ref name="clr" scoped="" ref="0x7365122828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651227f740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651227f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651227fac0"/>
        <function-ref name="isInput" scoped="" ref="0x73651227fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x73651227fde0"/>
        <function-ref name="toggle" scoped="" ref="0x73651227e020"/>
        <function-ref name="isOutput" scoped="" ref="0x73651227e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651227e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651227e4d0"/>
        <function-ref name="get" scoped="" ref="0x73651227e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651227e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651227e980"/>
        <function-ref name="set" scoped="" ref="0x73651227eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651227eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651227ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651227d120"/>
        <function-ref name="clr" scoped="" ref="0x73651227d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651227a100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651227a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651227a480"/>
        <function-ref name="isInput" scoped="" ref="0x73651227a610"/>
        <function-ref name="setResistor" scoped="" ref="0x73651227a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651227a930"/>
        <function-ref name="isOutput" scoped="" ref="0x73651227aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651227ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651227ade0"/>
        <function-ref name="get" scoped="" ref="0x736512279020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512279340"/>
        <function-ref name="set" scoped="" ref="0x7365122794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512279660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512279a80"/>
        <function-ref name="clr" scoped="" ref="0x736512279c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512276d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512276d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122750e0"/>
        <function-ref name="isInput" scoped="" ref="0x736512275270"/>
        <function-ref name="setResistor" scoped="" ref="0x736512275400"/>
        <function-ref name="toggle" scoped="" ref="0x736512275590"/>
        <function-ref name="isOutput" scoped="" ref="0x736512275720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122758b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512275a40"/>
        <function-ref name="get" scoped="" ref="0x736512275bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512275d60"/>
        <function-ref name="getRaw" scoped="" ref="0x736512274020"/>
        <function-ref name="set" scoped="" ref="0x7365122741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512274340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512274760"/>
        <function-ref name="clr" scoped="" ref="0x7365122748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512271740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512271740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512271ac0"/>
        <function-ref name="isInput" scoped="" ref="0x736512271c50"/>
        <function-ref name="setResistor" scoped="" ref="0x736512271de0"/>
        <function-ref name="toggle" scoped="" ref="0x736512270020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512270340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122704d0"/>
        <function-ref name="get" scoped="" ref="0x736512270660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122707f0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512270980"/>
        <function-ref name="set" scoped="" ref="0x736512270b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512270ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512270e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651226f120"/>
        <function-ref name="clr" scoped="" ref="0x73651226f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651226c100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651226c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651226c480"/>
        <function-ref name="isInput" scoped="" ref="0x73651226c610"/>
        <function-ref name="setResistor" scoped="" ref="0x73651226c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651226c930"/>
        <function-ref name="isOutput" scoped="" ref="0x73651226cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651226cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651226cde0"/>
        <function-ref name="get" scoped="" ref="0x73651226b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651226b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651226b340"/>
        <function-ref name="set" scoped="" ref="0x73651226b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651226b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651226b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651226ba80"/>
        <function-ref name="clr" scoped="" ref="0x73651226bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512267d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512267d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122660e0"/>
        <function-ref name="isInput" scoped="" ref="0x736512266270"/>
        <function-ref name="setResistor" scoped="" ref="0x736512266400"/>
        <function-ref name="toggle" scoped="" ref="0x736512266590"/>
        <function-ref name="isOutput" scoped="" ref="0x736512266720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122668b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512266a40"/>
        <function-ref name="get" scoped="" ref="0x736512266bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512266d60"/>
        <function-ref name="getRaw" scoped="" ref="0x736512265020"/>
        <function-ref name="set" scoped="" ref="0x7365122651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512265340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512265760"/>
        <function-ref name="clr" scoped="" ref="0x7365122658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512262740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512262740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512262ac0"/>
        <function-ref name="isInput" scoped="" ref="0x736512262c50"/>
        <function-ref name="setResistor" scoped="" ref="0x736512262de0"/>
        <function-ref name="toggle" scoped="" ref="0x736512261020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122611b0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512261340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122614d0"/>
        <function-ref name="get" scoped="" ref="0x736512261660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122617f0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512261980"/>
        <function-ref name="set" scoped="" ref="0x736512261b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512261ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512261e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512260120"/>
        <function-ref name="clr" scoped="" ref="0x7365122602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651225d100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651225d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651225d480"/>
        <function-ref name="isInput" scoped="" ref="0x73651225d610"/>
        <function-ref name="setResistor" scoped="" ref="0x73651225d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651225d930"/>
        <function-ref name="isOutput" scoped="" ref="0x73651225dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651225dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651225dde0"/>
        <function-ref name="get" scoped="" ref="0x73651225c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651225c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651225c340"/>
        <function-ref name="set" scoped="" ref="0x73651225c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651225c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651225c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651225ca80"/>
        <function-ref name="clr" scoped="" ref="0x73651225cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512259d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512259d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122580e0"/>
        <function-ref name="isInput" scoped="" ref="0x736512258270"/>
        <function-ref name="setResistor" scoped="" ref="0x736512258400"/>
        <function-ref name="toggle" scoped="" ref="0x736512258590"/>
        <function-ref name="isOutput" scoped="" ref="0x736512258720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122588b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512258a40"/>
        <function-ref name="get" scoped="" ref="0x736512258bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512258d60"/>
        <function-ref name="getRaw" scoped="" ref="0x736512257020"/>
        <function-ref name="set" scoped="" ref="0x7365122571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512257340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512257760"/>
        <function-ref name="clr" scoped="" ref="0x7365122578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512254860" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512254860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512254be0"/>
        <function-ref name="isInput" scoped="" ref="0x736512254d70"/>
        <function-ref name="setResistor" scoped="" ref="0x736512253020"/>
        <function-ref name="toggle" scoped="" ref="0x7365122531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x736512253340"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512253660"/>
        <function-ref name="get" scoped="" ref="0x7365122537f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512253980"/>
        <function-ref name="getRaw" scoped="" ref="0x736512253b10"/>
        <function-ref name="set" scoped="" ref="0x736512253ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512253e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512252020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365122522b0"/>
        <function-ref name="clr" scoped="" ref="0x736512252440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651224f270" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651224f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651224f5f0"/>
        <function-ref name="isInput" scoped="" ref="0x73651224f780"/>
        <function-ref name="setResistor" scoped="" ref="0x73651224f910"/>
        <function-ref name="toggle" scoped="" ref="0x73651224faa0"/>
        <function-ref name="isOutput" scoped="" ref="0x73651224fc30"/>
        <function-ref name="getResistor" scoped="" ref="0x73651224fdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651224e020"/>
        <function-ref name="get" scoped="" ref="0x73651224e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651224e340"/>
        <function-ref name="getRaw" scoped="" ref="0x73651224e4d0"/>
        <function-ref name="set" scoped="" ref="0x73651224e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651224e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651224e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651224ec10"/>
        <function-ref name="clr" scoped="" ref="0x73651224eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651224bd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651224bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651224a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x73651224a270"/>
        <function-ref name="setResistor" scoped="" ref="0x73651224a400"/>
        <function-ref name="toggle" scoped="" ref="0x73651224a590"/>
        <function-ref name="isOutput" scoped="" ref="0x73651224a720"/>
        <function-ref name="getResistor" scoped="" ref="0x73651224a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651224aa40"/>
        <function-ref name="get" scoped="" ref="0x73651224abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651224ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x736512249020"/>
        <function-ref name="set" scoped="" ref="0x7365122491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512249340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512249760"/>
        <function-ref name="clr" scoped="" ref="0x7365122498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512246740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512246740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512246ac0"/>
        <function-ref name="isInput" scoped="" ref="0x736512246c50"/>
        <function-ref name="setResistor" scoped="" ref="0x736512246de0"/>
        <function-ref name="toggle" scoped="" ref="0x736512244020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512244340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122444d0"/>
        <function-ref name="get" scoped="" ref="0x736512244660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122447f0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512244980"/>
        <function-ref name="set" scoped="" ref="0x736512244b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512244ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512244e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512243120"/>
        <function-ref name="clr" scoped="" ref="0x7365122432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512240100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512240100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512240480"/>
        <function-ref name="isInput" scoped="" ref="0x736512240610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122407a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512240930"/>
        <function-ref name="isOutput" scoped="" ref="0x736512240ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512240c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512240de0"/>
        <function-ref name="get" scoped="" ref="0x73651223f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651223f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651223f340"/>
        <function-ref name="set" scoped="" ref="0x73651223f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651223f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651223f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651223fa80"/>
        <function-ref name="clr" scoped="" ref="0x73651223fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651223cd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651223cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651223b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x73651223b270"/>
        <function-ref name="setResistor" scoped="" ref="0x73651223b400"/>
        <function-ref name="toggle" scoped="" ref="0x73651223b590"/>
        <function-ref name="isOutput" scoped="" ref="0x73651223b720"/>
        <function-ref name="getResistor" scoped="" ref="0x73651223b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651223ba40"/>
        <function-ref name="get" scoped="" ref="0x73651223bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651223bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x73651223a020"/>
        <function-ref name="set" scoped="" ref="0x73651223a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651223a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651223a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651223a760"/>
        <function-ref name="clr" scoped="" ref="0x73651223a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512237740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512237740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512237ac0"/>
        <function-ref name="isInput" scoped="" ref="0x736512237c50"/>
        <function-ref name="setResistor" scoped="" ref="0x736512237de0"/>
        <function-ref name="toggle" scoped="" ref="0x736512236020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512236340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122364d0"/>
        <function-ref name="get" scoped="" ref="0x736512236660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122367f0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512236980"/>
        <function-ref name="set" scoped="" ref="0x736512236b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512236ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512236e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512235120"/>
        <function-ref name="clr" scoped="" ref="0x7365122352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512232100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512232100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512232480"/>
        <function-ref name="isInput" scoped="" ref="0x736512232610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122327a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512232930"/>
        <function-ref name="isOutput" scoped="" ref="0x736512232ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512232c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512232de0"/>
        <function-ref name="get" scoped="" ref="0x736512231020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512231340"/>
        <function-ref name="set" scoped="" ref="0x7365122314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512231660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512231a80"/>
        <function-ref name="clr" scoped="" ref="0x736512231c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651222ed10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651222ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651222d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x73651222d270"/>
        <function-ref name="setResistor" scoped="" ref="0x73651222d400"/>
        <function-ref name="toggle" scoped="" ref="0x73651222d590"/>
        <function-ref name="isOutput" scoped="" ref="0x73651222d720"/>
        <function-ref name="getResistor" scoped="" ref="0x73651222d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651222da40"/>
        <function-ref name="get" scoped="" ref="0x73651222dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651222dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x73651222c020"/>
        <function-ref name="set" scoped="" ref="0x73651222c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651222c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651222c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651222c760"/>
        <function-ref name="clr" scoped="" ref="0x73651222c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512229740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512229740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512229ac0"/>
        <function-ref name="isInput" scoped="" ref="0x736512229c50"/>
        <function-ref name="setResistor" scoped="" ref="0x736512229de0"/>
        <function-ref name="toggle" scoped="" ref="0x736512228020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512228340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122284d0"/>
        <function-ref name="get" scoped="" ref="0x736512228660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512228980"/>
        <function-ref name="set" scoped="" ref="0x736512228b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512228ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512228e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512227120"/>
        <function-ref name="clr" scoped="" ref="0x7365122272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512224100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512224100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512224480"/>
        <function-ref name="isInput" scoped="" ref="0x736512224610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122247a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512224930"/>
        <function-ref name="isOutput" scoped="" ref="0x736512224ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512224c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512224de0"/>
        <function-ref name="get" scoped="" ref="0x736512223020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512223340"/>
        <function-ref name="set" scoped="" ref="0x7365122234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512223660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512223a80"/>
        <function-ref name="clr" scoped="" ref="0x736512223c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512220d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512220d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651221e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x73651221e270"/>
        <function-ref name="setResistor" scoped="" ref="0x73651221e400"/>
        <function-ref name="toggle" scoped="" ref="0x73651221e590"/>
        <function-ref name="isOutput" scoped="" ref="0x73651221e720"/>
        <function-ref name="getResistor" scoped="" ref="0x73651221e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651221ea40"/>
        <function-ref name="get" scoped="" ref="0x73651221ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651221ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x73651221d020"/>
        <function-ref name="set" scoped="" ref="0x73651221d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651221d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651221d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651221d760"/>
        <function-ref name="clr" scoped="" ref="0x73651221d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651221aa60" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651221aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651221ade0"/>
        <function-ref name="isInput" scoped="" ref="0x736512219020"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122191b0"/>
        <function-ref name="toggle" scoped="" ref="0x736512219340"/>
        <function-ref name="isOutput" scoped="" ref="0x7365122194d0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512219660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122197f0"/>
        <function-ref name="get" scoped="" ref="0x736512219980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512219b10"/>
        <function-ref name="getRaw" scoped="" ref="0x736512219ca0"/>
        <function-ref name="set" scoped="" ref="0x736512219e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512218020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122181b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512218440"/>
        <function-ref name="clr" scoped="" ref="0x7365122185d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512215460" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512215460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122157e0"/>
        <function-ref name="isInput" scoped="" ref="0x736512215970"/>
        <function-ref name="setResistor" scoped="" ref="0x736512215b00"/>
        <function-ref name="toggle" scoped="" ref="0x736512215c90"/>
        <function-ref name="isOutput" scoped="" ref="0x736512215e20"/>
        <function-ref name="getResistor" scoped="" ref="0x736512214020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365122141b0"/>
        <function-ref name="get" scoped="" ref="0x736512214340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122144d0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512214660"/>
        <function-ref name="set" scoped="" ref="0x7365122147f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512214980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512214b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512214da0"/>
        <function-ref name="clr" scoped="" ref="0x736512213020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512211e00" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512211e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122101c0"/>
        <function-ref name="isInput" scoped="" ref="0x736512210350"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122104e0"/>
        <function-ref name="toggle" scoped="" ref="0x736512210670"/>
        <function-ref name="isOutput" scoped="" ref="0x736512210800"/>
        <function-ref name="getResistor" scoped="" ref="0x736512210990"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512210b20"/>
        <function-ref name="get" scoped="" ref="0x736512210cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512210e40"/>
        <function-ref name="getRaw" scoped="" ref="0x73651220f020"/>
        <function-ref name="set" scoped="" ref="0x73651220f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651220f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651220f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651220f760"/>
        <function-ref name="clr" scoped="" ref="0x73651220f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x73651220c740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x73651220c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651220cac0"/>
        <function-ref name="isInput" scoped="" ref="0x73651220cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x73651220cde0"/>
        <function-ref name="toggle" scoped="" ref="0x73651220b020"/>
        <function-ref name="isOutput" scoped="" ref="0x73651220b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651220b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651220b4d0"/>
        <function-ref name="get" scoped="" ref="0x73651220b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651220b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x73651220b980"/>
        <function-ref name="set" scoped="" ref="0x73651220bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651220bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651220be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651220a120"/>
        <function-ref name="clr" scoped="" ref="0x73651220a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512207100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512207100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512207480"/>
        <function-ref name="isInput" scoped="" ref="0x736512207610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365122077a0"/>
        <function-ref name="toggle" scoped="" ref="0x736512207930"/>
        <function-ref name="isOutput" scoped="" ref="0x736512207ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512207c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512207de0"/>
        <function-ref name="get" scoped="" ref="0x736512206020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365122061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736512206340"/>
        <function-ref name="set" scoped="" ref="0x7365122064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512206660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512206a80"/>
        <function-ref name="clr" scoped="" ref="0x736512206c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x736512203d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x736512203d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365122020e0"/>
        <function-ref name="isInput" scoped="" ref="0x736512202270"/>
        <function-ref name="setResistor" scoped="" ref="0x736512202400"/>
        <function-ref name="toggle" scoped="" ref="0x736512202590"/>
        <function-ref name="isOutput" scoped="" ref="0x736512202720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365122028b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512202a40"/>
        <function-ref name="get" scoped="" ref="0x736512202bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512202d60"/>
        <function-ref name="getRaw" scoped="" ref="0x736512201020"/>
        <function-ref name="set" scoped="" ref="0x7365122011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512201340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365122014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512201760"/>
        <function-ref name="clr" scoped="" ref="0x7365122018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121fe740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121fe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121feac0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121fec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121fede0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121fd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7365121fd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121fd980"/>
        <function-ref name="set" scoped="" ref="0x7365121fdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121fdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121fde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121fc120"/>
        <function-ref name="clr" scoped="" ref="0x7365121fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121f8100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121f8480"/>
        <function-ref name="isInput" scoped="" ref="0x7365121f8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121f87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121f8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121f8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121f8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121f8de0"/>
        <function-ref name="get" scoped="" ref="0x7365121f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121f71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121f7340"/>
        <function-ref name="set" scoped="" ref="0x7365121f74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121f7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121f77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121f7a80"/>
        <function-ref name="clr" scoped="" ref="0x7365121f7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121f4d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121f4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121f30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121f3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121f3400"/>
        <function-ref name="toggle" scoped="" ref="0x7365121f3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121f3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121f38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121f3a40"/>
        <function-ref name="get" scoped="" ref="0x7365121f3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121f3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121f2020"/>
        <function-ref name="set" scoped="" ref="0x7365121f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121f2760"/>
        <function-ref name="clr" scoped="" ref="0x7365121f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121ef740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121efac0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121efc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121efde0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121ee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121ee4d0"/>
        <function-ref name="get" scoped="" ref="0x7365121ee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121ee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121ee980"/>
        <function-ref name="set" scoped="" ref="0x7365121eeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121eeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121eee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121ed120"/>
        <function-ref name="clr" scoped="" ref="0x7365121ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121ea100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121ea480"/>
        <function-ref name="isInput" scoped="" ref="0x7365121ea610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121ea7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121ea930"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121eaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121eac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121eade0"/>
        <function-ref name="get" scoped="" ref="0x7365121e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121e9340"/>
        <function-ref name="set" scoped="" ref="0x7365121e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121e9a80"/>
        <function-ref name="clr" scoped="" ref="0x7365121e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121e6d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121e6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121e50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121e5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121e5400"/>
        <function-ref name="toggle" scoped="" ref="0x7365121e5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121e5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121e58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121e5a40"/>
        <function-ref name="get" scoped="" ref="0x7365121e5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121e5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121e4020"/>
        <function-ref name="set" scoped="" ref="0x7365121e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121e4760"/>
        <function-ref name="clr" scoped="" ref="0x7365121e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121e1740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121e1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121e1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121e1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121e1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121e01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121e0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121e04d0"/>
        <function-ref name="get" scoped="" ref="0x7365121e0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121e07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121e0980"/>
        <function-ref name="set" scoped="" ref="0x7365121e0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121e0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121e0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121df120"/>
        <function-ref name="clr" scoped="" ref="0x7365121df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121dc100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121dc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121dc480"/>
        <function-ref name="isInput" scoped="" ref="0x7365121dc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121dc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121dc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121dcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121dcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121dcde0"/>
        <function-ref name="get" scoped="" ref="0x7365121db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121db1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121db340"/>
        <function-ref name="set" scoped="" ref="0x7365121db4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121db660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121db7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121dba80"/>
        <function-ref name="clr" scoped="" ref="0x7365121dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121d8d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121d8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121d60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121d6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121d6400"/>
        <function-ref name="toggle" scoped="" ref="0x7365121d6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121d6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121d68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121d6a40"/>
        <function-ref name="get" scoped="" ref="0x7365121d6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121d6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121d5020"/>
        <function-ref name="set" scoped="" ref="0x7365121d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121d5760"/>
        <function-ref name="clr" scoped="" ref="0x7365121d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121d2740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121d2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121d2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121d2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121d14d0"/>
        <function-ref name="get" scoped="" ref="0x7365121d1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121d17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121d1980"/>
        <function-ref name="set" scoped="" ref="0x7365121d1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121d1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121d1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121d0120"/>
        <function-ref name="clr" scoped="" ref="0x7365121d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121cd100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121cd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121cd480"/>
        <function-ref name="isInput" scoped="" ref="0x7365121cd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121cd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121cd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121cdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121cdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121cdde0"/>
        <function-ref name="get" scoped="" ref="0x7365121cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121cc340"/>
        <function-ref name="set" scoped="" ref="0x7365121cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121cca80"/>
        <function-ref name="clr" scoped="" ref="0x7365121ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121c9d10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121c9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121c80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121c8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121c8400"/>
        <function-ref name="toggle" scoped="" ref="0x7365121c8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121c8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121c88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121c8a40"/>
        <function-ref name="get" scoped="" ref="0x7365121c8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121c8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121c7020"/>
        <function-ref name="set" scoped="" ref="0x7365121c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121c7760"/>
        <function-ref name="clr" scoped="" ref="0x7365121c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121c4740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121c4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121c4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121c4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121c4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121c31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121c3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121c34d0"/>
        <function-ref name="get" scoped="" ref="0x7365121c3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121c37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121c3980"/>
        <function-ref name="set" scoped="" ref="0x7365121c3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121c3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121c3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121c2120"/>
        <function-ref name="clr" scoped="" ref="0x7365121c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121bf100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121bf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121bf480"/>
        <function-ref name="isInput" scoped="" ref="0x7365121bf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121bf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121bf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121bfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121bfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121bfde0"/>
        <function-ref name="get" scoped="" ref="0x7365121be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121be340"/>
        <function-ref name="set" scoped="" ref="0x7365121be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121bea80"/>
        <function-ref name="clr" scoped="" ref="0x7365121bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121bbd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121bbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121ba0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121ba270"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121ba400"/>
        <function-ref name="toggle" scoped="" ref="0x7365121ba590"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121ba720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121ba8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121baa40"/>
        <function-ref name="get" scoped="" ref="0x7365121babd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121bad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121b9020"/>
        <function-ref name="set" scoped="" ref="0x7365121b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121b9760"/>
        <function-ref name="clr" scoped="" ref="0x7365121b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121b6740" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121b6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121b6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121b6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121b6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121b5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121b54d0"/>
        <function-ref name="get" scoped="" ref="0x7365121b5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121b57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121b5980"/>
        <function-ref name="set" scoped="" ref="0x7365121b5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121b5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121b5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121b4120"/>
        <function-ref name="clr" scoped="" ref="0x7365121b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121b1100" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121b1480"/>
        <function-ref name="isInput" scoped="" ref="0x7365121b1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121b17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7365121b1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121b1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121b1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121b1de0"/>
        <function-ref name="get" scoped="" ref="0x7365121af020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121af1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121af340"/>
        <function-ref name="set" scoped="" ref="0x7365121af4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121af660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121af7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121afa80"/>
        <function-ref name="clr" scoped="" ref="0x7365121afc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7365121acd10" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7365121acd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121ab0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7365121ab270"/>
        <function-ref name="setResistor" scoped="" ref="0x7365121ab400"/>
        <function-ref name="toggle" scoped="" ref="0x7365121ab590"/>
        <function-ref name="isOutput" scoped="" ref="0x7365121ab720"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121ab8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365121aba40"/>
        <function-ref name="get" scoped="" ref="0x7365121abbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365121abd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121aa020"/>
        <function-ref name="set" scoped="" ref="0x7365121aa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121aa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365121aa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121aa760"/>
        <function-ref name="clr" scoped="" ref="0x7365121aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7365121332f0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7365121332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736512133670"/>
        <function-ref name="isInput" scoped="" ref="0x736512133800"/>
        <function-ref name="setResistor" scoped="" ref="0x736512133990"/>
        <function-ref name="toggle" scoped="" ref="0x736512133b20"/>
        <function-ref name="isOutput" scoped="" ref="0x736512133cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x736512133e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512132020"/>
        <function-ref name="get" scoped="" ref="0x7365121321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512132340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365121324d0"/>
        <function-ref name="set" scoped="" ref="0x736512132660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365121327f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512132980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736512132c10"/>
        <function-ref name="clr" scoped="" ref="0x736512132da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x736512144020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x736512144020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365121443a0"/>
        <function-ref name="isInput" scoped="" ref="0x736512144530"/>
        <function-ref name="toggle" scoped="" ref="0x7365121446c0"/>
        <function-ref name="isOutput" scoped="" ref="0x736512144850"/>
        <function-ref name="get" scoped="" ref="0x7365121449e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512144b70"/>
        <function-ref name="set" scoped="" ref="0x736512144d00"/>
        <function-ref name="clr" scoped="" ref="0x736512133020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x73651212fde0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x73651212fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651212e180"/>
        <function-ref name="isInput" scoped="" ref="0x73651212e310"/>
        <function-ref name="setResistor" scoped="" ref="0x73651212e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x73651212e630"/>
        <function-ref name="isOutput" scoped="" ref="0x73651212e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x73651212e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651212eae0"/>
        <function-ref name="get" scoped="" ref="0x73651212ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x73651212ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x73651212d020"/>
        <function-ref name="set" scoped="" ref="0x73651212d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x73651212d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x73651212d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x73651212d760"/>
        <function-ref name="clr" scoped="" ref="0x73651212d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x736512130b90" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x736512130b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651212f020"/>
        <function-ref name="isInput" scoped="" ref="0x73651212f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x73651212f340"/>
        <function-ref name="isOutput" scoped="" ref="0x73651212f4d0"/>
        <function-ref name="get" scoped="" ref="0x73651212f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651212f7f0"/>
        <function-ref name="set" scoped="" ref="0x73651212f980"/>
        <function-ref name="clr" scoped="" ref="0x73651212fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x73651212a930" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x73651212a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651212acb0"/>
        <function-ref name="isInput" scoped="" ref="0x73651212ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x736512129020"/>
        <function-ref name="toggle" scoped="" ref="0x7365121291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x736512129340"/>
        <function-ref name="getResistor" scoped="" ref="0x7365121294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736512129660"/>
        <function-ref name="get" scoped="" ref="0x7365121297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736512129980"/>
        <function-ref name="getRaw" scoped="" ref="0x736512129b10"/>
        <function-ref name="set" scoped="" ref="0x736512129ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736512129e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736512128020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365121282b0"/>
        <function-ref name="clr" scoped="" ref="0x736512128440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x73651212b710" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x73651212b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x73651212ba90"/>
        <function-ref name="isInput" scoped="" ref="0x73651212bc20"/>
        <function-ref name="toggle" scoped="" ref="0x73651212bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x73651212a020"/>
        <function-ref name="get" scoped="" ref="0x73651212a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x73651212a340"/>
        <function-ref name="set" scoped="" ref="0x73651212a4d0"/>
        <function-ref name="clr" scoped="" ref="0x73651212a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x736511f71370" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="LightTempSensorAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511f71370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511f6d870"/>
        <function-ref name="fired" scoped="" ref="0x736511f70e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511f6fc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511f6f780"/>
        <function-ref name="getdt" scoped="" ref="0x736511f6c1e0"/>
        <function-ref name="gett0" scoped="" ref="0x736511f6dcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x736511f6f300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511f70020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511f6d260"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511f704f0"/>
        <function-ref name="stop" scoped="" ref="0x736511f709c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x736512112610" loc="49:/home/tofu/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x736512112610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x73651210fc40"/>
        <function-ref name="fired" scoped="" ref="0x7365121101e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x73651210f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x736512110ae0"/>
        <function-ref name="getdt" scoped="" ref="0x73651210d590"/>
        <function-ref name="gett0" scoped="" ref="0x73651210d110"/>
        <function-ref name="isRunning" scoped="" ref="0x736512110660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736512111390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x73651210f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x736512111860"/>
        <function-ref name="stop" scoped="" ref="0x736512111d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7365121091d0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7365121091d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736512105630"/>
        <function-ref name="fired" scoped="" ref="0x736512108c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7365121069d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x736512106550"/>
        <function-ref name="getdt" scoped="" ref="0x736512104020"/>
        <function-ref name="gett0" scoped="" ref="0x736512105ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7365121060d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736512109dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736512105020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7365121082e0"/>
        <function-ref name="stop" scoped="" ref="0x7365121087b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x736512100a80" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x736512100a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7365121026f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x73651210a400" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651210a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651210a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x73651200d870" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x73651200d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x73651200a090"/>
        <function-ref name="fired" scoped="" ref="0x73651200b090"/>
        <function-ref name="startAt" scoped="" ref="0x73651200ba10"/>
        <function-ref name="isRunning" scoped="" ref="0x73651200b550"/>
        <function-ref name="getAlarm" scoped="" ref="0x73651200a550"/>
        <function-ref name="start" scoped="" ref="0x73651200c6a0"/>
        <function-ref name="stop" scoped="" ref="0x73651200cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x73651200d020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651200d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651200d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x736510e6fce0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736510e6fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510e6b670"/>
        <function-ref name="fired" scoped="" ref="0x736510e6c550"/>
        <function-ref name="startAt" scoped="" ref="0x736510e6b020"/>
        <function-ref name="isRunning" scoped="" ref="0x736510e6ca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510e6bb30"/>
        <function-ref name="start" scoped="" ref="0x736510e6db60"/>
        <function-ref name="stop" scoped="" ref="0x736510e6c090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736510e6f490" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736510e6f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736510e6f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x736510e555d0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x736510e555d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736510e55950"/>
        <function-ref name="setEvent" scoped="" ref="0x736510e55ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736510e55c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736510e55e00"/>
        <function-ref name="fired" scoped="" ref="0x736510e54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x736510e59c50" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x736510e59c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736510e57020"/>
        <function-ref name="setClockSource" scoped="" ref="0x736510e571b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510e57340"/>
        <function-ref name="get" scoped="" ref="0x736510e574d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510e57660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736510e577f0"/>
        <function-ref name="getMode" scoped="" ref="0x736510e57980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736510e57b10"/>
        <function-ref name="overflow" scoped="" ref="0x736510e57ca0"/>
        <function-ref name="setMode" scoped="" ref="0x736510e57e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736510e56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x736510e562b0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510e562b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736510e56630"/>
        <function-ref name="getControl" scoped="" ref="0x736510e567c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510e56950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736510e56ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736510e56c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510e56e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736510e55020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736510e551b0"/>
        <function-ref name="setControl" scoped="" ref="0x736510e55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7365120db020" loc="52:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7365120db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7365120db3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7365120db530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7365120db6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7365120db850"/>
        <function-ref name="fired" scoped="" ref="0x7365120db9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7365120e08b0" loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7365120e08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365120e0c30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7365120e0dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365120df020"/>
        <function-ref name="get" scoped="" ref="0x7365120df1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365120df340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365120df4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7365120df660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365120df7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7365120df980"/>
        <function-ref name="setMode" scoped="" ref="0x7365120dfb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7365120dfca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7365120de560" loc="51:/home/tofu/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7365120de560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7365120de8e0"/>
        <function-ref name="getControl" scoped="" ref="0x7365120dea70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7365120dec00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7365120ded90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7365120dd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7365120dd1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7365120dd340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7365120dd4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7365120dd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x736510e4b440" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x736510e4b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736510e4b7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x736510e4b950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736510e4bae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736510e4bc70"/>
        <function-ref name="fired" scoped="" ref="0x736510e4be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x736510e4e910" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x736510e4e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736510e4ec90"/>
        <function-ref name="setClockSource" scoped="" ref="0x736510e4ee20"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510e4d020"/>
        <function-ref name="get" scoped="" ref="0x736510e4d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510e4d340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736510e4d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x736510e4d660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736510e4d7f0"/>
        <function-ref name="overflow" scoped="" ref="0x736510e4d980"/>
        <function-ref name="setMode" scoped="" ref="0x736510e4db10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736510e4dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x736510e52720" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736510e52720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510e4e020"/>
        <function-ref name="fired" scoped="" ref="0x736510e50020"/>
        <function-ref name="startAt" scoped="" ref="0x736510e509a0"/>
        <function-ref name="isRunning" scoped="" ref="0x736510e504e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510e4e4e0"/>
        <function-ref name="start" scoped="" ref="0x736510e515b0"/>
        <function-ref name="stop" scoped="" ref="0x736510e51ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736510e53e60" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736510e53e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736510e52210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x736510e4c020" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736510e4c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x736510e4c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510e4c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736510e4c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736510e4c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510e4cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736510e4cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736510e4b020"/>
        <function-ref name="setControl" scoped="" ref="0x736510e4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x736512086900" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x736512086900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x73651208a780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512085150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651208ac40"/>
        <function-ref name="overflow" scoped="" ref="0x736512085610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x736512084990" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x736512084990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7365120817c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736512080170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736512081c80"/>
        <function-ref name="overflow" scoped="" ref="0x736512080630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x73651206fc50" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x73651206fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x73651206d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x73651206d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x73651206d340"/>
        <function-ref name="get" scoped="" ref="0x73651206d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x73651206d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651206d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x73651206d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651206db10"/>
        <function-ref name="overflow" scoped="" ref="0x73651206dca0"/>
        <function-ref name="setMode" scoped="" ref="0x73651206de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x73651206c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x73651207db80" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x73651207db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x73651207c9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651206f360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651207ce70"/>
        <function-ref name="overflow" scoped="" ref="0x73651206f820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x73651204b0f0" loc="63:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x73651204b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x73651204a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651204a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651204a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x73651204ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x736512069cf0" loc="62:/home/tofu/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x736512069cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x73651204eb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651204d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651204d090"/>
        <function-ref name="overflow" scoped="" ref="0x73651204da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x736510e68140" loc="61:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736510e68140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510e65b30"/>
        <function-ref name="fired" scoped="" ref="0x736510e679f0"/>
        <function-ref name="startAt" scoped="" ref="0x736510e654e0"/>
        <function-ref name="isRunning" scoped="" ref="0x736510e65020"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510e64020"/>
        <function-ref name="start" scoped="" ref="0x736510e67020"/>
        <function-ref name="stop" scoped="" ref="0x736510e67530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x736510e62b90" loc="73:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x736510e62b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510e5e4e0"/>
        <function-ref name="fired" scoped="" ref="0x736510e604e0"/>
        <function-ref name="startAt" scoped="" ref="0x736510e60e60"/>
        <function-ref name="isRunning" scoped="" ref="0x736510e609a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510e5e9a0"/>
        <function-ref name="start" scoped="" ref="0x736510e619d0"/>
        <function-ref name="stop" scoped="" ref="0x736510e60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x736510e64690" loc="68:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x736510e64690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x736510e635b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736510e62020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736510e63a70"/>
        <function-ref name="overflow" scoped="" ref="0x736510e624e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x736511fd89c0" loc="74:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x736511fd89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511fd8d40"/>
        <function-ref name="runTask" scoped="" ref="0x736511fd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x736511fdc850" loc="49:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736511fdc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511fd8090"/>
        <function-ref name="fired" scoped="" ref="0x736511fd9090"/>
        <function-ref name="startAt" scoped="" ref="0x736511fd9a10"/>
        <function-ref name="isRunning" scoped="" ref="0x736511fd9550"/>
        <function-ref name="getAlarm" scoped="" ref="0x736511fd8550"/>
        <function-ref name="start" scoped="" ref="0x736511fda6a0"/>
        <function-ref name="stop" scoped="" ref="0x736511fdabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x736511fe12f0" loc="48:/home/tofu/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511fe12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511fdd870"/>
        <function-ref name="fired" scoped="" ref="0x736511fe0e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511fdec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511fde780"/>
        <function-ref name="getdt" scoped="" ref="0x736511fdc1e0"/>
        <function-ref name="gett0" scoped="" ref="0x736511fddcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x736511fde300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511fe0020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511fdd260"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511fe04f0"/>
        <function-ref name="stop" scoped="" ref="0x736511fe09c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x736511f87a00" loc="71:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x736511f87a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511f87d80"/>
        <function-ref name="runTask" scoped="" ref="0x736511f85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x736511f8c640" loc="49:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x736511f8c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511f88c40"/>
        <function-ref name="fired" scoped="" ref="0x736511f891e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511f88020"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511f89ae0"/>
        <function-ref name="getdt" scoped="" ref="0x736511f87590"/>
        <function-ref name="gett0" scoped="" ref="0x736511f87110"/>
        <function-ref name="isRunning" scoped="" ref="0x736511f89660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511f8a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511f88630"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511f8a860"/>
        <function-ref name="stop" scoped="" ref="0x736511f8ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x736511f92150" loc="48:/home/tofu/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511f92150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511f8d700"/>
        <function-ref name="fired" scoped="" ref="0x736511f90c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511f8fa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511f8f5b0"/>
        <function-ref name="getdt" scoped="" ref="0x736511f8c090"/>
        <function-ref name="gett0" scoped="" ref="0x736511f8dba0"/>
        <function-ref name="isRunning" scoped="" ref="0x736511f8f110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511f92d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511f8d0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511f902a0"/>
        <function-ref name="stop" scoped="" ref="0x736511f90790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x736511f83790" loc="48:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x736511f83790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x736511f793f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x736511f79a60" loc="49:/home/tofu/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x736511f79a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x736511f78890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736511f77260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736511f78d50"/>
        <function-ref name="overflow" scoped="" ref="0x736511f77720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x736511f69750" loc="42:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x736511f69750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x736511b5e390"/>
        <function-ref name="readDone" scoped="" ref="0x736511b5e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x736511b5d020" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x736511b5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x736511b5bab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x736511b5dc10"/>
        <function-ref name="read" scoped="" ref="0x736511b5b5e0"/>
        <function-ref name="readDone" scoped="" ref="0x736511b5a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x736511f69020" loc="41:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x736511f69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x736511f693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x736510dd19a0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x736510dd19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x736510dd05c0"/>
        <function-ref name="readDone" scoped="" ref="0x736510dd0a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x736510dcf200" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x736510dcf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510dcfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x736511f28340" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x736511f28340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511f286c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511f28850"/>
        <function-ref name="request" scoped="" ref="0x736511f289e0"/>
        <function-ref name="granted" scoped="" ref="0x736511f28b70"/>
        <function-ref name="isOwner" scoped="" ref="0x736511f28d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x736511f37b10" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x736511f37b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x736511f35750"/>
        <function-ref name="readDone" scoped="" ref="0x736511f35bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x736511f30b10" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x736511f30b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x736511f33790"/>
        <function-ref name="readDone" scoped="" ref="0x736511f33c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x736511f2ac70" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x736511f2ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511f2e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511f2e1b0"/>
        <function-ref name="request" scoped="" ref="0x736511f2e340"/>
        <function-ref name="granted" scoped="" ref="0x736511f2e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x736511f2e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x736511f278e0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x736511f278e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736511f265a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x736511f15b10" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x736511f15b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736511f24020"/>
        <function-ref name="configureSingle" scoped="" ref="0x736511f241b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x736511f24340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x736511f244d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x736511f24660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x736511f247f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x736511f24980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x736511f29020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x736511f29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511f293a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511f29530"/>
        <function-ref name="request" scoped="" ref="0x736511f296c0"/>
        <function-ref name="granted" scoped="" ref="0x736511f29850"/>
        <function-ref name="isOwner" scoped="" ref="0x736511f299e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x736511ef85c0" loc="136:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x736511ef85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511ef8940"/>
        <function-ref name="runTask" scoped="" ref="0x736511ef8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x736510dc2590" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x736510dc2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736510dc2910"/>
        <function-ref name="configure" scoped="" ref="0x736510dc2aa0"/>
        <function-ref name="dataReady" scoped="" ref="0x736510dc2c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x736510dc3590" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736510dc3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736510dc3910"/>
        <function-ref name="configureSingle" scoped="" ref="0x736510dc3aa0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x736510dc3c30"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x736510dc3dc0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x736510dc2020"/>
        <function-ref name="configureMultiple" scoped="" ref="0x736510dc21b0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x736510dc2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x736510dc2e80" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x736510dc2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x736510dc1220"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x736510dc13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x736510dc17e0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x736510dc17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510dbf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736510dc48a0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736510dc48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510dc4c20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510dc4db0"/>
        <function-ref name="request" scoped="" ref="0x736510dc3020"/>
        <function-ref name="granted" scoped="" ref="0x736510dc31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x736510dc3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x736511ebc960" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x736511ebc960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736511ebcce0"/>
        <function-ref name="configure" scoped="" ref="0x736511ebce70"/>
        <function-ref name="dataReady" scoped="" ref="0x736511ebb030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x736511eb91d0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x736511eb91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x736511eb9550"/>
        <function-ref name="stop" scoped="" ref="0x736511eb96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x736511ebb920" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x736511ebb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x736511ebbca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x736511ebbe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x736511ebd1d0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x736511ebd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736511ebd550"/>
        <function-ref name="configureSingle" scoped="" ref="0x736511ebd6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x736511ebd870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x736511ebda00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x736511ebdb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x736511ebdd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x736511ebc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736511ecacd0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511ecacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511ebf0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511ebf230"/>
        <function-ref name="request" scoped="" ref="0x736511ebf3c0"/>
        <function-ref name="granted" scoped="" ref="0x736511ebf550"/>
        <function-ref name="isOwner" scoped="" ref="0x736511ebf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x736511eb2af0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x736511eb2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736511eb2e70"/>
        <function-ref name="configure" scoped="" ref="0x736511eb1030"/>
        <function-ref name="dataReady" scoped="" ref="0x736511eb11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x736511e9fb80" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x736511e9fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x736511eac020"/>
        <function-ref name="getMCtl" scoped="" ref="0x736511eac1b0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x736511eac340"/>
        <function-ref name="isBusy" scoped="" ref="0x736511eac4d0"/>
        <function-ref name="conversionDone" scoped="" ref="0x736511eac660"/>
        <function-ref name="getCtl1" scoped="" ref="0x736511eac7f0"/>
        <function-ref name="setMCtl" scoped="" ref="0x736511eac980"/>
        <function-ref name="startConversion" scoped="" ref="0x736511eacb10"/>
        <function-ref name="setCtl0" scoped="" ref="0x736511eacca0"/>
        <function-ref name="getMem" scoped="" ref="0x736511eace30"/>
        <function-ref name="setIEFlags" scoped="" ref="0x736511eaa020"/>
        <function-ref name="getIEFlags" scoped="" ref="0x736511eaa1b0"/>
        <function-ref name="stopConversion" scoped="" ref="0x736511eaa340"/>
        <function-ref name="enableConversion" scoped="" ref="0x736511eaa5d0"/>
        <function-ref name="setCtl1" scoped="" ref="0x736511eaa760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x736511e90540" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x736511e90540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e908c0"/>
        <function-ref name="isInput" scoped="" ref="0x736511e90a50"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e90be0"/>
        <function-ref name="toggle" scoped="" ref="0x736511e90d70"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e8f020"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e8f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e8f340"/>
        <function-ref name="get" scoped="" ref="0x736511e8f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e8f660"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e8f7f0"/>
        <function-ref name="set" scoped="" ref="0x736511e8f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e8fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e8fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e8e020"/>
        <function-ref name="clr" scoped="" ref="0x736511e8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x736511e999e0" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x736511e999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736511e99d60"/>
        <function-ref name="setEvent" scoped="" ref="0x736511e98020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736511e981b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736511e98340"/>
        <function-ref name="fired" scoped="" ref="0x736511e984d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x736511e9c220" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x736511e9c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736511e9c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x736511e9c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x736511e9c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736511e9ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736511e9cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736511e9cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736511e9b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736511e9b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x736511e9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x736511eaf910" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x736511eaf910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x736511eafc90"/>
        <function-ref name="stop" scoped="" ref="0x736511eafe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x736511e94640" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x736511e94640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e949c0"/>
        <function-ref name="isInput" scoped="" ref="0x736511e94b50"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e94ce0"/>
        <function-ref name="toggle" scoped="" ref="0x736511e94e70"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e93030"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e931c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e93350"/>
        <function-ref name="get" scoped="" ref="0x736511e934e0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e93670"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e93800"/>
        <function-ref name="set" scoped="" ref="0x736511e93990"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e93b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e93cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e92020"/>
        <function-ref name="clr" scoped="" ref="0x736511e921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x736511eb1ab0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x736511eb1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x736511eb1e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x736511eaf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x736511e8a540" loc="61:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x736511e8a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e8a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x736511e8aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e8abe0"/>
        <function-ref name="toggle" scoped="" ref="0x736511e8ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e89020"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e89340"/>
        <function-ref name="get" scoped="" ref="0x736511e894d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e89660"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e897f0"/>
        <function-ref name="set" scoped="" ref="0x736511e89980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e89b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e89ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e88020"/>
        <function-ref name="clr" scoped="" ref="0x736511e881b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x736511e98860" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x736511e98860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e98ce0"/>
        <function-ref name="isInput" scoped="" ref="0x736511e98e70"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e97030"/>
        <function-ref name="toggle" scoped="" ref="0x736511e971c0"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e97350"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e974e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e97670"/>
        <function-ref name="get" scoped="" ref="0x736511e97800"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e97990"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e97b20"/>
        <function-ref name="set" scoped="" ref="0x736511e97cb0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e97e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e96020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e962b0"/>
        <function-ref name="clr" scoped="" ref="0x736511e96440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736511eb4680" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736511eb4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736511eb4a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x736511e8e540" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x736511e8e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e8e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x736511e8ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e8ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x736511e8ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e8d020"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e8d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e8d340"/>
        <function-ref name="get" scoped="" ref="0x736511e8d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e8d660"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e8d7f0"/>
        <function-ref name="set" scoped="" ref="0x736511e8d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e8db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e8dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e8c020"/>
        <function-ref name="clr" scoped="" ref="0x736511e8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x736511eaaaa0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x736511eaaaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511eaae20"/>
        <function-ref name="setClockSource" scoped="" ref="0x736511e9d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x736511e9d1b0"/>
        <function-ref name="get" scoped="" ref="0x736511e9d340"/>
        <function-ref name="disableEvents" scoped="" ref="0x736511e9d4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736511e9d660"/>
        <function-ref name="getMode" scoped="" ref="0x736511e9d7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736511e9d980"/>
        <function-ref name="overflow" scoped="" ref="0x736511e9db10"/>
        <function-ref name="setMode" scoped="" ref="0x736511e9dca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736511e9de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x736511eabb30" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x736511eabb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736511ead020"/>
        <function-ref name="userId" scoped="" ref="0x736511ead1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x736511e9b6f0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x736511e9b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736511e9ba70"/>
        <function-ref name="getControl" scoped="" ref="0x736511e9bc00"/>
        <function-ref name="enableEvents" scoped="" ref="0x736511e9bd90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736511e9a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736511e9a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736511e9a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736511e9a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736511e9a660"/>
        <function-ref name="setControl" scoped="" ref="0x736511e9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x736511eb33f0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x736511eb33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736511eb3770"/>
        <function-ref name="configureSingle" scoped="" ref="0x736511eb3900"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x736511eb3a90"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x736511eb3c20"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x736511eb3db0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x736511eb2020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x736511eb21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x736511e92540" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x736511e92540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e928c0"/>
        <function-ref name="isInput" scoped="" ref="0x736511e92a50"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e92be0"/>
        <function-ref name="toggle" scoped="" ref="0x736511e92d70"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e91020"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e91340"/>
        <function-ref name="get" scoped="" ref="0x736511e914d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e91660"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e917f0"/>
        <function-ref name="set" scoped="" ref="0x736511e91980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e91b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e91ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e90020"/>
        <function-ref name="clr" scoped="" ref="0x736511e901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x736511e9ab70" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x736511e9ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736511e99020"/>
        <function-ref name="setEvent" scoped="" ref="0x736511e991b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736511e99340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736511e994d0"/>
        <function-ref name="fired" scoped="" ref="0x736511e99660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x736511e967d0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x736511e967d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e96b50"/>
        <function-ref name="isInput" scoped="" ref="0x736511e96ce0"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e96e70"/>
        <function-ref name="toggle" scoped="" ref="0x736511e95030"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e951c0"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e95350"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e954e0"/>
        <function-ref name="get" scoped="" ref="0x736511e95670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e95800"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e95990"/>
        <function-ref name="set" scoped="" ref="0x736511e95b20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e95cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e95e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e94120"/>
        <function-ref name="clr" scoped="" ref="0x736511e942b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x736511e8c540" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x736511e8c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511e8c8c0"/>
        <function-ref name="isInput" scoped="" ref="0x736511e8ca50"/>
        <function-ref name="setResistor" scoped="" ref="0x736511e8cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x736511e8cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x736511e8b020"/>
        <function-ref name="getResistor" scoped="" ref="0x736511e8b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511e8b340"/>
        <function-ref name="get" scoped="" ref="0x736511e8b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511e8b660"/>
        <function-ref name="getRaw" scoped="" ref="0x736511e8b7f0"/>
        <function-ref name="set" scoped="" ref="0x736511e8b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511e8bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511e8bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511e8a020"/>
        <function-ref name="clr" scoped="" ref="0x736511e8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x736511dcc0c0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x736511dcc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x736511dcc440"/>
        <function-ref name="getMCtl" scoped="" ref="0x736511dcc5d0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x736511dcc760"/>
        <function-ref name="isBusy" scoped="" ref="0x736511dcc8f0"/>
        <function-ref name="conversionDone" scoped="" ref="0x736511dcca80"/>
        <function-ref name="getCtl1" scoped="" ref="0x736511dccc10"/>
        <function-ref name="setMCtl" scoped="" ref="0x736511dccda0"/>
        <function-ref name="startConversion" scoped="" ref="0x736511dcb020"/>
        <function-ref name="setCtl0" scoped="" ref="0x736511dcb1b0"/>
        <function-ref name="getMem" scoped="" ref="0x736511dcb340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x736511dcb4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x736511dcb660"/>
        <function-ref name="stopConversion" scoped="" ref="0x736511dcb7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x736511dcba80"/>
        <function-ref name="setCtl1" scoped="" ref="0x736511dcbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x736511d333a0" loc="86:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x736511d333a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x736511d33740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736511d338d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x736511d32570" loc="89:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x736511d32570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x736511d32910"/>
        <function-ref name="configure" scoped="" ref="0x736511d32aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736511d34520" loc="85:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511d34520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511d348c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511d34a50"/>
        <function-ref name="request" scoped="" ref="0x736511d34be0"/>
        <function-ref name="granted" scoped="" ref="0x736511d34d70"/>
        <function-ref name="isOwner" scoped="" ref="0x736511d33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x736511d33b20" loc="87:/home/tofu/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736511d33b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736511d32020"/>
        <function-ref name="userId" scoped="" ref="0x736511d321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736510d8b060" loc="44:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736510d8b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736510d8b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x736510d8b670" loc="45:/home/tofu/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x736510d8b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x736510d8b9f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x736510d8bb80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x736510d8bd10"/>
        <function-ref name="dequeue" scoped="" ref="0x736510d8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x736510d87530" loc="52:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x736510d87530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x736510d878d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510d87a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x736510d86610" loc="56:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x736510d86610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x736510d869b0"/>
        <function-ref name="configure" scoped="" ref="0x736510d86b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x736510d86dd0" loc="57:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x736510d86dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x736510d85180"/>
        <function-ref name="isEmpty" scoped="" ref="0x736510d85310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x736510d854a0"/>
        <function-ref name="dequeue" scoped="" ref="0x736510d85630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736510d886c0" loc="51:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736510d886c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510d88a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510d88bf0"/>
        <function-ref name="request" scoped="" ref="0x736510d88d80"/>
        <function-ref name="granted" scoped="" ref="0x736510d87020"/>
        <function-ref name="isOwner" scoped="" ref="0x736510d871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x736510d87cb0" loc="53:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736510d87cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736510d860a0"/>
        <function-ref name="userId" scoped="" ref="0x736510d86230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x736510d85900" loc="68:/home/tofu/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x736510d85900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736510d85c80"/>
        <function-ref name="runTask" scoped="" ref="0x736510d85e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x736511d16740" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x736511d16740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736511d143d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x736511d171d0" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x736511d171d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511d17550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511d176e0"/>
        <function-ref name="request" scoped="" ref="0x736511d17870"/>
        <function-ref name="granted" scoped="" ref="0x736511d17a00"/>
        <function-ref name="isOwner" scoped="" ref="0x736511d17b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x736511d1bd30" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x736511d1bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511d180e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511d18270"/>
        <function-ref name="request" scoped="" ref="0x736511d18400"/>
        <function-ref name="granted" scoped="" ref="0x736511d18590"/>
        <function-ref name="isOwner" scoped="" ref="0x736511d18720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x736511d0ac40" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x736511d0ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x736511d06020"/>
        <function-ref name="getMCtl" scoped="" ref="0x736511d061b0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x736511d06340"/>
        <function-ref name="isBusy" scoped="" ref="0x736511d064d0"/>
        <function-ref name="conversionDone" scoped="" ref="0x736511d06660"/>
        <function-ref name="getCtl1" scoped="" ref="0x736511d067f0"/>
        <function-ref name="setMCtl" scoped="" ref="0x736511d06980"/>
        <function-ref name="startConversion" scoped="" ref="0x736511d06b10"/>
        <function-ref name="setCtl0" scoped="" ref="0x736511d06ca0"/>
        <function-ref name="getMem" scoped="" ref="0x736511d06e30"/>
        <function-ref name="setIEFlags" scoped="" ref="0x736511d05020"/>
        <function-ref name="getIEFlags" scoped="" ref="0x736511d051b0"/>
        <function-ref name="stopConversion" scoped="" ref="0x736511d05340"/>
        <function-ref name="enableConversion" scoped="" ref="0x736511d055d0"/>
        <function-ref name="setCtl1" scoped="" ref="0x736511d05760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x736511cff0f0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x736511cff0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511cfc630"/>
        <function-ref name="fired" scoped="" ref="0x736511cfeb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511cfd920"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511cfd4a0"/>
        <function-ref name="getdt" scoped="" ref="0x736511cfa020"/>
        <function-ref name="gett0" scoped="" ref="0x736511cfcab0"/>
        <function-ref name="isRunning" scoped="" ref="0x736511cfd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511cffce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511cfc020"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511cfe220"/>
        <function-ref name="stop" scoped="" ref="0x736511cfe6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x736511d0a0e0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x736511d0a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x736511d0a460"/>
        <function-ref name="stopDone" scoped="" ref="0x736511d0a5f0"/>
        <function-ref name="start" scoped="" ref="0x736511d0a780"/>
        <function-ref name="stop" scoped="" ref="0x736511d0a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x736511cfa6c0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x736511cfa6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511cf7c40"/>
        <function-ref name="fired" scoped="" ref="0x736511cf81e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511cf7020"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511cf8ae0"/>
        <function-ref name="getdt" scoped="" ref="0x736511cf5590"/>
        <function-ref name="gett0" scoped="" ref="0x736511cf5110"/>
        <function-ref name="isRunning" scoped="" ref="0x736511cf8660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511cf9390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511cf7630"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511cf9860"/>
        <function-ref name="stop" scoped="" ref="0x736511cf9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x736511d07490" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x736511d07490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x736511d07810"/>
        <function-ref name="stopDone" scoped="" ref="0x736511d079a0"/>
        <function-ref name="start" scoped="" ref="0x736511d07b30"/>
        <function-ref name="stop" scoped="" ref="0x736511d07cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x736511d05c20" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x736511d05c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511d01110"/>
        <function-ref name="fired" scoped="" ref="0x736511d036a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511d024a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511d02020"/>
        <function-ref name="getdt" scoped="" ref="0x736511d01a10"/>
        <function-ref name="gett0" scoped="" ref="0x736511d01590"/>
        <function-ref name="isRunning" scoped="" ref="0x736511d03b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511d04860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511d02ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511d04d30"/>
        <function-ref name="stop" scoped="" ref="0x736511d03220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x736511ca6020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x736511ca6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736511ca6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x736511ca89c0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x736511ca89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x736511ca8d40"/>
        <function-ref name="stopDone" scoped="" ref="0x736511ca7020"/>
        <function-ref name="start" scoped="" ref="0x736511ca71b0"/>
        <function-ref name="stop" scoped="" ref="0x736511ca7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x736511ca9030" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x736511ca9030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511ca93b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511ca9540"/>
        <function-ref name="request" scoped="" ref="0x736511ca96d0"/>
        <function-ref name="granted" scoped="" ref="0x736511ca9860"/>
        <function-ref name="isOwner" scoped="" ref="0x736511ca99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x736511cadcb0" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x736511cadcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511caa0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511caa230"/>
        <function-ref name="request" scoped="" ref="0x736511caa3c0"/>
        <function-ref name="granted" scoped="" ref="0x736511caa550"/>
        <function-ref name="isOwner" scoped="" ref="0x736511caa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x736511ca37f0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x736511ca37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511ca3b70"/>
        <function-ref name="runTask" scoped="" ref="0x736511ca3d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x736511ca9d80" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x736511ca9d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x736511ca8180"/>
        <function-ref name="stopDone" scoped="" ref="0x736511ca8310"/>
        <function-ref name="start" scoped="" ref="0x736511ca84a0"/>
        <function-ref name="stop" scoped="" ref="0x736511ca8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x736511c744e0" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511c744e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511c71a20"/>
        <function-ref name="fired" scoped="" ref="0x736511c72020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511c72da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511c72920"/>
        <function-ref name="getdt" scoped="" ref="0x736511c6f4a0"/>
        <function-ref name="gett0" scoped="" ref="0x736511c6f020"/>
        <function-ref name="isRunning" scoped="" ref="0x736511c724a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511c73110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511c71410"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511c735e0"/>
        <function-ref name="stop" scoped="" ref="0x736511c73ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x736511c6d020" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511c6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511c69630"/>
        <function-ref name="fired" scoped="" ref="0x736511c6ca60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511c6b920"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511c6b4a0"/>
        <function-ref name="getdt" scoped="" ref="0x736511c68020"/>
        <function-ref name="gett0" scoped="" ref="0x736511c69ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x736511c6b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511c6dc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511c69020"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511c6c110"/>
        <function-ref name="stop" scoped="" ref="0x736511c6c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x736511c67b40" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511c67b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511c62110"/>
        <function-ref name="fired" scoped="" ref="0x736511c655b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511c644a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511c64020"/>
        <function-ref name="getdt" scoped="" ref="0x736511c62a10"/>
        <function-ref name="gett0" scoped="" ref="0x736511c62590"/>
        <function-ref name="isRunning" scoped="" ref="0x736511c65a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511c66750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511c64ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511c66c20"/>
        <function-ref name="stop" scoped="" ref="0x736511c65130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x736510da1020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x736510da1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510da1c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x736510d9f2a0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x736510d9f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510d9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x736510dc9260" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x736510dc9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510dc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x736510dcc570" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x736510dcc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x736510dca020"/>
        <function-ref name="postBuffer" scoped="" ref="0x736510dcb1b0"/>
        <function-ref name="read" scoped="" ref="0x736510dcbb20"/>
        <function-ref name="readDone" scoped="" ref="0x736510dcaad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x736511c2bc90" loc="23:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736511c2bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736511c2a0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x736511c2a230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x736511c2a3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x736511c2a550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x736511c2a6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x736511c2a870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x736511c2aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x736511c2c5e0" loc="22:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x736511c2c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736511c2b240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x736511c301d0" loc="20:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x736511c301d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x736511c2fc40"/>
        <function-ref name="postBuffer" scoped="" ref="0x736511c30dc0"/>
        <function-ref name="read" scoped="" ref="0x736511c2f770"/>
        <function-ref name="readDone" scoped="" ref="0x736511c2e730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x736511c28280" loc="24:/home/tofu/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511c28280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511c28600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511c28790"/>
        <function-ref name="request" scoped="" ref="0x736511c28920"/>
        <function-ref name="granted" scoped="" ref="0x736511c28ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x736511c28c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x736511bf2380" loc="156:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x736511bf2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511bf2700"/>
        <function-ref name="runTask" scoped="" ref="0x736511bf2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x736511c01aa0" loc="119:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x736511c01aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511c01e20"/>
        <function-ref name="runTask" scoped="" ref="0x736511bff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x736511bfa100" loc="135:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x736511bfa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511bfa480"/>
        <function-ref name="runTask" scoped="" ref="0x736511bfa610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x736511c1b020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736511c1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511c19870"/>
        <function-ref name="fired" scoped="" ref="0x736511c1a840"/>
        <function-ref name="startAt" scoped="" ref="0x736511c19220"/>
        <function-ref name="isRunning" scoped="" ref="0x736511c1ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x736511c19d30"/>
        <function-ref name="start" scoped="" ref="0x736511c1be30"/>
        <function-ref name="stop" scoped="" ref="0x736511c1a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736511c24150" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736511c24150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x736512a88800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x736512a88800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736511c244d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x736511c1eb10" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x736511c1eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736511c1d790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x736511c1f1d0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x736511c1f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736511c1f550"/>
        <function-ref name="configureSingle" scoped="" ref="0x736511c1f6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x736511c1f870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x736511c1fa00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x736511c1fb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x736511c1fd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x736511c1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x736511c24e70" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x736511c24e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x736511c22910"/>
        <function-ref name="postBuffer" scoped="" ref="0x736511c23a90"/>
        <function-ref name="read" scoped="" ref="0x736511c22440"/>
        <function-ref name="readDone" scoped="" ref="0x736511c20440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x736511bb6970" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736511bb6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511bb31b0"/>
        <function-ref name="fired" scoped="" ref="0x736511bb41b0"/>
        <function-ref name="startAt" scoped="" ref="0x736511bb4b30"/>
        <function-ref name="isRunning" scoped="" ref="0x736511bb4670"/>
        <function-ref name="getAlarm" scoped="" ref="0x736511bb3670"/>
        <function-ref name="start" scoped="" ref="0x736511bb57c0"/>
        <function-ref name="stop" scoped="" ref="0x736511bb5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736511bb6120" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736511bb6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736511bb64a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x736510d3aca0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736510d3aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510d364e0"/>
        <function-ref name="fired" scoped="" ref="0x736510d374e0"/>
        <function-ref name="startAt" scoped="" ref="0x736510d37e60"/>
        <function-ref name="isRunning" scoped="" ref="0x736510d379a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510d369a0"/>
        <function-ref name="start" scoped="" ref="0x736510d39ae0"/>
        <function-ref name="stop" scoped="" ref="0x736510d37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736510d3a450" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736510d3a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736510d3a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x736510d20440" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x736510d20440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736510d207c0"/>
        <function-ref name="setEvent" scoped="" ref="0x736510d20950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736510d20ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736510d20c70"/>
        <function-ref name="fired" scoped="" ref="0x736510d20e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x736510d23880" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x736510d23880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736510d23c00"/>
        <function-ref name="setClockSource" scoped="" ref="0x736510d23d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510d22020"/>
        <function-ref name="get" scoped="" ref="0x736510d221b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510d22340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736510d224d0"/>
        <function-ref name="getMode" scoped="" ref="0x736510d22660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736510d227f0"/>
        <function-ref name="overflow" scoped="" ref="0x736510d22980"/>
        <function-ref name="setMode" scoped="" ref="0x736510d22b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736510d22ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x736510d21020" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510d21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736510d213a0"/>
        <function-ref name="getControl" scoped="" ref="0x736510d21530"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510d216c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736510d21850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736510d219e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510d21b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736510d21d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736510d20020"/>
        <function-ref name="setControl" scoped="" ref="0x736510d201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x736510d160c0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x736510d160c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x736510d16440"/>
        <function-ref name="setEvent" scoped="" ref="0x736510d165d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x736510d16760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x736510d168f0"/>
        <function-ref name="fired" scoped="" ref="0x736510d16a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x736510d19710" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x736510d19710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736510d19a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x736510d19c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510d19db0"/>
        <function-ref name="get" scoped="" ref="0x736510d18020"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510d181b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736510d18340"/>
        <function-ref name="getMode" scoped="" ref="0x736510d184d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736510d18660"/>
        <function-ref name="overflow" scoped="" ref="0x736510d187f0"/>
        <function-ref name="setMode" scoped="" ref="0x736510d18980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x736510d18b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x736510d1d5b0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736510d1d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510d1bdf0"/>
        <function-ref name="fired" scoped="" ref="0x736510d1cdf0"/>
        <function-ref name="startAt" scoped="" ref="0x736510d1b7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x736510d1b2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510d192e0"/>
        <function-ref name="start" scoped="" ref="0x736510d1c420"/>
        <function-ref name="stop" scoped="" ref="0x736510d1c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736510d1eca0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736510d1eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736510d1d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x736510d18da0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x736510d18da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x736510d17180"/>
        <function-ref name="getControl" scoped="" ref="0x736510d17310"/>
        <function-ref name="enableEvents" scoped="" ref="0x736510d174a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x736510d17630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x736510d177c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x736510d17950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x736510d17ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x736510d17c70"/>
        <function-ref name="setControl" scoped="" ref="0x736510d17e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x736510d33020" loc="61:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x736510d33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510d30870"/>
        <function-ref name="fired" scoped="" ref="0x736510d32840"/>
        <function-ref name="startAt" scoped="" ref="0x736510d30220"/>
        <function-ref name="isRunning" scoped="" ref="0x736510d32d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510d30d30"/>
        <function-ref name="start" scoped="" ref="0x736510d33e30"/>
        <function-ref name="stop" scoped="" ref="0x736510d32380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x736510d2d780" loc="73:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x736510d2d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736510d29020"/>
        <function-ref name="fired" scoped="" ref="0x736510d2b020"/>
        <function-ref name="startAt" scoped="" ref="0x736510d2b9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x736510d2b4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x736510d294e0"/>
        <function-ref name="start" scoped="" ref="0x736510d2c5d0"/>
        <function-ref name="stop" scoped="" ref="0x736510d2cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x736510d2f3d0" loc="68:/home/tofu/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x736510d2f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x736510d2e240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x736510d2ebc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x736510d2e700"/>
        <function-ref name="overflow" scoped="" ref="0x736510d2d0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x736511b83bf0" loc="26:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x736511b83bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x736511b80710"/>
        <function-ref name="postBuffer" scoped="" ref="0x736511b82860"/>
        <function-ref name="read" scoped="" ref="0x736511b80220"/>
        <function-ref name="readDone" scoped="" ref="0x736511b7f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x736511baecb0" loc="24:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x736511baecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x736511b84850"/>
        <function-ref name="postBuffer" scoped="" ref="0x736511b86940"/>
        <function-ref name="read" scoped="" ref="0x736511b84360"/>
        <function-ref name="readDone" scoped="" ref="0x736511b83360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x736511b7f8f0" loc="27:/home/tofu/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511b7f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511b7fc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511b7fe20"/>
        <function-ref name="request" scoped="" ref="0x736511b7d020"/>
        <function-ref name="granted" scoped="" ref="0x736511b7d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x736511b7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x736510d47020" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x736510d47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736510d473a0"/>
        <function-ref name="configure" scoped="" ref="0x736510d47530"/>
        <function-ref name="dataReady" scoped="" ref="0x736510d476c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x736510d48020" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x736510d48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x736510d483a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x736510d48530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x736510d486c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x736510d48850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x736510d489e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x736510d48b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x736510d48d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x736510d47910" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x736510d47910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x736510d47c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x736510d47e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x736510d46280" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x736510d46280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510d45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736510d4a360" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736510d4a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510d4a6e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510d4a870"/>
        <function-ref name="request" scoped="" ref="0x736510d4aa00"/>
        <function-ref name="granted" scoped="" ref="0x736510d4ab90"/>
        <function-ref name="isOwner" scoped="" ref="0x736510d4ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x736510cd6dc0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x736510cd6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510cd5ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x736510cd3120" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LightTempSensorAppC.LightSource.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x736510cd3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736510cd3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x736511b65300" loc="44:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x736511b65300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x736511b64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x736511b688b0" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x736511b688b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x736511b68c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x73651186d900" loc="49:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="LightTempSensorAppC.TempSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x73651186d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x73651186dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x73651186e240" loc="48:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="LightTempSensorAppC.TempSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x73651186e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x73651186ee30"/>
        <function-ref name="readDone" scoped="" ref="0x73651186d300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x73651186faa0" loc="47:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="LightTempSensorAppC.TempSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x73651186faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x73651186fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x736511870310" loc="46:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="LightTempSensorAppC.TempSource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x736511870310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x73651186f020"/>
        <function-ref name="readDone" scoped="" ref="0x73651186f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x736510cc3c50" loc="54:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x736510cc3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x736510cc2020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x736510cc21b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x736510cc2340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x736510cc24d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x736510cc2660"/>
        <function-ref name="reset" scoped="" ref="0x736510cc27f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x736510cc2980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x736510cc2b10"/>
        <function-ref name="resetDone" scoped="" ref="0x736510cc2ca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x736510cc2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x736510cc7020" loc="48:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x736510cc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x736510cc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x736510cc7790" loc="49:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x736510cc7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x736510cc63b0"/>
        <function-ref name="readDone" scoped="" ref="0x736510cc6830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x736510cca180" loc="46:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x736510cca180"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x736510cca500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x736510cc6e30" loc="51:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x736510cc6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510cc51e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510cc5370"/>
        <function-ref name="request" scoped="" ref="0x736510cc5500"/>
        <function-ref name="granted" scoped="" ref="0x736510cc5690"/>
        <function-ref name="isOwner" scoped="" ref="0x736510cc5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x736510cc47b0" loc="53:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x736510cc47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x736510cc4b30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x736510cc4cc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x736510cc4e50"/>
        <function-ref name="measureTemperature" scoped="" ref="0x736510cc3020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x736510cc31b0"/>
        <function-ref name="reset" scoped="" ref="0x736510cc3340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x736510cc34d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x736510cc3660"/>
        <function-ref name="resetDone" scoped="" ref="0x736510cc37f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x736510cc3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x736510cc5af0" loc="52:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x736510cc5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510cc5e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510cc4030"/>
        <function-ref name="request" scoped="" ref="0x736510cc41c0"/>
        <function-ref name="granted" scoped="" ref="0x736510cc4350"/>
        <function-ref name="isOwner" scoped="" ref="0x736510cc44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x736510cca8f0" loc="47:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="LightTempSensorAppC.TempSource.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x736510cca8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x736510cc9560"/>
        <function-ref name="readDone" scoped="" ref="0x736510cc99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x736511b052c0" loc="45:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x736511b052c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x736511b05640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x736511b057d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x736511b05960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x736511b05af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x736511b05c80"/>
        <function-ref name="reset" scoped="" ref="0x736511b05e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x736511b04020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x736511b041b0"/>
        <function-ref name="resetDone" scoped="" ref="0x736511b04340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x736511b044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736511b07020" loc="44:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511b07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511b073a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511b07530"/>
        <function-ref name="request" scoped="" ref="0x736511b076c0"/>
        <function-ref name="granted" scoped="" ref="0x736511b07850"/>
        <function-ref name="isOwner" scoped="" ref="0x736511b079e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x736511a84610" loc="58:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x736511a84610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736511a84990"/>
        <function-ref name="disable" scoped="" ref="0x736511a84b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x736511a84cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x736511a84e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x736511a7c2f0" loc="102:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x736511a7c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511a7c670"/>
        <function-ref name="runTask" scoped="" ref="0x736511a7c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x736511a7dac0" loc="103:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x736511a7dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511a7de40"/>
        <function-ref name="runTask" scoped="" ref="0x736511a7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x736511a85480" loc="57:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x736511a85480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a85800"/>
        <function-ref name="isInput" scoped="" ref="0x736511a85990"/>
        <function-ref name="toggle" scoped="" ref="0x736511a85b20"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a85cb0"/>
        <function-ref name="get" scoped="" ref="0x736511a85e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a84020"/>
        <function-ref name="set" scoped="" ref="0x736511a841b0"/>
        <function-ref name="clr" scoped="" ref="0x736511a84340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x736511a88c90" loc="54:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x736511a88c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x736511a870a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x736511a87230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x736511a873c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x736511a87550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x736511a876e0"/>
        <function-ref name="reset" scoped="" ref="0x736511a87870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x736511a87a00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x736511a87b90"/>
        <function-ref name="resetDone" scoped="" ref="0x736511a87d20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x736511a86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x736511a862f0" loc="56:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x736511a862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a86670"/>
        <function-ref name="isInput" scoped="" ref="0x736511a86800"/>
        <function-ref name="toggle" scoped="" ref="0x736511a86990"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a86b20"/>
        <function-ref name="get" scoped="" ref="0x736511a86cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a86e40"/>
        <function-ref name="set" scoped="" ref="0x736511a85020"/>
        <function-ref name="clr" scoped="" ref="0x736511a851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x736511a7e450" loc="62:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x736511a7e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736511a7e7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736511a7e960"/>
        <function-ref name="led1On" scoped="" ref="0x736511a7eaf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x736511a7ec80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x736511a7ee10"/>
        <function-ref name="get" scoped="" ref="0x736511a7d020"/>
        <function-ref name="led1Off" scoped="" ref="0x736511a7d1b0"/>
        <function-ref name="led2On" scoped="" ref="0x736511a7d7f0"/>
        <function-ref name="set" scoped="" ref="0x736511a7d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x736511a7d340"/>
        <function-ref name="led0On" scoped="" ref="0x736511a7d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736511a83240" loc="60:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511a83240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511a7f6e0"/>
        <function-ref name="fired" scoped="" ref="0x736511a82c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511a81a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511a815f0"/>
        <function-ref name="getdt" scoped="" ref="0x736511a7e020"/>
        <function-ref name="gett0" scoped="" ref="0x736511a7fb60"/>
        <function-ref name="isRunning" scoped="" ref="0x736511a81170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511a83e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511a7f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511a82340"/>
        <function-ref name="stop" scoped="" ref="0x736511a82810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x736511a72730" loc="47:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x736511a72730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736511a72ab0"/>
        <function-ref name="disable" scoped="" ref="0x736511a72c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x736511a72dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x736511a71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x736511a73370" loc="46:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x736511a73370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a736f0"/>
        <function-ref name="isInput" scoped="" ref="0x736511a73880"/>
        <function-ref name="toggle" scoped="" ref="0x736511a73a10"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a73ba0"/>
        <function-ref name="get" scoped="" ref="0x736511a73d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a72020"/>
        <function-ref name="set" scoped="" ref="0x736511a721b0"/>
        <function-ref name="clr" scoped="" ref="0x736511a72340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x736511a74020" loc="45:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x736511a74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a743a0"/>
        <function-ref name="isInput" scoped="" ref="0x736511a74530"/>
        <function-ref name="toggle" scoped="" ref="0x736511a746c0"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a74850"/>
        <function-ref name="get" scoped="" ref="0x736511a749e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a74b70"/>
        <function-ref name="set" scoped="" ref="0x736511a74d00"/>
        <function-ref name="clr" scoped="" ref="0x736511a73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736511a761d0" loc="44:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511a761d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511a76550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511a766e0"/>
        <function-ref name="request" scoped="" ref="0x736511a76870"/>
        <function-ref name="granted" scoped="" ref="0x736511a76a00"/>
        <function-ref name="isOwner" scoped="" ref="0x736511a76b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x736511a6f490" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x736511a6f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a6f810"/>
        <function-ref name="isInput" scoped="" ref="0x736511a6f9a0"/>
        <function-ref name="setResistor" scoped="" ref="0x736511a6fb30"/>
        <function-ref name="toggle" scoped="" ref="0x736511a6fcc0"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a6fe50"/>
        <function-ref name="getResistor" scoped="" ref="0x736511a6e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a6e1b0"/>
        <function-ref name="get" scoped="" ref="0x736511a6e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511a6e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x736511a6e660"/>
        <function-ref name="set" scoped="" ref="0x736511a6e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511a6e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511a6eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511a6eda0"/>
        <function-ref name="clr" scoped="" ref="0x736511a6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x736511a70330" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x736511a70330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a706b0"/>
        <function-ref name="isInput" scoped="" ref="0x736511a70840"/>
        <function-ref name="toggle" scoped="" ref="0x736511a709d0"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a70b60"/>
        <function-ref name="get" scoped="" ref="0x736511a70cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a70e80"/>
        <function-ref name="set" scoped="" ref="0x736511a6f030"/>
        <function-ref name="clr" scoped="" ref="0x736511a6f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x736511a6a020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x736511a6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a6a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x736511a6a530"/>
        <function-ref name="setResistor" scoped="" ref="0x736511a6a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x736511a6a850"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a6a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x736511a6ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a6ad00"/>
        <function-ref name="get" scoped="" ref="0x736511a69020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511a691b0"/>
        <function-ref name="getRaw" scoped="" ref="0x736511a69340"/>
        <function-ref name="set" scoped="" ref="0x736511a694d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511a69660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511a697f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511a69a80"/>
        <function-ref name="clr" scoped="" ref="0x736511a69c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x736511a6cd60" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x736511a6cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a6b180"/>
        <function-ref name="isInput" scoped="" ref="0x736511a6b310"/>
        <function-ref name="toggle" scoped="" ref="0x736511a6b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a6b630"/>
        <function-ref name="get" scoped="" ref="0x736511a6b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a6b950"/>
        <function-ref name="set" scoped="" ref="0x736511a6bae0"/>
        <function-ref name="clr" scoped="" ref="0x736511a6bc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x736511a66de0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x736511a66de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a65180"/>
        <function-ref name="isInput" scoped="" ref="0x736511a65310"/>
        <function-ref name="setResistor" scoped="" ref="0x736511a654a0"/>
        <function-ref name="toggle" scoped="" ref="0x736511a65630"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a657c0"/>
        <function-ref name="getResistor" scoped="" ref="0x736511a65950"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a65ae0"/>
        <function-ref name="get" scoped="" ref="0x736511a65c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x736511a65e00"/>
        <function-ref name="getRaw" scoped="" ref="0x736511a64020"/>
        <function-ref name="set" scoped="" ref="0x736511a641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x736511a64340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x736511a644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x736511a64760"/>
        <function-ref name="clr" scoped="" ref="0x736511a648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x736511a67b60" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x736511a67b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a66020"/>
        <function-ref name="isInput" scoped="" ref="0x736511a661b0"/>
        <function-ref name="toggle" scoped="" ref="0x736511a66340"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a664d0"/>
        <function-ref name="get" scoped="" ref="0x736511a66660"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a667f0"/>
        <function-ref name="set" scoped="" ref="0x736511a66980"/>
        <function-ref name="clr" scoped="" ref="0x736511a66b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x736511a5f3e0" loc="43:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x736511a5f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x736511a5f760"/>
        <function-ref name="stopDone" scoped="" ref="0x736511a5f8f0"/>
        <function-ref name="start" scoped="" ref="0x736511a5fa80"/>
        <function-ref name="stop" scoped="" ref="0x736511a5fc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x736511a54700" loc="50:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x736511a54700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511a54a80"/>
        <function-ref name="runTask" scoped="" ref="0x736511a54c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x736511a56b40" loc="47:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x736511a56b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a55020"/>
        <function-ref name="isInput" scoped="" ref="0x736511a551b0"/>
        <function-ref name="toggle" scoped="" ref="0x736511a55340"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a554d0"/>
        <function-ref name="get" scoped="" ref="0x736511a55660"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a557f0"/>
        <function-ref name="set" scoped="" ref="0x736511a55980"/>
        <function-ref name="clr" scoped="" ref="0x736511a55b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x736511a59510" loc="45:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x736511a59510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a59890"/>
        <function-ref name="isInput" scoped="" ref="0x736511a59a20"/>
        <function-ref name="toggle" scoped="" ref="0x736511a59bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a59d40"/>
        <function-ref name="get" scoped="" ref="0x736511a57020"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a571b0"/>
        <function-ref name="set" scoped="" ref="0x736511a57340"/>
        <function-ref name="clr" scoped="" ref="0x736511a574d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x736511a57830" loc="46:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x736511a57830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x736511a57bb0"/>
        <function-ref name="isInput" scoped="" ref="0x736511a57d40"/>
        <function-ref name="toggle" scoped="" ref="0x736511a56020"/>
        <function-ref name="isOutput" scoped="" ref="0x736511a561b0"/>
        <function-ref name="get" scoped="" ref="0x736511a56340"/>
        <function-ref name="makeOutput" scoped="" ref="0x736511a564d0"/>
        <function-ref name="set" scoped="" ref="0x736511a56660"/>
        <function-ref name="clr" scoped="" ref="0x736511a567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x736511a5d080" loc="44:/home/tofu/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511a5d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511a5a630"/>
        <function-ref name="fired" scoped="" ref="0x736511a5cac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511a5b920"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511a5b4a0"/>
        <function-ref name="getdt" scoped="" ref="0x736511a59020"/>
        <function-ref name="gett0" scoped="" ref="0x736511a5aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x736511a5b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511a5dc70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511a5a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511a5c170"/>
        <function-ref name="stop" scoped="" ref="0x736511a5c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x736511a495a0" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x736511a495a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x736511a46a80"/>
        <function-ref name="fired" scoped="" ref="0x736511a47090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x736511a47e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x736511a47990"/>
        <function-ref name="getdt" scoped="" ref="0x736511a454a0"/>
        <function-ref name="gett0" scoped="" ref="0x736511a45020"/>
        <function-ref name="isRunning" scoped="" ref="0x736511a47510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511a48200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x736511a46470"/>
        <function-ref name="startOneShot" scoped="" ref="0x736511a486d0"/>
        <function-ref name="stop" scoped="" ref="0x736511a48ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x736511a38710" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x736511a38710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a38a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a38c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a38db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a37020"/>
        <function-ref name="enable" scoped="" ref="0x736511a371b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x736511a2e8a0" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x736511a2e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a2ec20"/>
        <function-ref name="fired" scoped="" ref="0x736511a2edb0"/>
        <function-ref name="disable" scoped="" ref="0x736511a2d020"/>
        <function-ref name="edge" scoped="" ref="0x736511a2d1b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a2d340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a2d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x736511a35710" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x736511a35710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a35a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a35c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a35db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a34020"/>
        <function-ref name="enable" scoped="" ref="0x736511a341b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a34340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x736511a33710" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x736511a33710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a33a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a33c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a33db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a32020"/>
        <function-ref name="enable" scoped="" ref="0x736511a321b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x736511a3e710" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x736511a3e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a3ea90"/>
        <function-ref name="fired" scoped="" ref="0x736511a3ec20"/>
        <function-ref name="disable" scoped="" ref="0x736511a3edb0"/>
        <function-ref name="edge" scoped="" ref="0x736511a39020"/>
        <function-ref name="enable" scoped="" ref="0x736511a391b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a39340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x736511a30710" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x736511a30710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a30b90"/>
        <function-ref name="fired" scoped="" ref="0x736511a30d20"/>
        <function-ref name="disable" scoped="" ref="0x736511a2f020"/>
        <function-ref name="edge" scoped="" ref="0x736511a2f1b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a2f340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x736511a37710" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x736511a37710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a37a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a37c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a37db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a36020"/>
        <function-ref name="enable" scoped="" ref="0x736511a361b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x736511a2d8a0" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x736511a2d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a2dc20"/>
        <function-ref name="fired" scoped="" ref="0x736511a2ddb0"/>
        <function-ref name="disable" scoped="" ref="0x736511a2c020"/>
        <function-ref name="edge" scoped="" ref="0x736511a2c1b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a2c340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x736511a3b660" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x736511a3b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a3b9e0"/>
        <function-ref name="fired" scoped="" ref="0x736511a3bb70"/>
        <function-ref name="disable" scoped="" ref="0x736511a3bd00"/>
        <function-ref name="edge" scoped="" ref="0x736511a3f020"/>
        <function-ref name="enable" scoped="" ref="0x736511a3f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a3f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x736511a32710" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x736511a32710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a32a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a32c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a32db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a31020"/>
        <function-ref name="enable" scoped="" ref="0x736511a311b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x736511a39710" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x736511a39710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a39a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a39c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a39db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a38020"/>
        <function-ref name="enable" scoped="" ref="0x736511a381b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x736511a2f8a0" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x736511a2f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a2fc20"/>
        <function-ref name="fired" scoped="" ref="0x736511a2fdb0"/>
        <function-ref name="disable" scoped="" ref="0x736511a2e020"/>
        <function-ref name="edge" scoped="" ref="0x736511a2e1b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a2e340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x736511a36710" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x736511a36710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a36a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a36c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a36db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a35020"/>
        <function-ref name="enable" scoped="" ref="0x736511a351b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a35340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x736511a34710" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x736511a34710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a34a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a34c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a34db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a33020"/>
        <function-ref name="enable" scoped="" ref="0x736511a331b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a33340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x736511a3f710" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x736511a3f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a3fa90"/>
        <function-ref name="fired" scoped="" ref="0x736511a3fc20"/>
        <function-ref name="disable" scoped="" ref="0x736511a3fdb0"/>
        <function-ref name="edge" scoped="" ref="0x736511a3e020"/>
        <function-ref name="enable" scoped="" ref="0x736511a3e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x736511a31710" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x736511a31710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a31a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a31c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a31db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a30020"/>
        <function-ref name="enable" scoped="" ref="0x736511a301b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x736511a25710" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x736511a25710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a25a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a25c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a25db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a24020"/>
        <function-ref name="enable" scoped="" ref="0x736511a241b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x736511a1a8a0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x736511a1a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a1ac20"/>
        <function-ref name="fired" scoped="" ref="0x736511a1adb0"/>
        <function-ref name="disable" scoped="" ref="0x736511a19020"/>
        <function-ref name="edge" scoped="" ref="0x736511a191b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a19340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x736511a21710" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x736511a21710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a21a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a21c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a21db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a20020"/>
        <function-ref name="enable" scoped="" ref="0x736511a201b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x736511a1f710" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x736511a1f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a1fa90"/>
        <function-ref name="fired" scoped="" ref="0x736511a1fc20"/>
        <function-ref name="disable" scoped="" ref="0x736511a1fdb0"/>
        <function-ref name="edge" scoped="" ref="0x736511a1e020"/>
        <function-ref name="enable" scoped="" ref="0x736511a1e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x736511a27710" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x736511a27710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a27a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a27c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a27db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a26020"/>
        <function-ref name="enable" scoped="" ref="0x736511a261b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a26340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x736511a1c710" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x736511a1c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a1cb90"/>
        <function-ref name="fired" scoped="" ref="0x736511a1cd20"/>
        <function-ref name="disable" scoped="" ref="0x736511a1b020"/>
        <function-ref name="edge" scoped="" ref="0x736511a1b1b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a1b340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a1b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x736511a24710" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x736511a24710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a24a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a24c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a24db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a23020"/>
        <function-ref name="enable" scoped="" ref="0x736511a231b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a23340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x736511a198a0" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x736511a198a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a19c20"/>
        <function-ref name="fired" scoped="" ref="0x736511a19db0"/>
        <function-ref name="disable" scoped="" ref="0x736511a18020"/>
        <function-ref name="edge" scoped="" ref="0x736511a181b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a18340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x736511a296b0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x736511a296b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a29a30"/>
        <function-ref name="fired" scoped="" ref="0x736511a29bc0"/>
        <function-ref name="disable" scoped="" ref="0x736511a29d50"/>
        <function-ref name="edge" scoped="" ref="0x736511a28020"/>
        <function-ref name="enable" scoped="" ref="0x736511a281b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x736511a1e710" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x736511a1e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a1ea90"/>
        <function-ref name="fired" scoped="" ref="0x736511a1ec20"/>
        <function-ref name="disable" scoped="" ref="0x736511a1edb0"/>
        <function-ref name="edge" scoped="" ref="0x736511a1d020"/>
        <function-ref name="enable" scoped="" ref="0x736511a1d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x736511a26710" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x736511a26710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a26a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a26c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a26db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a25020"/>
        <function-ref name="enable" scoped="" ref="0x736511a251b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x736511a1b8a0" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x736511a1b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a1bc20"/>
        <function-ref name="fired" scoped="" ref="0x736511a1bdb0"/>
        <function-ref name="disable" scoped="" ref="0x736511a1a020"/>
        <function-ref name="edge" scoped="" ref="0x736511a1a1b0"/>
        <function-ref name="enable" scoped="" ref="0x736511a1a340"/>
        <function-ref name="getValue" scoped="" ref="0x736511a1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x736511a23710" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x736511a23710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a23a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a23c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a23db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a21020"/>
        <function-ref name="enable" scoped="" ref="0x736511a211b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x736511a20710" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x736511a20710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a20a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a20c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a20db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a1f020"/>
        <function-ref name="enable" scoped="" ref="0x736511a1f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x736511a28710" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x736511a28710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a28a90"/>
        <function-ref name="fired" scoped="" ref="0x736511a28c20"/>
        <function-ref name="disable" scoped="" ref="0x736511a28db0"/>
        <function-ref name="edge" scoped="" ref="0x736511a27020"/>
        <function-ref name="enable" scoped="" ref="0x736511a271b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x736511a1d710" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x736511a1d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511a1da90"/>
        <function-ref name="fired" scoped="" ref="0x736511a1dc20"/>
        <function-ref name="disable" scoped="" ref="0x736511a1ddb0"/>
        <function-ref name="edge" scoped="" ref="0x736511a1c020"/>
        <function-ref name="enable" scoped="" ref="0x736511a1c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x736511a1c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x736511939610" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x736511939610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511939990"/>
        <function-ref name="fired" scoped="" ref="0x736511939b20"/>
        <function-ref name="disable" scoped="" ref="0x736511939cb0"/>
        <function-ref name="edge" scoped="" ref="0x736511939e40"/>
        <function-ref name="enable" scoped="" ref="0x736511938020"/>
        <function-ref name="getValue" scoped="" ref="0x7365119381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x736511947a30" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x736511947a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x736511947db0"/>
        <function-ref name="disable" scoped="" ref="0x736511939020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7365119391b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x736511939340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7365118c3020" loc="92:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7365118c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7365118c33c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7365118c3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7365118c2cd0" loc="96:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7365118c2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7365118c10a0"/>
        <function-ref name="configure" scoped="" ref="0x7365118c1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7365118c37a0" loc="93:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7365118c37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365118c3b20"/>
        <function-ref name="requested" scoped="" ref="0x7365118c3cb0"/>
        <function-ref name="granted" scoped="" ref="0x7365118c3e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7365118c2020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7365118c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7365118c4210" loc="91:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7365118c4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365118c45b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7365118c4740"/>
        <function-ref name="request" scoped="" ref="0x7365118c48d0"/>
        <function-ref name="granted" scoped="" ref="0x7365118c4a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7365118c4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7365118c2400" loc="94:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7365118c2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7365118c2780"/>
        <function-ref name="userId" scoped="" ref="0x7365118c2910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736510c303b0" loc="44:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736510c303b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736510c30730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x736510c309c0" loc="45:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x736510c309c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x736510c30d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x736510c2f020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x736510c2f1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x736510c2f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x736510c2da60" loc="55:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x736510c2da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x736510c2de00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510c2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x736510c2b790" loc="60:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x736510c2b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x736510c2bb30"/>
        <function-ref name="configure" scoped="" ref="0x736510c2bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x736510c2a020" loc="61:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x736510c2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x736510c2a3a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x736510c2a530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x736510c2a6c0"/>
        <function-ref name="dequeue" scoped="" ref="0x736510c2a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x736510c2c270" loc="56:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510c2c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510c2c5f0"/>
        <function-ref name="requested" scoped="" ref="0x736510c2c780"/>
        <function-ref name="granted" scoped="" ref="0x736510c2c910"/>
        <function-ref name="isOwner" scoped="" ref="0x736510c2caa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510c2cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x736510c2aaa0" loc="62:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x736510c2aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736510c2ae20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736510c28020"/>
        <function-ref name="led1On" scoped="" ref="0x736510c281b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x736510c28340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x736510c284d0"/>
        <function-ref name="get" scoped="" ref="0x736510c28660"/>
        <function-ref name="led1Off" scoped="" ref="0x736510c287f0"/>
        <function-ref name="led0On" scoped="" ref="0x736510c28e30"/>
        <function-ref name="set" scoped="" ref="0x736510c28b10"/>
        <function-ref name="led2On" scoped="" ref="0x736510c28980"/>
        <function-ref name="led2Off" scoped="" ref="0x736510c28ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736510c2ec80" loc="54:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736510c2ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510c2d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510c2d230"/>
        <function-ref name="request" scoped="" ref="0x736510c2d3c0"/>
        <function-ref name="granted" scoped="" ref="0x736510c2d550"/>
        <function-ref name="isOwner" scoped="" ref="0x736510c2d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x736510c2ce80" loc="57:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736510c2ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736510c2b220"/>
        <function-ref name="userId" scoped="" ref="0x736510c2b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x736510c27160" loc="75:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x736510c27160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736510c274e0"/>
        <function-ref name="runTask" scoped="" ref="0x736510c27670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7365118be280" loc="69:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7365118be280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7365118be600"/>
        <function-ref name="stopDone" scoped="" ref="0x7365118be790"/>
        <function-ref name="start" scoped="" ref="0x7365118be920"/>
        <function-ref name="stop" scoped="" ref="0x7365118beab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7365118bed00" loc="71:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7365118bed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x73651188f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x73651188f2f0" loc="72:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x73651188f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x73651188f670"/>
        <function-ref name="requested" scoped="" ref="0x73651188f800"/>
        <function-ref name="granted" scoped="" ref="0x73651188f990"/>
        <function-ref name="isOwner" scoped="" ref="0x73651188fb20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x73651188fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x73651188e020" loc="73:/home/tofu/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x73651188e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x73651188e3a0"/>
        <function-ref name="userId" scoped="" ref="0x73651188e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x736510bf7400" loc="61:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x736510bf7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x736510bf7780"/>
        <function-ref name="stopDone" scoped="" ref="0x736510bf7910"/>
        <function-ref name="start" scoped="" ref="0x736510bf7aa0"/>
        <function-ref name="stop" scoped="" ref="0x736510bf7c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x736510bf7e80" loc="63:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x736510bf7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x736510bf6220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x736510bf48c0" loc="78:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x736510bf48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736510bf4c40"/>
        <function-ref name="runTask" scoped="" ref="0x736510bf4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x736510bf6470" loc="64:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510bf6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510bf67f0"/>
        <function-ref name="requested" scoped="" ref="0x736510bf6980"/>
        <function-ref name="granted" scoped="" ref="0x736510bf6b10"/>
        <function-ref name="isOwner" scoped="" ref="0x736510bf6ca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510bf6e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x736510bf3100" loc="73:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x736510bf3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736510bf3480"/>
        <function-ref name="runTask" scoped="" ref="0x736510bf3610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x736510bf8b30" loc="60:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x736510bf8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x736510bf7020"/>
        <function-ref name="stop" scoped="" ref="0x736510bf71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x736510bf40e0" loc="65:/home/tofu/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736510bf40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736510bf4460"/>
        <function-ref name="userId" scoped="" ref="0x736510bf45f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7365118811e0" loc="45:/home/tofu/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7365118811e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736512596e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7365123ba200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x73651187d630"/>
        <function-ref name="fired" scoped="" ref="0x736511880c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x73651187f9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x73651187f550"/>
        <function-ref name="getdt" scoped="" ref="0x73651187c020"/>
        <function-ref name="gett0" scoped="" ref="0x73651187dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x73651187f0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x736511881dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x73651187d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7365118802e0"/>
        <function-ref name="stop" scoped="" ref="0x7365118807b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7365113a0020" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7365113a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365113a03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7365113a0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365113a06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7365113a0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7365113a09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7365113a0c30" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7365113a0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x73651139f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x73651139f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x73651139f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x73651139f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x73651139f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x73651139f8b0" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x73651139f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x73651139fc30"/>
        <function-ref name="source" scoped="" ref="0x73651139fdc0"/>
        <function-ref name="address" scoped="" ref="0x73651139e020"/>
        <function-ref name="destination" scoped="" ref="0x73651139e1b0"/>
        <function-ref name="setSource" scoped="" ref="0x73651139e340"/>
        <function-ref name="setDestination" scoped="" ref="0x73651139e4d0"/>
        <function-ref name="type" scoped="" ref="0x73651139e660"/>
        <function-ref name="setType" scoped="" ref="0x73651139e7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x73651139e980"/>
        <function-ref name="setGroup" scoped="" ref="0x73651139eb10"/>
        <function-ref name="localGroup" scoped="" ref="0x73651139eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x73651139d020" loc="52:/home/tofu/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x73651139d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x73651139d3a0"/>
        <function-ref name="noAck" scoped="" ref="0x73651139d530"/>
        <function-ref name="wasAcked" scoped="" ref="0x73651139d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x736510bd8cd0" loc="44:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x736510bd8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x736510bd70a0"/>
        <function-ref name="getPayload" scoped="" ref="0x736510bd7230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x736510bd73c0"/>
        <function-ref name="cancel" scoped="" ref="0x736510bd7550"/>
        <function-ref name="sendDone" scoped="" ref="0x736510bd76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x736510bd7990" loc="46:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x736510bd7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x736510bd7d10"/>
        <function-ref name="getPayload" scoped="" ref="0x736510bd6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x736510bd61b0"/>
        <function-ref name="cancel" scoped="" ref="0x736510bd6340"/>
        <function-ref name="sendDone" scoped="" ref="0x736510bd64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x736510bd6720" loc="47:/home/tofu/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x736510bd6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x736510bd6aa0"/>
        <function-ref name="source" scoped="" ref="0x736510bd6c30"/>
        <function-ref name="address" scoped="" ref="0x736510bd6dc0"/>
        <function-ref name="destination" scoped="" ref="0x736510bd5020"/>
        <function-ref name="setSource" scoped="" ref="0x736510bd51b0"/>
        <function-ref name="setDestination" scoped="" ref="0x736510bd5340"/>
        <function-ref name="type" scoped="" ref="0x736510bd54d0"/>
        <function-ref name="setType" scoped="" ref="0x736510bd5660"/>
        <function-ref name="isForMe" scoped="" ref="0x736510bd57f0"/>
        <function-ref name="setGroup" scoped="" ref="0x736510bd5980"/>
        <function-ref name="localGroup" scoped="" ref="0x736510bd5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x736511818a00" loc="44:/home/tofu/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x736511818a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x736511818d80"/>
        <function-ref name="getPayload" scoped="" ref="0x736511815020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365118151b0"/>
        <function-ref name="cancel" scoped="" ref="0x736511815340"/>
        <function-ref name="sendDone" scoped="" ref="0x7365118154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7365117cb400" loc="48:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7365117cb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365117cb7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7365117cb930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365117cbac0"/>
        <function-ref name="cancel" scoped="" ref="0x7365117cbc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7365117cbde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7365117cc580" loc="46:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7365117cc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365117cc920"/>
        <function-ref name="getPayload" scoped="" ref="0x7365117ccab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365117ccc40"/>
        <function-ref name="cancel" scoped="" ref="0x7365117ccdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7365117cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7365117c9720" loc="50:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7365117c9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365117c9aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7365117c9c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7365117c9dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365117c8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7365117c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7365117c8480" loc="169:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7365117c8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7365117c8800"/>
        <function-ref name="runTask" scoped="" ref="0x7365117c8990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7365117c8c60" loc="126:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7365117c8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7365117c7020"/>
        <function-ref name="runTask" scoped="" ref="0x7365117c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7365117ca060" loc="49:/home/tofu/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7365117ca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7365117ca3e0"/>
        <function-ref name="source" scoped="" ref="0x7365117ca570"/>
        <function-ref name="address" scoped="" ref="0x7365117ca700"/>
        <function-ref name="destination" scoped="" ref="0x7365117ca890"/>
        <function-ref name="setSource" scoped="" ref="0x7365117caa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7365117cabb0"/>
        <function-ref name="type" scoped="" ref="0x7365117cad40"/>
        <function-ref name="setType" scoped="" ref="0x7365117c9020"/>
        <function-ref name="isForMe" scoped="" ref="0x7365117c91b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7365117c9340"/>
        <function-ref name="localGroup" scoped="" ref="0x7365117c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7365117c3140" loc="46:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7365117c3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7365117c34c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7365117c3650"/>
        <function-ref name="start" scoped="" ref="0x7365117c37e0"/>
        <function-ref name="stop" scoped="" ref="0x7365117c3970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7365117c11d0" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7365117c11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365117c1550"/>
        <function-ref name="getPayload" scoped="" ref="0x7365117c16e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365117c1870"/>
        <function-ref name="cancel" scoped="" ref="0x7365117c1a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7365117c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7365117bf630" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7365117bf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7365117bf9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7365117bfb40"/>
        <function-ref name="getPayload" scoped="" ref="0x7365117bfcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365117bfe60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7365117be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7365117bf020" loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7365117bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7365117bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7365117b9490" loc="53:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7365117b9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7365117b9810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7365117b99a0"/>
        <function-ref name="led1On" scoped="" ref="0x7365117b9b30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7365117b9cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7365117b9e50"/>
        <function-ref name="get" scoped="" ref="0x7365117b8020"/>
        <function-ref name="led1Off" scoped="" ref="0x7365117b81b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7365117b87f0"/>
        <function-ref name="set" scoped="" ref="0x7365117b8340"/>
        <function-ref name="led0On" scoped="" ref="0x7365117b84d0"/>
        <function-ref name="led2On" scoped="" ref="0x7365117b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7365117bc990" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7365117bc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7365117bcd10"/>
        <function-ref name="noAck" scoped="" ref="0x7365117b9020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7365117b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7365117be2d0" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7365117be2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7365117be650"/>
        <function-ref name="source" scoped="" ref="0x7365117be7e0"/>
        <function-ref name="address" scoped="" ref="0x7365117be970"/>
        <function-ref name="destination" scoped="" ref="0x7365117beb00"/>
        <function-ref name="setSource" scoped="" ref="0x7365117bec90"/>
        <function-ref name="setDestination" scoped="" ref="0x7365117bee20"/>
        <function-ref name="type" scoped="" ref="0x7365117bc020"/>
        <function-ref name="setType" scoped="" ref="0x7365117bc1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7365117bc340"/>
        <function-ref name="setGroup" scoped="" ref="0x7365117bc4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7365117bc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x73651175e9f0" loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x73651175e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x73651175ed70"/>
        <function-ref name="getPayload" scoped="" ref="0x73651175d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x73651175d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x73651175d340"/>
        <function-ref name="sendDone" scoped="" ref="0x73651175d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x73651175d760" loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x73651175d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x73651175dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7365117b57d0" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7365117b57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365117b5b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7365117b5d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x736511761020"/>
        <function-ref name="cancel" scoped="" ref="0x7365117611b0"/>
        <function-ref name="sendDone" scoped="" ref="0x736511761340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x73651175f400" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x73651175f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x73651175f780"/>
        <function-ref name="payloadLength" scoped="" ref="0x73651175f910"/>
        <function-ref name="getPayload" scoped="" ref="0x73651175faa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x73651175fc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x73651175fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7365117616c0" loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7365117616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x736511761a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x73651175e060" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x73651175e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x73651175e3e0"/>
        <function-ref name="noAck" scoped="" ref="0x73651175e570"/>
        <function-ref name="wasAcked" scoped="" ref="0x73651175e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x736511761cb0" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x736511761cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7365117600a0"/>
        <function-ref name="source" scoped="" ref="0x736511760230"/>
        <function-ref name="address" scoped="" ref="0x7365117603c0"/>
        <function-ref name="destination" scoped="" ref="0x736511760550"/>
        <function-ref name="setSource" scoped="" ref="0x7365117606e0"/>
        <function-ref name="setDestination" scoped="" ref="0x736511760870"/>
        <function-ref name="type" scoped="" ref="0x736511760a00"/>
        <function-ref name="setType" scoped="" ref="0x736511760b90"/>
        <function-ref name="isForMe" scoped="" ref="0x736511760d20"/>
        <function-ref name="setGroup" scoped="" ref="0x73651175f020"/>
        <function-ref name="localGroup" scoped="" ref="0x73651175f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7365117572f0" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7365117572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x736511757670"/>
        <function-ref name="stopDone" scoped="" ref="0x736511757800"/>
        <function-ref name="start" scoped="" ref="0x736511757990"/>
        <function-ref name="stop" scoped="" ref="0x736511757b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x736511756e10" loc="52:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x736511756e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7365125a90d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365117551c0"/>
        <function-ref name="getPayload" scoped="" ref="0x736511755350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365117554e0"/>
        <function-ref name="cancel" scoped="" ref="0x736511755670"/>
        <function-ref name="sendDone" scoped="" ref="0x736511755800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x73651175abc0" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651175abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736511757020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x736511756320" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x736511756320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7365125a90d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7365117566a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x736511754940" loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x736511754940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736511754cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736511754e50"/>
        <function-ref name="led1On" scoped="" ref="0x736511753020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7365117531b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x736511753340"/>
        <function-ref name="get" scoped="" ref="0x7365117534d0"/>
        <function-ref name="led1Off" scoped="" ref="0x736511753660"/>
        <function-ref name="led2Off" scoped="" ref="0x736511753ca0"/>
        <function-ref name="set" scoped="" ref="0x7365117537f0"/>
        <function-ref name="led0On" scoped="" ref="0x736511753980"/>
        <function-ref name="led2On" scoped="" ref="0x736511753b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x736511754020" loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x736511754020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7365125a90d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7365117543a0"/>
        <function-ref name="offset" scoped="" ref="0x736511754530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7365117546c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x736511747450" loc="66:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x736511747450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7365117477d0"/>
        <function-ref name="stopDone" scoped="" ref="0x736511747960"/>
        <function-ref name="start" scoped="" ref="0x736511747af0"/>
        <function-ref name="stop" scoped="" ref="0x736511747c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7365116e06e0" loc="332:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7365116e06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7365116e0a60"/>
        <function-ref name="runTask" scoped="" ref="0x7365116e0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x736511736540" loc="74:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x736511736540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7365117368c0"/>
        <function-ref name="stop" scoped="" ref="0x736511736a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7365117174f0" loc="191:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7365117174f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511717870"/>
        <function-ref name="runTask" scoped="" ref="0x736511717a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736511748d60" loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736511748d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736511747180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x736511730180" loc="75:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x736511730180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x736511730500"/>
        <function-ref name="flush" scoped="" ref="0x736511730690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7365116e3c70" loc="322:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7365116e3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7365116e2020"/>
        <function-ref name="runTask" scoped="" ref="0x7365116e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x736511737e30" loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x736511737e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x73651173f1e0"/>
        <function-ref name="resetSend" scoped="" ref="0x73651173f370"/>
        <function-ref name="dataReceived" scoped="" ref="0x73651173f500"/>
        <function-ref name="resetReceive" scoped="" ref="0x73651173f690"/>
        <function-ref name="putData" scoped="" ref="0x73651173f820"/>
        <function-ref name="putDone" scoped="" ref="0x73651173f9b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x73651173fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x73651173fdc0" loc="73:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x73651173fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x73651173c180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x73651173c310"/>
        <function-ref name="led1On" scoped="" ref="0x73651173c4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x73651173c630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x73651173c7c0"/>
        <function-ref name="get" scoped="" ref="0x73651173c950"/>
        <function-ref name="led1Off" scoped="" ref="0x73651173cae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7365117361b0"/>
        <function-ref name="set" scoped="" ref="0x73651173cc70"/>
        <function-ref name="led0On" scoped="" ref="0x73651173ce00"/>
        <function-ref name="led2On" scoped="" ref="0x736511736020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7365116dca00" loc="341:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7365116dca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7365116dcd80"/>
        <function-ref name="runTask" scoped="" ref="0x7365116db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7365117404a0" loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7365117404a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x736511740820"/>
        <function-ref name="nextByte" scoped="" ref="0x7365117409b0"/>
        <function-ref name="startSend" scoped="" ref="0x736511740b40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x736511740cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x73651173dad0" loc="68:/home/tofu/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x73651173dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x73651173de50"/>
        <function-ref name="byteReceived" scoped="" ref="0x736511744020"/>
        <function-ref name="endPacket" scoped="" ref="0x7365117441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x736511611020" loc="275:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x736511611020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7365116113a0"/>
        <function-ref name="runTask" scoped="" ref="0x736511611530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x736511617de0" loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x736511617de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7365125a90d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365116161c0"/>
        <function-ref name="getPayload" scoped="" ref="0x736511616350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365116164e0"/>
        <function-ref name="cancel" scoped="" ref="0x736511616670"/>
        <function-ref name="sendDone" scoped="" ref="0x736511616800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x736511611800" loc="158:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x736511611800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736511611b80"/>
        <function-ref name="runTask" scoped="" ref="0x736511611d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7365116176c0" loc="50:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7365116176c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7365125a90d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x736511617a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x736511616c20" loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x736511616c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7365125a90d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x736511614020"/>
        <function-ref name="offset" scoped="" ref="0x7365116141b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x736511614340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x736511613920" loc="57:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x736511613920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736511613ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736511613e30"/>
        <function-ref name="led1On" scoped="" ref="0x736511612020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7365116121b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x736511612340"/>
        <function-ref name="get" scoped="" ref="0x7365116124d0"/>
        <function-ref name="led1Off" scoped="" ref="0x736511612660"/>
        <function-ref name="led2On" scoped="" ref="0x736511612ca0"/>
        <function-ref name="set" scoped="" ref="0x736511612980"/>
        <function-ref name="led2Off" scoped="" ref="0x7365116127f0"/>
        <function-ref name="led0On" scoped="" ref="0x736511612b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x736511614e80" loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x736511614e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x736511613220"/>
        <function-ref name="nextByte" scoped="" ref="0x7365116133b0"/>
        <function-ref name="startSend" scoped="" ref="0x736511613540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7365116136d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x736511614590" loc="55:/home/tofu/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x736511614590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x736511614910"/>
        <function-ref name="byteReceived" scoped="" ref="0x736511614aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x736511614c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x736511601d20" loc="50:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x736511601d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x73651160a0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x73651160a270"/>
        <function-ref name="receive" scoped="" ref="0x73651160a400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x73651160a590"/>
        <function-ref name="receiveDone" scoped="" ref="0x73651160a720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x73651160a8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x73651160aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x73651160fe10" loc="48:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x73651160fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x73651160c1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x73651160c350"/>
        <function-ref name="dataReceived" scoped="" ref="0x73651160c4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x73651160c670"/>
        <function-ref name="putData" scoped="" ref="0x73651160c800"/>
        <function-ref name="putDone" scoped="" ref="0x73651160c990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x73651160cb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x73651160acc0" loc="51:/home/tofu/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x73651160acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7365116090a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736511609230"/>
        <function-ref name="led1On" scoped="" ref="0x7365116093c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x736511609550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7365116096e0"/>
        <function-ref name="get" scoped="" ref="0x736511609870"/>
        <function-ref name="led1Off" scoped="" ref="0x736511609a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7365115ff1b0"/>
        <function-ref name="set" scoped="" ref="0x736511609b90"/>
        <function-ref name="led0On" scoped="" ref="0x736511609d20"/>
        <function-ref name="led2On" scoped="" ref="0x7365115ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7365115e3020" loc="6:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7365115e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365115e33a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7365115e3530"/>
        <function-ref name="receive" scoped="" ref="0x7365115e36c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7365115e3850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7365115e5890" loc="5:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7365115e5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365115e5c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7365115e5da0"/>
        <function-ref name="receive" scoped="" ref="0x7365115e4020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7365115e41b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7365115e4340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7365115e44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7365115e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7365115e5080" loc="4:/home/tofu/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7365115e5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7365115e5400"/>
        <function-ref name="stop" scoped="" ref="0x7365115e5590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7365113d2c70" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7365113d2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7365113d1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7365113d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7365113d0440" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7365113d0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365113d07c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7365113d0950"/>
        <function-ref name="receive" scoped="" ref="0x7365113d0ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7365113d0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7365113cf020" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7365113cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7365113cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7365113d1440" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7365113d1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365113d17c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7365113d1950"/>
        <function-ref name="receive" scoped="" ref="0x7365113d1ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7365113d1c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7365113d1e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7365113d0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7365113d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7365113d2020" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7365113d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365113d23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7365113d2530"/>
        <function-ref name="request" scoped="" ref="0x7365113d26c0"/>
        <function-ref name="granted" scoped="" ref="0x7365113d2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7365113d29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7365115838a0" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7365115838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x736511583c20"/>
        <function-ref name="configure" scoped="" ref="0x736511583db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x736511581d00" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x736511581d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x73651157f0a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x73651157f230"/>
        <function-ref name="receive" scoped="" ref="0x73651157f3c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x73651157f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x73651157d1d0" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x73651157d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x73651157d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x736511582670" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x736511582670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365115829f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x736511582b80"/>
        <function-ref name="receive" scoped="" ref="0x736511582d10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x736511581020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7365115811b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x736511581340"/>
        <function-ref name="sendDone" scoped="" ref="0x7365115814d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x73651157fe50" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x73651157fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x73651157e210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x73651157e3a0"/>
        <function-ref name="request" scoped="" ref="0x73651157e530"/>
        <function-ref name="granted" scoped="" ref="0x73651157e6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x73651157e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7365115844d0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7365115844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511584850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7365115849e0"/>
        <function-ref name="request" scoped="" ref="0x736511584b70"/>
        <function-ref name="granted" scoped="" ref="0x736511584d00"/>
        <function-ref name="isOwner" scoped="" ref="0x736511583020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x736511578710" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x736511578710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x736511578a90"/>
        <function-ref name="txDone" scoped="" ref="0x736511578c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7365114eae70" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7365114eae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7365114e9240"/>
        <function-ref name="configure" scoped="" ref="0x7365114e93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7365114e8890" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7365114e8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365114e8c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7365114e8dc0"/>
        <function-ref name="receive" scoped="" ref="0x7365114e7020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7365114e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7365114e63e0" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7365114e63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7365114e6780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7365114e6a50" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7365114e6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7365114e6dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7365114e5020"/>
        <function-ref name="setUctl" scoped="" ref="0x7365114e51b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7365114e5340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7365114e54d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7365114e5660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7365114e57f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7365114e5980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7365114e5b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7365114e5ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7365114e5e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7365114e4020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7365114e41b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7365114e4440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7365114e45d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7365114e4760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7365114e48f0"/>
        <function-ref name="isUart" scoped="" ref="0x7365114e4a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7365114e4c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7365114e4da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7365114e3020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7365114e31b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7365114e3340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7365114e34d0"/>
        <function-ref name="getMode" scoped="" ref="0x7365114e3660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7365114e39f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7365114e3b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7365114e3d10"/>
        <function-ref name="tx" scoped="" ref="0x7365114e2020"/>
        <function-ref name="getUctl" scoped="" ref="0x7365114e21b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7365114e2340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7365114e24d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7365114e2660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7365114e27f0"/>
        <function-ref name="rx" scoped="" ref="0x7365114e2980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7365114e2b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7365114e2ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7365114e2e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7365114e1020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7365114e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7365114e9790" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7365114e9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365114e9b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7365114e9cc0"/>
        <function-ref name="receive" scoped="" ref="0x7365114e9e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7365114e8020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7365114e81b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7365114e8340"/>
        <function-ref name="sendDone" scoped="" ref="0x7365114e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7365114e0020" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7365114e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7365114e0e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7365114df800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7365114df340"/>
        <function-ref name="overflow" scoped="" ref="0x7365114dfcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7365114e75b0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7365114e75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365114e7950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7365114e7ae0"/>
        <function-ref name="request" scoped="" ref="0x7365114e7c70"/>
        <function-ref name="granted" scoped="" ref="0x7365114e7e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7365114e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7365114ea0d0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7365114ea0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365114ea470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7365114ea600"/>
        <function-ref name="request" scoped="" ref="0x7365114ea790"/>
        <function-ref name="granted" scoped="" ref="0x7365114ea920"/>
        <function-ref name="isOwner" scoped="" ref="0x7365114eaab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7365114e15b0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7365114e15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7365114e1950"/>
        <function-ref name="txDone" scoped="" ref="0x7365114e1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7365114dd120" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7365114dd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7365114dd4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7365114dd630"/>
        <function-ref name="led1On" scoped="" ref="0x7365114dd7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7365114dd950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7365114ddae0"/>
        <function-ref name="get" scoped="" ref="0x7365114ddc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7365114dde00"/>
        <function-ref name="led2On" scoped="" ref="0x7365114dc4d0"/>
        <function-ref name="set" scoped="" ref="0x7365114dc1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7365114dc020"/>
        <function-ref name="led0On" scoped="" ref="0x7365114dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7365114cf080" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7365114cf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7365114cf400"/>
        <function-ref name="txDone" scoped="" ref="0x7365114cf590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7365114d7b80" loc="76:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7365114d7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7365114d4020"/>
        <function-ref name="stop" scoped="" ref="0x7365114d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7365114d44d0" loc="77:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7365114d44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7365114d4850"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7365114d49e0"/>
        <function-ref name="setUctl" scoped="" ref="0x7365114d4b70"/>
        <function-ref name="enableUart" scoped="" ref="0x7365114d4d00"/>
        <function-ref name="setUrctl" scoped="" ref="0x7365114d3020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7365114d31b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7365114d3340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7365114d34d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7365114d3660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7365114d37f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7365114d3980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7365114d3b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7365114d3ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7365114d2020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7365114d21b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7365114d2340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7365114d24d0"/>
        <function-ref name="isUart" scoped="" ref="0x7365114d2660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7365114d27f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7365114d2980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7365114d2b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7365114d2ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7365114d2e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7365114d1020"/>
        <function-ref name="getMode" scoped="" ref="0x7365114d11b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7365114d1540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7365114d16d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7365114d1860"/>
        <function-ref name="tx" scoped="" ref="0x7365114d19f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7365114d1b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7365114d1d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7365114d0020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7365114d01b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7365114d0340"/>
        <function-ref name="rx" scoped="" ref="0x7365114d04d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7365114d0660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7365114d07f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7365114d0980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7365114d0b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7365114d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7365114c21f0" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7365114c21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365114c2570"/>
        <function-ref name="isInput" scoped="" ref="0x7365114c2700"/>
        <function-ref name="setResistor" scoped="" ref="0x7365114c2890"/>
        <function-ref name="toggle" scoped="" ref="0x7365114c2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7365114c2bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365114c2d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365114c1020"/>
        <function-ref name="get" scoped="" ref="0x7365114c11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365114c1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365114c14d0"/>
        <function-ref name="set" scoped="" ref="0x7365114c1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365114c17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365114c1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365114c1c10"/>
        <function-ref name="clr" scoped="" ref="0x7365114c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7365114c7910" loc="76:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7365114c7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7365114c7c90"/>
        <function-ref name="txDone" scoped="" ref="0x7365114c7e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7365114c01f0" loc="81:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7365114c01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365114c0570"/>
        <function-ref name="isInput" scoped="" ref="0x7365114c0700"/>
        <function-ref name="setResistor" scoped="" ref="0x7365114c0890"/>
        <function-ref name="toggle" scoped="" ref="0x7365114c0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7365114c0bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365114c0d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365114bf020"/>
        <function-ref name="get" scoped="" ref="0x7365114bf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365114bf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365114bf4d0"/>
        <function-ref name="set" scoped="" ref="0x7365114bf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365114bf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365114bf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365114bfc10"/>
        <function-ref name="clr" scoped="" ref="0x7365114bfda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7365114be1f0" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7365114be1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365114be570"/>
        <function-ref name="isInput" scoped="" ref="0x7365114be700"/>
        <function-ref name="setResistor" scoped="" ref="0x7365114be890"/>
        <function-ref name="toggle" scoped="" ref="0x7365114bea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7365114bebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365114bed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365114bd020"/>
        <function-ref name="get" scoped="" ref="0x7365114bd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365114bd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365114bd4d0"/>
        <function-ref name="set" scoped="" ref="0x7365114bd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365114bd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365114bd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365114bdc10"/>
        <function-ref name="clr" scoped="" ref="0x7365114bdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7365114cccc0" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7365114cccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7365114cb0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7365114cb230"/>
        <function-ref name="setUctl" scoped="" ref="0x7365114cb3c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7365114cb550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7365114cb6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7365114cb870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7365114cba00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7365114cbb90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7365114cbd20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7365114ca020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7365114ca1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7365114ca340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7365114ca4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7365114ca760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7365114ca8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7365114caa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7365114cac10"/>
        <function-ref name="isUart" scoped="" ref="0x7365114cada0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7365114c9020"/>
        <function-ref name="isSpi" scoped="" ref="0x7365114c91b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7365114c9340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7365114c94d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7365114c9660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7365114c97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7365114c9980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7365114c9d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7365114c8020"/>
        <function-ref name="setUbr" scoped="" ref="0x7365114c81b0"/>
        <function-ref name="tx" scoped="" ref="0x7365114c8340"/>
        <function-ref name="getUctl" scoped="" ref="0x7365114c84d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7365114c8660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7365114c87f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7365114c8980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7365114c8b10"/>
        <function-ref name="rx" scoped="" ref="0x7365114c8ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7365114c8e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7365114c7020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7365114c71b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7365114c7340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7365114c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7365114cc410" loc="74:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7365114cc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7365114cc790"/>
        <function-ref name="stop" scoped="" ref="0x7365114cc920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7365114c41f0" loc="79:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7365114c41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365114c4570"/>
        <function-ref name="isInput" scoped="" ref="0x7365114c4700"/>
        <function-ref name="setResistor" scoped="" ref="0x7365114c4890"/>
        <function-ref name="toggle" scoped="" ref="0x7365114c4a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7365114c4bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365114c4d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365114c3020"/>
        <function-ref name="get" scoped="" ref="0x7365114c31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365114c3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365114c34d0"/>
        <function-ref name="set" scoped="" ref="0x7365114c3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365114c37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365114c3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365114c3c10"/>
        <function-ref name="clr" scoped="" ref="0x7365114c3da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7365114c6210" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7365114c6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7365114c6590"/>
        <function-ref name="isInput" scoped="" ref="0x7365114c6720"/>
        <function-ref name="setResistor" scoped="" ref="0x7365114c68b0"/>
        <function-ref name="toggle" scoped="" ref="0x7365114c6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7365114c6bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7365114c6d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7365114c5020"/>
        <function-ref name="get" scoped="" ref="0x7365114c51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7365114c5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7365114c54d0"/>
        <function-ref name="set" scoped="" ref="0x7365114c5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7365114c57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7365114c5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7365114c5c10"/>
        <function-ref name="clr" scoped="" ref="0x7365114c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x73651143e110" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x73651143e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7365123ba640"/>
            <typename><typedef-ref name="T32khz" ref="0x7365123ba9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x73651143d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x73651143d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x73651143d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x73651143de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x736510b1ca90" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x736510b1ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x736510b1ce10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510b1b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x736510b16be0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x736510b16be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x736510b15020"/>
        <function-ref name="configure" scoped="" ref="0x736510b151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x736510b16440" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x736510b16440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x736510b167c0"/>
        <function-ref name="txDone" scoped="" ref="0x736510b16950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736510b1de00" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736510b1de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510b1c1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510b1c350"/>
        <function-ref name="request" scoped="" ref="0x736510b1c4e0"/>
        <function-ref name="granted" scoped="" ref="0x736510b1c670"/>
        <function-ref name="isOwner" scoped="" ref="0x736510b1c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x736510b1ba50" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x736510b1ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x736510b1bdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x736510b1a020"/>
        <function-ref name="setUctl" scoped="" ref="0x736510b1a1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x736510b1a340"/>
        <function-ref name="setUrctl" scoped="" ref="0x736510b1a4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x736510b1a660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x736510b1a7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x736510b1a980"/>
        <function-ref name="getUrctl" scoped="" ref="0x736510b1ab10"/>
        <function-ref name="resetUsart" scoped="" ref="0x736510b1aca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x736510b1ae30"/>
        <function-ref name="disableIntr" scoped="" ref="0x736510b19020"/>
        <function-ref name="setUtctl" scoped="" ref="0x736510b191b0"/>
        <function-ref name="getUbr" scoped="" ref="0x736510b19440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x736510b195d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x736510b19760"/>
        <function-ref name="isUartRx" scoped="" ref="0x736510b198f0"/>
        <function-ref name="isUart" scoped="" ref="0x736510b19a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x736510b19c10"/>
        <function-ref name="isSpi" scoped="" ref="0x736510b19da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x736510b18020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x736510b181b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x736510b18340"/>
        <function-ref name="enableIntr" scoped="" ref="0x736510b184d0"/>
        <function-ref name="getMode" scoped="" ref="0x736510b18660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x736510b189f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x736510b18b80"/>
        <function-ref name="setUbr" scoped="" ref="0x736510b18d10"/>
        <function-ref name="tx" scoped="" ref="0x736510b17020"/>
        <function-ref name="getUctl" scoped="" ref="0x736510b171b0"/>
        <function-ref name="disableUart" scoped="" ref="0x736510b17340"/>
        <function-ref name="enableSpi" scoped="" ref="0x736510b174d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x736510b17660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x736510b177f0"/>
        <function-ref name="rx" scoped="" ref="0x736510b17980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x736510b17b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x736510b17ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x736510b17e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x736510b16020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x736510b161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x736510b1b2b0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736510b1b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736510b1b630"/>
        <function-ref name="userId" scoped="" ref="0x736510b1b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x736511421510" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x736511421510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x736511421890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736511421a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x736511420af0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x736511420af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x736511420e70"/>
        <function-ref name="configure" scoped="" ref="0x73651141f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x736511424510" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x736511424510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x736511424890"/>
        <function-ref name="txDone" scoped="" ref="0x736511424a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736511423280" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511423280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511423600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511423790"/>
        <function-ref name="request" scoped="" ref="0x736511423920"/>
        <function-ref name="granted" scoped="" ref="0x736511423ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x736511423c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x736511421d20" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736511421d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7365114200e0"/>
        <function-ref name="userId" scoped="" ref="0x736511420270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x73651140aa90" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x73651140aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x73651140ae10"/>
        <function-ref name="userId" scoped="" ref="0x736511409020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x73651141eb60" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x73651141eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x73651141d020"/>
        <function-ref name="txDone" scoped="" ref="0x73651141d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x73651140a480" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x73651140a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651140a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x73651141d5b0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x73651141d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x73651141d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x73651141dc20" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x73651141dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x73651140a020"/>
        <function-ref name="txDone" scoped="" ref="0x73651140a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x736511406530" loc="92:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x736511406530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7365114068d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736511406a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x736511403250" loc="96:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x736511403250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7365114035f0"/>
        <function-ref name="configure" scoped="" ref="0x736511403780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x736511406cb0" loc="93:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736511406cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365114040a0"/>
        <function-ref name="requested" scoped="" ref="0x736511404230"/>
        <function-ref name="granted" scoped="" ref="0x7365114043c0"/>
        <function-ref name="isOwner" scoped="" ref="0x736511404550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7365114046e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736511407780" loc="91:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736511407780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736511407b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736511407cb0"/>
        <function-ref name="request" scoped="" ref="0x736511407e40"/>
        <function-ref name="granted" scoped="" ref="0x736511406020"/>
        <function-ref name="isOwner" scoped="" ref="0x7365114061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x736511404930" loc="94:/home/tofu/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736511404930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736511404cb0"/>
        <function-ref name="userId" scoped="" ref="0x736511404e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736510ab2ca0" loc="44:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736510ab2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736510ab10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x736510ab1330" loc="45:/home/tofu/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x736510ab1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x736510ab16b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x736510ab1840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x736510ab19d0"/>
        <function-ref name="dequeue" scoped="" ref="0x736510ab1b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x736510aae3a0" loc="55:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x736510aae3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x736510aae740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510aae8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x736510aab210" loc="60:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x736510aab210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x736510aab5b0"/>
        <function-ref name="configure" scoped="" ref="0x736510aab740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x736510aab9d0" loc="61:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x736510aab9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x736510aabd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x736510aaa020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x736510aaa1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x736510aaa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x736510aaeb20" loc="56:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510aaeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510aac020"/>
        <function-ref name="requested" scoped="" ref="0x736510aac1b0"/>
        <function-ref name="granted" scoped="" ref="0x736510aac340"/>
        <function-ref name="isOwner" scoped="" ref="0x736510aac4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510aac660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x736510aaa590" loc="62:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x736510aaa590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736510aaa910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736510aaaaa0"/>
        <function-ref name="led1On" scoped="" ref="0x736510aaac30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x736510aaadc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x736510aa9020"/>
        <function-ref name="get" scoped="" ref="0x736510aa91b0"/>
        <function-ref name="led1Off" scoped="" ref="0x736510aa9340"/>
        <function-ref name="led0On" scoped="" ref="0x736510aa9980"/>
        <function-ref name="set" scoped="" ref="0x736510aa9660"/>
        <function-ref name="led2On" scoped="" ref="0x736510aa94d0"/>
        <function-ref name="led2Off" scoped="" ref="0x736510aa97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x736510aaf540" loc="54:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x736510aaf540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510aaf8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x736510aafa70"/>
        <function-ref name="request" scoped="" ref="0x736510aafc00"/>
        <function-ref name="granted" scoped="" ref="0x736510aafd90"/>
        <function-ref name="isOwner" scoped="" ref="0x736510aae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x736510aac8b0" loc="57:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736510aac8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736510aacc30"/>
        <function-ref name="userId" scoped="" ref="0x736510aacdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x736510aa9c50" loc="75:/home/tofu/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x736510aa9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x736510aa8020"/>
        <function-ref name="runTask" scoped="" ref="0x736510aa81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7365113ff780" loc="72:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7365113ff780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7365113ffb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7365113ffd50" loc="73:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7365113ffd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365113ea100"/>
        <function-ref name="requested" scoped="" ref="0x7365113ea290"/>
        <function-ref name="granted" scoped="" ref="0x7365113ea420"/>
        <function-ref name="isOwner" scoped="" ref="0x7365113ea5b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7365113ea740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7365113ff020" loc="70:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7365113ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7365113ff3a0"/>
        <function-ref name="stop" scoped="" ref="0x7365113ff530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7365113ea990" loc="74:/home/tofu/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7365113ea990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7365113ead10"/>
        <function-ref name="userId" scoped="" ref="0x7365113e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x736510a79b00" loc="62:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x736510a79b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x736510a79e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x736510a770f0" loc="63:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x736510a770f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x736510a77470"/>
        <function-ref name="requested" scoped="" ref="0x736510a77600"/>
        <function-ref name="granted" scoped="" ref="0x736510a77790"/>
        <function-ref name="isOwner" scoped="" ref="0x736510a77920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x736510a77ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x736510a793a0" loc="60:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x736510a793a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x736510a79720"/>
        <function-ref name="stop" scoped="" ref="0x736510a798b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x736510a77d00" loc="64:/home/tofu/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x736510a77d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x736510a760a0"/>
        <function-ref name="userId" scoped="" ref="0x736510a76230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7365113ca920" loc="3:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7365113ca920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7365113caca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7365113c9020" loc="4:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7365113c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7365113c93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7365113c9530"/>
        <function-ref name="request" scoped="" ref="0x7365113c96c0"/>
        <function-ref name="granted" scoped="" ref="0x7365113c9850"/>
        <function-ref name="isOwner" scoped="" ref="0x7365113c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7365113ca0c0" loc="2:/home/tofu/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7365113ca0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7365113ca440"/>
        <function-ref name="stop" scoped="" ref="0x7365113ca5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7365113b88d0" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7365113b88d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7365113b8c50"/>
        <function-ref name="offset" scoped="" ref="0x7365113b8de0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7365113b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x736511399720" loc="43:/home/tofu/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x736511399720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7365113755f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7365113733a0"/>
        <function-ref name="element" scoped="" ref="0x736511373a10"/>
        <function-ref name="full" scoped="" ref="0x736511376810"/>
        <function-ref name="maxSize" scoped="" ref="0x736511375170"/>
        <function-ref name="dequeue" scoped="" ref="0x736511375ca0"/>
        <function-ref name="empty" scoped="" ref="0x736511376390"/>
        <function-ref name="size" scoped="" ref="0x736511376c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x73651136e5a0" loc="93:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x73651136e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x73651136a4a0"/>
        <function-ref name="enqueue" scoped="" ref="0x736511369260"/>
        <function-ref name="element" scoped="" ref="0x7365113698d0"/>
        <function-ref name="full" scoped="" ref="0x73651136d680"/>
        <function-ref name="maxSize" scoped="" ref="0x73651136a020"/>
        <function-ref name="dequeue" scoped="" ref="0x73651136ab50"/>
        <function-ref name="empty" scoped="" ref="0x73651136d200"/>
        <function-ref name="size" scoped="" ref="0x73651136db00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x736511368020" loc="94:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x736511368020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7365113683a0"/>
        <function-ref name="getPayload" scoped="" ref="0x736511368530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365113686c0"/>
        <function-ref name="cancel" scoped="" ref="0x736511368850"/>
        <function-ref name="sendDone" scoped="" ref="0x7365113689e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x736511368c70" loc="95:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x736511368c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x736511367020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7365113671b0"/>
        <function-ref name="getPayload" scoped="" ref="0x736511367340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7365113674d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x736511367660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x736511361020" loc="114:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x736511361020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7365113613a0"/>
        <function-ref name="runTask" scoped="" ref="0x736511361530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x73651136f470" loc="89:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x73651136f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x73651136f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7365113678e0" loc="96:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7365113678e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x736511367c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x736511367df0"/>
        <function-ref name="led1On" scoped="" ref="0x736511365020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7365113651b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x736511365340"/>
        <function-ref name="get" scoped="" ref="0x7365113654d0"/>
        <function-ref name="led1Off" scoped="" ref="0x736511365660"/>
        <function-ref name="led2Off" scoped="" ref="0x736511365ca0"/>
        <function-ref name="set" scoped="" ref="0x7365113657f0"/>
        <function-ref name="led0On" scoped="" ref="0x736511365980"/>
        <function-ref name="led2On" scoped="" ref="0x736511365b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x73651136cc90" loc="90:/home/tofu/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x73651136cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x73651136e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x73651134a7e0" loc="43:/home/tofu/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x73651134a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x73651134ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x736511347b20" loc="94:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x736511347b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x736511344020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x736511344300" loc="95:/home/tofu/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x736511344300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x736511344680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x73651133c0f0" loc="39:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x73651133c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x73651133c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x73651133c810" loc="40:/home/tofu/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x73651133c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x73651133cb90"/>
        <function-ref name="stopDone" scoped="" ref="0x73651133cd20"/>
        <function-ref name="start" scoped="" ref="0x73651133b020"/>
        <function-ref name="stop" scoped="" ref="0x73651133b1b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/tofu/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x736512594e30" loc="62:/home/tofu/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x736512595a60" loc="60:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x736512564b40" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x736512566de0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x736512564420" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x736512566700" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7365125655a0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x73651256a910" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x736512566020" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x736512565cc0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x736512707020" loc="62:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7365129ccdd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x736512511020" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x736512512cc0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x736512515390" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x73651255c5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x73651255a020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x736512511890" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7365125107b0" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x736512512560" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x736512510020" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x736512515b30" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x736512514350" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x736512514da0" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x73651255c5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x73651255a020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x736512514b20" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x73651255c5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x73651255a020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7365125040e0" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x736512501730" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7365125014b0" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7365125002e0" loc="91:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x736512500060" loc="91:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x736512502ca0" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7365125023e0" loc="68:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x736512504a90" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x736512504810" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x73651250b3e0" loc="40:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x73651250bd60" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x73651250bae0" loc="41:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x736512509790" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x736512509510" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7365125082a0" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x736512508020" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x736512508990" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x73651251b810" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7365125182a0" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x736512518020" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x73651251a020" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x736512521ab0" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x73651251a760" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x73651251d9b0" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x73651251b120" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x73651251d270" loc="46:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x73651251c0e0" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x73651251c9f0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x73651251c770" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x736512518cb0" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x736512518a30" loc="56:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7365124da1f0" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x73651262aa80" loc="85:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7365126291f0" loc="86:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x73651262a2b0" loc="79:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/tofu/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x736512843830" loc="52:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x736512a85020" loc="57:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x736512a84020" loc="72:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x736512a85790" loc="65:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x736512a79350" loc="67:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x736512a79ba0" loc="75:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/tofu/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x73651239d740" loc="49:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x73651239d740"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x73651239a030" loc="55:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x73651239ad60" loc="63:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x73651239d740"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x73651239a7b0" loc="63:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x73651239aad0" loc="63:/home/tofu/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x73651239d740"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7365123b3a00" loc="61:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7365123b11f0" loc="67:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7365123b19d0" loc="72:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7365123b0940" loc="83:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7365123ae120" loc="100:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7365123ae930" loc="117:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7365123b0190" loc="77:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7365123ac4c0" loc="134:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7365123ac240" loc="134:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7365123b3270" loc="56:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7365123af190" loc="89:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7365123af920" loc="94:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/tofu/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7365123b7870" loc="53:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7365123b7870"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7365123a37c0" loc="136:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7365123a6020" loc="83:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7365123a5da0" loc="114:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7365123a57d0" loc="114:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7365123a5b10" loc="114:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7365123a5020" loc="98:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7365123a28a0" loc="151:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7365123a2020" loc="144:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7365123a6800" loc="92:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7365123a9450" loc="64:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7365123a91d0" loc="64:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7365123a4dc0" loc="129:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7365123a47f0" loc="129:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7365123a4b30" loc="129:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7365123a8020" loc="73:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7365123a9c90" loc="73:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7365123a8820" loc="78:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x73651237d3b0" loc="44:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x73651237dae0" loc="45:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x73651237e580" loc="42:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x73651237c9b0" loc="47:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x73651237ec80" loc="43:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x73651237c270" loc="46:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x736512382760" loc="40:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x736512382e30" loc="41:/home/tofu/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x736512352350" loc="78:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x736512352aa0" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x73651234d390" loc="110:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x73651234d110" loc="110:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x736512355bd0" loc="58:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7365123519d0" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x73651234dc80" loc="117:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x736512351270" loc="85:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x736512353b90" loc="73:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x73651234e0e0" loc="99:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x736512353390" loc="66:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x736512358d10" loc="48:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x736512350190" loc="92:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x73651234e880" loc="101:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x736512350950" loc="94:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x736512355480" loc="53:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x736512104c50" loc="53:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x736512104c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7365121005a0" loc="61:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7365120fb5d0" loc="56:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7365120fb5d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7365120fb810" loc="56:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7365120f5390" loc="109:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7365120f73b0" loc="78:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7365120f69d0" loc="103:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7365120f6400" loc="103:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7365120f6740" loc="103:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7365120f7b90" loc="88:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7365120f5b80" loc="116:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7365120f9390" loc="66:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7365120f9110" loc="66:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120fb810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7365120f9bc0" loc="73:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/tofu/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x73651208de20" loc="57:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x73651208de20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7365120880d0" loc="57:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120880d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7365120889f0" loc="64:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7365120880d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x736512087b10" loc="76:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7365120872b0" loc="71:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7365120862b0" loc="82:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/tofu/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x736511f624a0" loc="57:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f624a0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x736511f5f810" loc="89:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f624a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511f60e50" loc="89:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x736511f5f210" loc="90:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f624a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x736511f5f570" loc="90:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x736511f613e0" loc="68:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f624a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x736511f62da0" loc="68:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f624a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x736511f61150" loc="68:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x736511f60630" loc="78:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x736511f603b0" loc="78:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x736511f5cdf0" loc="102:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511f5c7b0" loc="102:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x736511f5cb60" loc="102:/home/tofu/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x736512f3f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/tofu/tinyos-main/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x736511f666b0" loc="41:/home/tofu/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x736511f3c4c0" loc="45:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x736511f3c4c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x736511f39020" loc="58:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/tofu/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x736511f3c4c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x736511f2b7f0" loc="120:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x736511f2c7d0" loc="97:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x736511f2fe20" loc="88:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x736511f2b020" loc="102:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x736511f2a270" loc="128:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/tofu/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x736511f34930" loc="52:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f34930"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x736511f31270" loc="58:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x736511f30020" loc="66:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f34930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511f31a30" loc="66:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x736511f31d50" loc="66:/home/tofu/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x736511f34930"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x736511f184b0" loc="189:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x736511f21450" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x736511f211d0" loc="84:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x736511f20940" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x736511f20340" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x736511f206b0" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x736511f1a4c0" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x736511f1b260" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x736511f1bb00" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x736511f1be80" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x736511f1a210" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x736511f16dd0" loc="227:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x736511f16730" loc="227:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x736511f16ac0" loc="227:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x736511f1dd30" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x736511f1fa30" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x736511f1d380" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x736511f1d710" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x736511f1da80" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x736511f17120" loc="206:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x736511f18e70" loc="206:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x736511ec7e20" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x736511ec7160" loc="86:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x736511f54850"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x736511f54d20"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x736511ec9af0" loc="86:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x736511f55c10"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x736511f55330"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x736511ec8020" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x736511f54850"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x736511f54d20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x736511ec8390" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x736511ec8730" loc="87:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x736511ec8ae0" loc="88:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x736511ec8e50" loc="88:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x736511ec6dc0" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x736511ec67a0" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x736511ec6b30" loc="107:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x736511ec3780" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x736511ec2020" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x736511ebadb0" loc="95:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x736511eb66a0" loc="105:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/tofu/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x736511ea7560" loc="63:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736511f43470"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x736511f41020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x736511ea56c0" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x736511f54850"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x736511f54d20"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x736511ea5440" loc="82:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x736511ea2d90" loc="106:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x736511ea0020" loc="118:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x736511ea17d0" loc="112:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x736511ea1550" loc="112:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x736511ea7d80" loc="68:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736511f406d0"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x736511f3e020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x736511ea6b70" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x736511f54850"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x736511f54d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x736511ea6520" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x736511ea68e0" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x736511f54850"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x736511f54d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x736511e9f0e0" loc="128:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x736511ea92a0" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736511f43470"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x736511f41020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x736511ea9020" loc="51:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736511f43470"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x736511f41020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x736511ea42a0" loc="89:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x736511ea4020" loc="89:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x736511ea4d20" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x736511ea4aa0" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x736511ea25d0" loc="101:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x736511ea07e0" loc="123:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x736511e9f880" loc="133:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x736511ea9d00" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736511f406d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x736511f3e020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x736511ea9a80" loc="57:/home/tofu/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x736511f406d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x736511f3e020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x736511eaedb0" loc="90:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x736511eab6b0" loc="98:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x736511d92b30" loc="53:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x736511d8f4e0" loc="61:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x736511d8c550" loc="65:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x736511d90d00" loc="59:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x736511d82580" loc="79:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x736511d8d5e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x736511d82300" loc="79:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x736511d8d5e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x736511d845a0" loc="53:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x736511d83110" loc="62:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x736511d8d5e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x736511d84e20" loc="62:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x736511d8d5e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x736511d83a20" loc="70:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/tofu/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x736511d8d5e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x736511d09ab0" loc="113:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x736511d09830" loc="113:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x736511d07020" loc="138:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x736511d08d30" loc="138:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x736511d0cdf0" loc="104:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x736511d08350" loc="130:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/tofu/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x736511b3d6a0" loc="84:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511b3d0d0" loc="84:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x736511b3d410" loc="84:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x736511b3c020" loc="92:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x736511b3f8b0" loc="76:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x736511b40270" loc="61:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x736511b3b8e0" loc="109:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x736511b3b660" loc="109:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x736511b41020" loc="47:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x736511b3a3d0" loc="116:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511b3a150" loc="116:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x736511b3ce10" loc="100:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511b3c850" loc="100:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x736511b3cb80" loc="100:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x736511b419f0" loc="54:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511b41770" loc="54:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x736511b3f050" loc="69:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x736511b40a60" loc="69:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x736511b40da0" loc="69:/home/tofu/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x736511af7b10" loc="68:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x736511af7350" loc="61:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x736511af8b70" loc="54:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x736511af82b0" loc="53:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x736511a3d7b0" loc="52:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x736511a3b2b0" loc="72:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x736511a3d020" loc="47:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x736511a3ca60" loc="67:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x736511a3c7e0" loc="67:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x736511a40830" loc="42:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x736511a3c020" loc="59:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/tofu/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x73651192d070" loc="56:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x73651192c190" loc="73:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x73651192f7c0" loc="46:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x73651192d8e0" loc="65:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x73651192cac0" loc="81:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/tofu/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7365118b9120" loc="62:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/tofu/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7365118b5cb0" loc="95:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7365118b24e0" loc="105:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/tofu/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7365118607e0" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x736511863e50" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x736511860210" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x736511860540" loc="80:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x736511859020" loc="135:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651185b890" loc="135:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x73651185bbc0" loc="135:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x73651185b020" loc="123:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x73651185db50" loc="96:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651185d8d0" loc="96:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x73651185e0c0" loc="110:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651185ca80" loc="110:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x73651185cdd0" loc="110:/home/tofu/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7365118578d0" loc="65:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x736511857650" loc="65:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x736511854990" loc="78:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x736511854710" loc="78:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x736511851d30" loc="126:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x736511851730" loc="126:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x736511851a60" loc="126:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x736511852da0" loc="106:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x736511853e30" loc="94:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x736511853870" loc="94:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x736511853ba0" loc="94:/home/tofu/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x736511841840" loc="177:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7365125ac930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7365118415c0" loc="177:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x73651184a400" loc="88:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x73651184a180" loc="88:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x73651184c840" loc="68:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x73651184b350" loc="78:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x73651184b0d0" loc="78:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x736511846d00" loc="121:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x736511846720" loc="121:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x736511846a70" loc="121:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x736511849800" loc="103:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x736511849220" loc="103:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x736511849570" loc="103:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7365125acd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7365118432e0" loc="147:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x736511843060" loc="147:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x736511842680" loc="162:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7365118420d0" loc="162:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7365118423f0" loc="162:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7365125ac550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7365118450b0" loc="136:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x736511847e00" loc="136:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x73651183ed00" loc="187:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7365125ac930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x73651183e720" loc="187:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x73651183ea70" loc="187:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7365125ac930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x73651183db50" loc="195:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/tofu/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7365125ac930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x73651183a5f0" loc="59:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651183a370" loc="59:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7365118397d0" loc="71:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x736511839550" loc="71:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x736511837940" loc="85:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7365118376c0" loc="85:/home/tofu/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x736511830020" loc="75:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x736511833930" loc="75:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x736511833c60" loc="75:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x73651182c660" loc="125:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651182c060" loc="125:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x73651182c390" loc="125:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x73651182b790" loc="112:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x73651182f350" loc="89:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651182f0d0" loc="89:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x73651182d870" loc="100:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651182d290" loc="100:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x73651182d5e0" loc="100:/home/tofu/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7365117bd300" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
              <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7365117c0870" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7365117c0bc0" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7365117bd020" loc="78:/home/tofu/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x73651174f630" loc="31:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x73651174f020" loc="31:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x73651174f3a0" loc="31:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x736511752670" loc="15:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x736511751620" loc="23:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x736511751020" loc="23:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x73651259c720"/>
                <typename><typedef-ref name="message_t" ref="0x73651259bd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x736511751390" loc="23:/home/tofu/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x736511732e30" loc="54:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7365117326c0" loc="49:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x73651173b120" loc="56:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x736511739560" loc="72:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7365117372a0" loc="94:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x736511737020" loc="94:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x736511739de0" loc="79:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x73651173bc90" loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x73651173ba10" loc="65:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x736511737b00" loc="100:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7365117386e0" loc="85:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/tofu/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x736511743990" loc="71:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x736511742350" loc="81:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x736511743020" loc="62:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x736511746c30" loc="62:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x736511740020" loc="91:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x736511742c50" loc="91:/home/tofu/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x736511745c60" loc="62:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x73651173ea60" loc="69:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x73651173e7e0" loc="69:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x73651173d5c0" loc="80:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x73651173d340" loc="80:/home/tofu/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x73651160bde0" loc="48:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x73651160b810" loc="48:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x73651160bb50" loc="48:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x736511605ac0" loc="79:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x736511605840" loc="79:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x736511603930" loc="90:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x736511603360" loc="90:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7365116036a0" loc="90:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x736511604740" loc="65:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7365116012c0" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x736511600920" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x736511600c60" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x736511601020" loc="99:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x736511605070" loc="72:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x736511606720" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x736511608db0" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x736511606130" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x736511606480" loc="57:/home/tofu/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7365115e15b0" loc="50:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7365115e1330" loc="50:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7365115e1df0" loc="59:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7365115dfcf0" loc="69:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7365115df700" loc="69:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7365115dfa60" loc="69:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7365115ddb50" loc="79:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/tofu/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x736511586230" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7365115a8450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7365115a8870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x73651157ad70" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x73651157aaf0" loc="54:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x73651157a350" loc="49:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/tofu/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x73651154aaf0" loc="213:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x736511556790" loc="143:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x73651156b2a0" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d93b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7365115d9bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x73651156b020" loc="50:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d93b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7365115d9bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7365115587b0" loc="123:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x736511560780" loc="70:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d4360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7365115d4ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x736511560500" loc="70:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d4360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7365115d4ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x73651154fe70" loc="180:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x73651154c480" loc="197:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x736511561d20" loc="65:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d6290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7365115d6a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x73651155f020" loc="75:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d4360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7365115d4ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x73651155cd50" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x73651155cad0" loc="97:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x73651155c3b0" loc="95:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x73651154f740" loc="179:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x736511561530" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d6290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7365115d6a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7365115612b0" loc="60:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d6290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7365115d6a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x73651155d1f0" loc="85:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x73651154e5d0" loc="181:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x73651155dbd0" loc="90:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x73651155d950" loc="90:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x73651155a730" loc="113:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x736511558020" loc="118:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x736511551840" loc="177:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x736511553790" loc="163:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7365115577e0" loc="133:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x73651154f020" loc="178:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x736511554020" loc="148:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x73651154ecf0" loc="182:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x73651155b570" loc="103:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7365115e2330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7365115dba50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x73651154d4c0" loc="187:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x73651154a350" loc="207:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x73651155f9c0" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x73651155f740" loc="80:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x736512f3f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7365115494d0" loc="224:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x736511549250" loc="224:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x73651156ba80" loc="55:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7365115d93b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7365115d9bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x736511557020" loc="128:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x736511554770" loc="153:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x736511551020" loc="174:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7365115a8450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7365115a8870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x736511552cf0" loc="174:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7365115a8450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7365115a8870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7365115522a0" loc="168:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7365115bc420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7365115bc840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x736511552020" loc="168:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7365115bc420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7365115bc840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x736511549d90" loc="231:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x73651154dcb0" loc="192:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x73651155bd80" loc="108:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x73651154cbe0" loc="202:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x736511553020" loc="158:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x736511556020" loc="138:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x73651141bd50" loc="39:/home/tofu/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7365113961e0" loc="43:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7365113961e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7365113939e0" loc="80:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7365113961e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7365113924a0" loc="97:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x736512a80cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7365113961e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x736511392220" loc="97:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7365113961e0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x736512f45c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x736512f45c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x736511390440" loc="108:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7365113961e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7365113901c0" loc="108:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x736511395270" loc="57:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x736511393270" loc="72:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x736511391610" loc="88:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7365113961e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x736511396a90" loc="50:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x736512a89090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7365113959f0" loc="65:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/tofu/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x736512f3f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x73651136c940" loc="49:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x73651136c6c0" loc="49:/home/tofu/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
